{"version":3,"sources":["constants.js","utils/common-functions.js","components/row.js","components/table.js","components/level.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/minigraph.js","components/updates.js","components/search.js","components/popup.js","components/footer.js","components/home.js","components/languageswitcher.js","components/navbar.js","components/links.js","components/faq.js","components/patientsview.js","components/patients.js","components/downloadblock.js","components/patientdb.js","components/Charts/genderchart.js","components/Charts/agechart.js","components/Charts/nationalitychart.js","components/Charts/allstates.js","components/Charts/totalconfirmedchart.js","components/Charts/dailyconfirmedchart.js","components/deepdive.js","components/resourcetable.js","components/resources.js","components/clusters.js","components/deltabargraph.js","components/state.js","App.js","serviceWorker.js","utils/ScrollToTop.js","i18n/index.js","index.js"],"names":["MAP_TYPES","MAP_META","Myanmar","name","geoDataFile","mapType","graphObjectName","STATE_CODES","reverseStateCodes","Object","keys","map","key","index","STATE_CODES_REVERSE","stateCodes","push","code","STATE_CODES_ARRAY","months","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","preprocessTimeseries","timeseries","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","moment","toDate","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","format","parseStateTimeseries","states_daily","statewiseSeries","reduce","a","c","i","isBefore","entries","forEach","k","v","stateCode","toLowerCase","prev","length","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","handleSort","column","setItem","Fragment","className","total","onMouseEnter","onHighlightState","onMouseLeave","onClick","style","background","fontWeight","reveal","display","statenotes","content","styles","tooltip","borderRadius","fontSize","left","opacity","padding","wrapper","cursor","position","textAlign","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","colSpan","title","parse","lastupdatedtime","formatDistance","e","window","innerWidth","district","onHighlightDistrict","delta","Unknown","Table","t","useTranslation","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","to","height","Level","setData","ramp","n","canvas","document","createElement","context","width","getContext","fillStyle","fillRect","legend","x","tickSize","marginTop","marginRight","marginBottom","marginLeft","ticks","tickFormat","tickValues","svg","d3","attr","tickAdjust","g","selectAll","interpolate","Math","min","domain","range","copy","rangeRound","append","toDataURL","interpolator","assign","undefined","round","invertExtent","thresholds","quantiles","thresholdFormat","join","max","bandwidth","call","select","remove","text","node","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","choroplethMap","useRef","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","geoData","path","propertyField","current","topology","topojson","objects","projection","widthStyle","fitWidth","heightStyle","fitSize","bBox","bounds","split","svgLegend","colorScale","maxConfirmed","widthLegend","margin","right","barWidth","heightLegend","isInteger","onceTouchedRegion","features","properties","on","handleMouseover","stopPropagation","parseFloat","toFixed","toString","toTitleCase","err","console","log","str","charAt","toUpperCase","prevCount","classed","nodes","parentNode","appendChild","id","preserveAspectRatio","ref","getRegionFromState","region","MapExplorer","forwardRef","stateDistrictWiseData","regionHighlighted","stateTestData","onMapHighlightChange","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","useMemo","currentMapData","acc","districtWiseData","districtData","find","getRegionFromDistrict","newMap","switchMapToState","topDistrict","b","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","type","chartType","setChartType","moving","setMoving","svgRef1","svgRef2","svgRef3","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","ts","chartRight","chartBottom","T","svg1","svg2","svg3","dateMin","setDate","getDate","dateMax","yScales","xScale","clamp","numTicksX","xAxis","yAxis","yScale","tickPadding","svgArray","plotTotal","dataTypesTotal","dataTypesDaily","colors","uniformScaleMin","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","transition","duration","typeTotal","typeDaily","empty","enter","reverse","getTotalLength","p","getPointAtLength","y","repeat","curve","mousemove","mouseout","xm","this","invert","bisectDate","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","currentStatusCount","currentDiff","formatedDiff","aria-label","Minigraph","timeSeriesData","setTimeSeriesData","svgRef4","svg4","dailyMin","dailyactive","dailyMax","domainMinMax","datum","totalLength","delay","target","viewBox","Updates","updates","setUpdates","fetched","setFetched","axios","get","then","response","catch","activity","update","replace","timestamp","dangerouslySetInnerHTML","__html","engine","Bloodhound","initialize","local","queryTokenizer","tokenizers","whitespace","datumTokenizer","obj","districtEngine","limit","essentialsEngine","indexRemote","remote","url","transform","resources","Search","searchValue","setSearchValue","expand","setExpand","results","setResults","searchInput","handleSearch","search","datums","result","stateObj","route","districtObj","essentialsObj","nameoftheorganisation","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","setNativeValue","element","valueSetter","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","onFocus","event","onBlur","onChange","href","match","onMouseDown","preventDefault","dispatchEvent","Event","bubbles","popup","setPopup","goldenNumber","Footer","rel","Home","graphOption","setGraphOption","lastUpdated","setLastUpdated","activeStateCode","setActiveStateCode","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","showUpdates","setShowUpdates","getStates","Promise","all","statesDailyResponse","statewise","cases_time_series","statecode","refs","htmlFor","checked","disabled","JSON","stringify","selected","LanguageSwitcher","i18n","changeLanguage","language","locales","lang","Navbar","pages","page","showInNavbar","pageLink","animationDelayForNavbar","location","pathname","displayName","Links","FAQ","faq","setFaq","getFAQs","scrollTo","error","question","answer","PatientsView","logs","patient","indexTwo","applyClass","setModal","setPatient","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","getElementById","body","classList","add","parseByDate","dateannounced","list","colorMode","gender","typeoftransmission","nationality","getClassNameFn","patientIndex","switchPatient","contractedfromwhichpatientsuspected","agebracket","statepatientnumber","notes","source1","source2","source3","CSVDownloadLink","csv","Parser","encodeURIComponent","download","DownloadBlock","dataJSON","filterByObject","filters","PatientDB","filteredPatients","setFilteredPatients","setError","useLocation","setColorMode","scaleMode","setScaleMode","detectedstate","detecteddistrict","detectedcity","setFilters","raw_data","fetchRawData","handleFilters","label","newFilters","selectedIndex","getSortedValues","setValues","Set","size","Array","from","GenderChart","defaults","global","tooltips","intersect","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","hover","male","female","unknown","chartData","datasets","labels","chartOptions","layout","top","bottom","events","responsive","maintainAspectRatio","callbacks","tooltipItem","dataset","datasetIndex","_meta","currentValue","options","AgeChart","ages","fill","age","scales","xAxes","stacked","gridLines","yAxes","NationalityChart","hasOwnProperty","AllStatesChart","dates","chartReference","React","createRef","elements","line","statesData","Map","status","trim","has","previousValue","sortedMap","borderCapStyle","pointBackgroundColor","pointHoverRadius","point","radius","tension","beginAtZero","precision","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","ci","chartInstance","meta","getDatasetMeta","hidden","TotalConfirmedChart","deceased","callback","values","DailyConfirmedChart","barDataSet","DeepDive","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","rawDataResponse","stateDailyResponse","usePanelSummaryStyles","makeStyles","theme","flexDirection","justifyContent","root","usePanelDetailsStyles","useListStyles","usePanelStyles","useItemTextStyles","primary","fontFamily","fontStyle","fontTransform","secondary","wordWrap","getNumbersLink","initialValue","numbf","numbg","numberList","iv","getFormattedLinkForAccordion","s3","formatedLink","links","String","getFormattedLink","rendercell","celli","cell","renderedvalue","link","row","allCells","FormattedCell","editable","setValue","reurl1","reinsta","refb","getSuggestions","inputValue","resource","includes","getSuggestionValue","suggestion","renderSuggestion","ResourceTable","columns","isDesktop","totalCount","onScrollUpdate","indianstate","classesPannelSummary","classesPanel","classesListItemText","classesPanelDetails","classesList","expanded","setExpanded","defaultColumn","Cell","suggestions","setSuggestions","prevIndianState","prevCity","prevCategory","onSuggestionsFetchRequested","inputProps","placeholder","newValue","renderInputComponent","TextField","fullWidth","InputLabelProps","shrink","variant","InputProps","startAdornment","InputAdornment","useTable","initialState","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","alwaysRenderSuggestions","dataLength","hasMore","next","loader","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cellindex","getCellProps","alignItems","maxWidth","overflow","ExpansionPanel","classes","panel","isExpanded","ExpansionPanelSummary","substring","parseText","ExpansionPanelDetails","List","disablePadding","dense","ListItem","divider","ListItemText","useFormControlStyles","flexGrow","useInputLabelStyles","textTransform","useMenuItemStyles","usePopOverStyles","zIndex","Resources","partData","setPartData","setCity","setCategory","setIndianState","resourcedict","setResourceDict","showTable","setShowTable","setIsDesktop","classesFormControl","classesInputLabel","classesMenuItem","classesPopOver","anchorEl","setAnchorEl","getResources","checkForResizeEvent","addEventListener","removeEventListener","hashmap","isArray","handleDisclaimerClick","handleDisclaimerClose","isDisclaimerOpen","Boolean","memocols","Header","accessor","isVisible","getCityOptions","getIndianStateOptions","getCategoryOptions","array","citydata","indexOf","filterTable","categorydata","changeIndianState","changedstateevent","changeCity","changedcityevent","changeCategory","changedcategoryevent","openSharingTray","message","navigator","share","shareUri","encodeURI","screen","w","h","open","openSharingLink","htmlColor","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","paddingLeft","FormControl","InputLabel","Select","native","labelId","defaultValue","pointerEvents","tempArr","concat","Fab","scrollTop","documentElement","Clusters","stateRawData","setStateRawData","networkData","setNetworkData","getData","contractedStr","sources","nodesSet","contracted","pid","group","raw","source","prepareNetworkData","NetworkGraph","fgRef","fg","offsetWidth","d3Force","strength","currNode","nodeLabel","nodeColor","linkDirectionalParticleColor","linkDirectionalParticles","linkDirectionalParticleWidth","enableZoomPanInteraction","ReactDOM","DeltaBarGraph","arrayKey","svgRef","formatTime","paddingInner","r","y0","roundedBar","State","mapRef","tsRef","useParams","stateData","setStateData","testData","setTestData","setSources","setDistrictData","stateName","getState","dataResponse","stateDistrictWiseResponse","stateTestResponse","sourcesResponse","statesTests","states_tested_data","totaltested","sourceList","sources_list","testObjLast","updatedon","num","App","view","exact","atEnter","atLeave","atActive","component","hostname","ScrollToTop","prevProps","children","Component","withRouter","use","Backend","LanguageDetector","init","debug","fallbackLng","backend","loadPath","interpolation","escapeValue","fallback","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.e44e0fb4.chunk.js","sourcesContent":["export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n\nexport const MAP_META = {\n  Myanmar: {\n    name: 'Myanmar',\n    geoDataFile: `${MAPS_DIR}/myanmar.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'myanmar',\n  },\n  // Ayayarwady: {\n  //   name: 'Ayayarwady',\n  //   geoDataFile: `${MAPS_DIR}/ayayarwady.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'ayayarwady',\n  // },\n  // Bago: {\n  //   name: 'Bago',\n  //   geoDataFile: `${MAPS_DIR}/bago.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'bago',\n  // },\n  // Chin: {\n  //   name: 'Chin',\n  //   geoDataFile: `${MAPS_DIR}/chin.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'chin',\n  // },\n  // Kachin: {\n  //   name: 'Kachin',\n  //   geoDataFile: `${MAPS_DIR}/kachin.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'kachin',\n  // },\n  // Kayah: {\n  //   name: 'Kayah',\n  //   geoDataFile: `${MAPS_DIR}/kayah.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'kayah',\n  // },\n  // Kayin: {\n  //   name: 'Kayin',\n  //   geoDataFile: `${MAPS_DIR}/kayin.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'kayin',\n  // },\n  // Magway: {\n  //   name: 'Magway',\n  //   geoDataFile: `${MAPS_DIR}/magway.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'magway',\n  // },\n  // Mandalay: {\n  //   name: 'Mandalay',\n  //   geoDataFile: `${MAPS_DIR}/mandalay.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'mandalay',\n  // },\n  // Mon: {\n  //   name: 'Mon',\n  //   geoDataFile: `${MAPS_DIR}/mon.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'mon',\n  // },\n  // Naypyitaw: {\n  //   name: 'Naypyitaw',\n  //   geoDataFile: `${MAPS_DIR}/naypyitaw.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'naypyitaw',\n  // },\n  // Rakhine: {\n  //   name: 'Rakhine',\n  //   geoDataFile: `${MAPS_DIR}/rakhine.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'rakhine',\n  // },\n  // Sagaing: {\n  //   name: 'Sagaing',\n  //   geoDataFile: `${MAPS_DIR}/sagaing.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'sagaing',\n  // },\n  // Shan: {\n  //   name: 'Shan',\n  //   geoDataFile: `${MAPS_DIR}/shan.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'shan',\n  // },\n  // Tanintaryi: {\n  //   name: 'Tanintaryi',\n  //   geoDataFile: `${MAPS_DIR}/tanintaryi.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'tanintaryi',\n  // },\n  // Yangon: {\n  //   name: 'Yangon',\n  //   geoDataFile: `${MAPS_DIR}/yangon.json`,\n  //   mapType: MAP_TYPES.STATE,\n  //   graphObjectName: 'yangon',\n  // },\n};\n\nexport const STATE_CODES = {\n  \"MM-07\": 'Ayayarwady',\n  \"MM-02\": 'Bago',\n  \"MM-14\": 'Chin',\n  \"MM-11\": 'Kachin',\n  \"MM-12\": 'Kayah',\n  \"MM-13\": 'Kayin',\n  \"MM-03\": 'Magway',\n  \"MM-04\": 'Mandalay',\n  \"MM-15\": 'Mon',\n  \"MM-18\": 'Naypyitaw',\n  \"MM-16\": 'Rakhine',\n  \"MM-01\": 'Sagaing',\n  \"MM-17\": 'Shan',\n  \"MM-05\": 'Tanintaryi',\n  \"MM-06\": 'Yangon',\n};\n\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\n\nconst stateCodes = [];\nObject.keys(STATE_CODES).map((key, index) => {\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const DISTRICTS_ARRAY = [\n  \n];\n","import moment from 'moment';\nimport {STATE_CODES} from '../constants';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} MMT`;\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      return moment(d.date, \"DD/MM/yyyy\").toDate() < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat) => ({\n    date: moment(stat.date, \"DD/MM/yyyy\").toDate(),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, \"DD/MM/yyyy\");\n    // Skip data from the current day\n    if (date.isBefore(today, 'Date')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: +data[i][stateCode] || 0,\n          dailyrecovered: +data[i + 1][stateCode] || 0,\n          dailydeceased: +data[i + 2][stateCode] || 0,\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {Tooltip} from 'react-lightweight-tooltip';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        /* onTouchStart={() => props.onHighlightState?.(state, props.index)}*/\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n              }`}\n              style={{display: 'none'}}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            <span className=\"actual__title-wrapper\">\n              {state.state}\n              {state.statenotes && (\n                <Tooltip\n                  content={[`${state.statenotes}`]}\n                  styles={{\n                    tooltip: {\n                      background: '#000',\n                      borderRadius: '5px',\n                      fontSize: '1rem',\n                      left: '250%',\n                      opacity: 1,\n                      padding: '0.5rem',\n                    },\n                    wrapper: {\n                      cursor: 'cursor',\n                      display: 'inline-block',\n                      position: 'relative',\n                      textAlign: 'center',\n                    },\n                  }}\n                >\n                  <Icon.Info />\n                </Tooltip>\n              )}\n            </span>\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  /* onTouchStart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }*/\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <React.Fragment>\n          <tr\n            className={`district`}\n            style={{display: props.reveal && !props.total ? '' : 'none'}}\n          >\n            <td className=\"unknown\" style={{fontWeight: 600}}>\n              Unknown\n              <Tooltip\n                content={['Awaiting patient-level details from State Bulletin']}\n                styles={{\n                  tooltip: {\n                    background: '#000',\n                    borderRadius: '5px',\n                    fontSize: '1rem',\n                    left: '250%',\n                    opacity: 1,\n                    padding: '0.5rem',\n                  },\n                  wrapper: {\n                    cursor: 'cursor',\n                    display: 'inline-block',\n                    position: 'relative',\n                    textAlign: 'center',\n                  },\n                }}\n              >\n                <Icon.Info />\n              </Tooltip>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts['Unknown'].delta.confirmed > 0\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                  : ''}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const {t} = useTranslation();\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  // const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  // useEffect(() => {\n  //   setDistricts(props.stateDistrictWiseData);\n  // }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  if (states.length > 0) {\n    return (\n      <React.Fragment>\n        <h5\n          className=\"table-fineprint fadeInUp\"\n          style={{animationDelay: '1.5s'}}\n        >\n          {t(\"data compilation info\")}, <Link to=\"/faq\">{t('Know More')}</Link>\n        </h5>\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n          <thead>\n            <tr>\n              <th\n                className=\"sticky state-heading\"\n                onClick={(e) => handleSort(e, props)}\n              >\n                <div className=\"heading-content\">\n                  <abbr title=\"State\">{t('states')}</abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                    title={t('confirmed.full')}\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('confirmed.shorter')\n                        : t('confirmed.short')\n                      : t('confirmed.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'confirmed'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                    title={t(\"active.full\")}\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('active.shorter')\n                        : t('active.short')\n                      : t('active.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'active' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                    title={t(\"recovered.full\")}\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('recovered.shorter')\n                        : t('recovered.short')\n                      : t('recovered.full')}\n                  </abbr>\n                  <div\n                    className={\n                      sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                    }\n                  ></div>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'recovered'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                    title={t(\"Deaths\")}\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('deceased.shorter')\n                        : t('deceased.short')\n                      : t('deceased.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {states.map((state, index) => {\n              if (index !== 0 && state.confirmed > 0) {\n                return (\n                  <Row\n                    key={index}\n                    index={index}\n                    state={state}\n                    total={false}\n                    reveal={revealedStates[state.state]}\n                    onHighlightState={props.onHighlightState}\n                    onHighlightDistrict={props.onHighlightDistrict}\n                    handleReveal={handleReveal}\n                  />\n                );\n              }\n              return null;\n            })}\n          </tbody>\n\n          <tbody>\n            {states.length > 1 && props.summary === false && (\n              <Row\n                key={0}\n                state={states[0]}\n                total={true}\n                onHighlightState={props.onHighlightState}\n              />\n            )}\n          </tbody>\n        </table>\n        <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n          {t('States Affected', {count})}\n        </h5>\n      </React.Fragment>\n    );\n  } else {\n    return <div style={{height: '50rem'}}></div>;\n  }\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\nimport {formatNumber} from '../utils/common-functions';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n\n  useEffect(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  }, [props.data]);\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","/* Source: https://observablehq.com/@d3/color-legend */\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) {\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [0, 0, width, height])\n    .style('overflow', 'visible')\n    .style('display', 'block');\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.domain())\n      .join('rect')\n      .attr('x', x)\n      .attr('y', marginTop)\n      .attr('width', Math.max(0, x.bandwidth() - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append('g')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .append('text')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement('canvas');\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import * as d3 from 'd3';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport * as topojson from 'topojson';\nimport { MAP_TYPES } from '../constants';\nimport legend from './legend';\nimport {useTranslation} from 'react-i18next';\n\nconst propertyFieldMap = {\n  country: 'ST',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n      // Set size of map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* LEGEND */\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll('*').remove();\n      const redInterpolator = (t) => d3.interpolateReds(t * 0.85);\n      const colorScale = d3.scaleSequential(\n        [0, statistic.maxConfirmed],\n        redInterpolator\n      );\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const margin = {left: 0.02 * widthLegend, right: 0.02 * widthLegend};\n      const barWidth = widthLegend - margin.left - margin.right;\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend\n        .append('g')\n        .style('transform', `translateX(${margin.left}px)`)\n        .append(() =>\n          legend({\n            color: colorScale,\n            title: t('map.legends.confirmedcases'),\n            width: barWidth,\n            height: 0.8 * heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (!Number.isInteger(d)) return;\n              if (i === n.length - 1) return d + '+';\n              return d;\n            },\n          })\n        );\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* DRAW MAP */\n      let onceTouchedRegion = null;\n      const g = svg.append('g').attr('class', mapMeta.graphObjectName);\n      g.append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .join('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color = n === 0 ? '#ffffff' : colorScale(n);\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      g.append('path')\n        .attr('class', 'borders')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseover = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.on('click', () => {\n        setSelectedRegion(null);\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n          setHoveredRegion('Total', mapMeta);\n      });\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n      isCountryLoaded,\n      t,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        'district' in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAP_META} from '../constants';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {formatNumber} from '../utils/common-functions';\nimport {useTranslation} from 'react-i18next';\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  forwardRef,\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META.Myanmar;\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  // useEffect(() => {\n  //   setTestObj(\n  //     stateTestData.find(\n  //       (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n  //     )\n  //   );\n  // }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className=\"MapExplorer fadeInUp\"\n      style={{animationDelay: '1.5s'}}\n      ref={forwardRef}\n    >\n      <div className=\"header\">\n        <h1>{t(\"Map\", {name: t(currentMap.name)})}</h1>\n        <h6>\n        {window.innerWidth <= 769 ?\n        (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.tap.state') : t('map.tap.district'))\n        : (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.hover.state') : t('map.hover.district'))}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? t('confirmed.short') : t('confirmed.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('active.short') : t('active.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('recovered.short') : t('recovered.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('deceased.short') : t('deceased.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>{t(\"Last updated\")}</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {t('ago', {time: isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  )})}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1 className=\"district-confirmed\">\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n            <br />\n            <span style={{fontSize: '0.75rem', fontWeight: 600}}>\n              confirmed\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n        isCountryLoaded={isCountryLoaded}\n      />\n    </div>\n  );\n}\n\nexport default MapExplorer;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport {sliceTimeseriesFromEnd} from '../utils/common-functions';\nimport {useResizeObserver} from '../utils/hooks';\nimport {formatNumber} from '../utils/common-functions';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeries(props) {\n  const {t} = useTranslation();\n\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      const slicedTimeseries = sliceTimeseriesFromEnd(\n        props.timeseries,\n        lastDaysCount\n      );\n      setIndex(slicedTimeseries.length - 1);\n      setTimeseries(slicedTimeseries);\n    }\n  }, [props.timeseries, lastDaysCount]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (ts) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = ts.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(ts[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n\n      const dateMin = new Date(ts[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(ts[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(ts, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(ts, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(ts, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            0,\n            Math.max(\n              1,\n              yBuffer *\n                d3.max(ts, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([0, Math.max(1, yBuffer * d3.max(ts, (d) => d[type]))])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([ts[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(ts, date, 1);\n        if (0 <= i && i < T) {\n          if (date - ts[i - 1].date < ts[i].date - date) --i;\n          setDatapoint(ts[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = ts[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(ts[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(ts[T - 1].date)).attr(\n            'cy',\n            yScale(ts[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n        // WARNING: Bad code ahead.\n        /* X axis */\n        if (svg.select('.x-axis').empty()) {\n          svg.append('g').attr('class', 'x-axis').call(xAxis);\n        } else {\n          svg.select('.x-axis').transition(t).call(xAxis);\n        }\n        /* Y axis */\n        if (svg.select('.y-axis').empty()) {\n          svg.append('g').call(yAxis, yScale);\n        } else {\n          svg.select('.y-axis').transition(t).call(yAxis, yScale);\n        }\n        // ^This block of code should be written in a more d3 way following the\n        //  General Update Pattern. Can't find of a way to do that within React.\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(ts, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...ts].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(ts, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .attr('y1', chartBottom)\n            .transition(t)\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date);\n  let dateStr = focusDate.format('DD MMMM');\n  dateStr += focusDate.isSame(moment().subtract(1, 'days'), 'day')\n    ? ' Yesterday'\n    : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey3 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '2.7s'}}\n    >\n      <div className=\"timeseries\">\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"confirmed.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"recovered.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"deceased.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          {t(\"Beginning\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label={t(\"1 month\")}\n        >\n          {t(\"1 Month\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label={t(\"14 days\")}\n        >\n          {t(\"2 Weeks\")}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import {useState, useEffect} from 'react';\nimport {ResizeObserver} from '@juggle/resize-observer';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 0, right: 10, bottom: 30, left: 0};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React, {useState, useEffect} from 'react';\nimport {formatDistance, format} from 'date-fns';\nimport axios from 'axios';\n\nfunction Updates(props) {\n  const [updates, setUpdates] = useState([]);\n  const [fetched, setFetched] = useState(false);\n\n  useEffect(() => {\n    if (fetched === false) {\n      axios\n        .get('https://raw.githubusercontent.com/thantthet/coivd19-api/master/updatelog/log.json')\n        .then((response) => {\n          setUpdates(response.data);\n          setFetched(true);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [fetched]);\n\n  return (\n    <React.Fragment>\n      <div className=\"updates-header\">\n        <h2>{format(new Date(), 'd MMM')}</h2>\n      </div>\n\n      <div className=\"updates\">\n        {updates\n          .slice(-5)\n          .reverse()\n          .map(function (activity, index) {\n            activity.update = activity.update.replace('\\n', '<br/>');\n            return (\n              <div key={index} className=\"update\">\n                <h5>\n                  {formatDistance(\n                    new Date(activity.timestamp * 1000),\n                    new Date()\n                  ) + ' ago'}\n                </h5>\n                <h4\n                  dangerouslySetInnerHTML={{\n                    __html: activity.update,\n                  }}\n                ></h4>\n              </div>\n            );\n          })}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Updates;\n","import React, {useState, useCallback, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport {\n  STATE_CODES_ARRAY,\n  DISTRICTS_ARRAY,\n  STATE_CODES_REVERSE,\n} from '../constants';\nimport Bloodhound from 'corejs-typeahead';\n\nconst engine = new Bloodhound({\n  initialize: true,\n  local: STATE_CODES_ARRAY,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\n});\n\nconst districtEngine = new Bloodhound({\n  initialize: true,\n  local: DISTRICTS_ARRAY,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\n});\n\nconst essentialsEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\n    'category',\n    'city',\n    'contact',\n    'descriptionandorserviceprovided',\n    'nameoftheorganisation',\n    'state'\n  ),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/resources/resources.json',\n    transform: function (response) {\n      return response.resources;\n    },\n  },\n});\n\nfunction Search(props) {\n  const {t} = useTranslation();\n  \n  const [searchValue, setSearchValue] = useState('');\n  const [expand, setExpand] = useState(false);\n  const [results, setResults] = useState([]);\n  const searchInput = useRef(null);\n\n  const handleSearch = useCallback((searchInput) => {\n    const results = [];\n\n    const sync = (datums) => {\n      datums.map((result, index) => {\n        const stateObj = {\n          name: result.name,\n          type: 'state',\n          route: result.code,\n        };\n        results.push(stateObj);\n        return null;\n      });\n    };\n\n    const districtSync = (datums) => {\n      datums.slice(0, 5).map((result, index) => {\n        const districtObj = {\n          name: result.district + ', ' + result.state,\n          type: 'state',\n          route: STATE_CODES_REVERSE[result.state],\n        };\n        results.push(districtObj);\n        return null;\n      });\n    };\n\n    const essentialsSync = (datums) => {\n      datums.slice(0, 5).map((result, index) => {\n        const essentialsObj = {\n          name: result.nameoftheorganisation,\n          type: 'essentials',\n          category: result.category,\n          website: result.contact,\n          description: result.descriptionandorserviceprovided,\n          city: result.city,\n          state: result.state,\n          contact: result.phonenumber,\n        };\n        results.push(essentialsObj);\n        return null;\n      });\n    };\n\n    engine.search(searchInput, sync);\n    districtEngine.search(searchInput, districtSync);\n    essentialsEngine.search(searchInput, essentialsSync);\n    setResults(results);\n  }, []);\n\n  function setNativeValue(element, value) {\n    const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n    const prototype = Object.getPrototypeOf(element);\n    const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n      prototype,\n      'value'\n    ).set;\n\n    if (valueSetter && valueSetter !== prototypeValueSetter) {\n      prototypeValueSetter.call(element, value);\n    } else {\n      valueSetter.call(element, value);\n    }\n  }\n\n  return (\n    <div className=\"Search\">\n      <label>{t(\"search.info\")}</label>\n      <div className=\"line\"></div>\n      <input\n        type=\"text\"\n        value={searchValue}\n        ref={searchInput}\n        onFocus={(event) => {\n          setExpand(true);\n        }}\n        onBlur={() => {\n          setExpand(false);\n        }}\n        onChange={(event) => {\n          setSearchValue(event.target.value);\n          handleSearch(event.target.value.toLowerCase());\n        }}\n      />\n      <div className={`search-button`}>\n        <Icon.Search />\n      </div>\n      {results.length > 0 && (\n        <div\n          className={`close-button`}\n          onClick={() => {\n            setSearchValue('');\n            setResults([]);\n          }}\n        >\n          <Icon.X />\n        </div>\n      )}\n      {results.length > 0 && (\n        <div className=\"results\">\n          {results.map((result, index) => {\n            if (result.type === 'state') {\n              return (\n                <Link key={index} to={`state/${result.route}`}>\n                  <div className=\"result\">\n                    <div className=\"result-name\">{result.name}</div>\n                    <div className=\"result-type\">\n                      Visit {result?.type?.toLowerCase()} page\n                    </div>\n                  </div>\n                </Link>\n              );\n            } else {\n              return (\n                <a\n                  key={index}\n                  href={result.website}\n                  target=\"_noblank\"\n                  className=\"essential-result\"\n                >\n                  <div className=\"result-top\">\n                    <div className=\"result-top-left\">\n                      <div className=\"result-name\">{result.name}</div>\n                      <div className=\"result-location\">\n                        {result.city}, {result.state}\n                      </div>\n                    </div>\n                    <div className=\"result-category\">\n                      <div>\n                        {result.category.match('Delivery')\n                          ? 'Home Delivery'\n                          : result.category}\n                      </div>\n                      <Icon.ExternalLink />\n                    </div>\n                  </div>\n                  <div className=\"result-description\">{result.description}</div>\n                  <div className=\"result-contact\">\n                    <Icon.Phone />\n                    <div>{result.contact}</div>\n                  </div>\n                </a>\n              );\n            }\n          })}\n        </div>\n      )}\n      {expand && (\n        <div className=\"expanded\">\n          <div className=\"expanded-left\">\n            <h3>Essentials</h3>\n            <div className=\"suggestions\">\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Testing Pune');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Testing Pune\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Delhi Shelter');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Delhi Shelter\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(\n                      searchInput.current,\n                      'Community Kitchen in Kerala'\n                    );\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Community Kitchen in Kerala\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Groceries Chennai');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Groceries Chennai\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(\n                      searchInput.current,\n                      'Senior citizen support bangalore'\n                    );\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Senior citizen support bangalore\n                </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"expanded-right\">\n            <h3>Locations</h3>\n            <div className=\"suggestions\">\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Hyderabad');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Hyderabad\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Karnataka');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Karnataka\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Chennai');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Chennai\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Jharkhand');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Jharkhand\n                </h4>\n              </div>\n              <div className=\"suggestion\">\n                <div>-</div>\n                <h4\n                  onMouseDown={(event) => {\n                    event.preventDefault();\n                    setNativeValue(searchInput.current, 'Alappuzha');\n                    searchInput.current.dispatchEvent(\n                      new Event('input', {bubbles: true})\n                    );\n                  }}\n                >\n                  Alappuzha\n                </h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Search;\n","import React, {useState} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nconst goldenNumber = 0; // Bump number up to issue new popup\n\nfunction Level(props) {\n  const [popup, setPopup] = useState(\n    localStorage.getItem('popup') === null\n      ? localStorage.setItem('popup', goldenNumber)\n      : localStorage.getItem('popup') < goldenNumber.toString()\n      ? localStorage.setItem('popup', goldenNumber)\n      : localStorage.getItem('popup') === goldenNumber.toString()\n      ? true\n      : false\n  );\n\n  const {t} = useTranslation();\n\n  return (\n    <React.Fragment>\n      {popup && (\n        <div className=\"snackbar fadeInUp\" style={{animationDelay: '3s'}}>\n          <h4>{t('Added support for more languages!')}</h4>\n          <Icon.XCircle\n            onClick={() => {\n              localStorage.setItem('popup', goldenNumber + 1);\n              setPopup(false);\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Level;\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport Popup from './popup';\n\nfunction Footer(props) {\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>We stand with everyone fighting on the frontlines</h5>\n      <a\n        href=\"https://github.com/thantthet/covid19myanmar-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>A fork of covid19india.org</span>\n      </a>\n      <a\n        className=\"button excel\"\n        href=\"http://covidmyanmar.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>dataset by covidmyanmar.com</span>\n      </a>\n      <Popup />\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport axios from 'axios';\n\nimport {MAP_META} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from '../utils/common-functions';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nimport Table from './table';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\nimport Minigraph from './minigraph';\nimport Updates from './updates';\nimport Search from './search';\nimport Footer from './footer';\n\nfunction Home(props) {\n  const {t} = useTranslation();\n\n  const [states, setStates] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [activeStateCode, setActiveStateCode] = useState('TT'); // TT -> India\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n  const [showUpdates, setShowUpdates] = useState(false);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        {data},\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://raw.githubusercontent.com/thantthet/coivd19-api/master/data.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/coivd19-api/master/states_daily.json'),\n      ]);\n      setStates(data.statewise);\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series); // TT -> India\n      setTimeseries(ts);\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback(({statecode}) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  const refs = [useRef(), useRef(), useRef()];\n  // const scrollHandlers = refs.map((ref) => () =>\n  //   window.scrollTo({\n  //     top: ref.current.offsetTop,\n  //     behavior: 'smooth',\n  //   })\n  // );\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <Search />\n            <div className=\"actions\">\n              <h5>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDateAbsolute(lastUpdated)}\n              </h5>\n              {!showUpdates && (\n                <div className=\"bell-icon\">\n                  <Icon.Bell\n                    onClick={() => {\n                      setShowUpdates(!showUpdates);\n                    }}\n                  />\n                  <div className=\"indicator\"></div>\n                </div>\n              )}\n              {showUpdates && (\n                <Icon.BellOff\n                  onClick={() => {\n                    setShowUpdates(!showUpdates);\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          {showUpdates && <Updates />}\n\n          {states.length ? <Level data={states[0]} /> : ''}\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\n          {fetched && (\n            <Table\n              forwardRef={refs[0]}\n              states={states}\n              summary={false}\n              // stateDistrictWiseData={stateDistrictWiseData}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                forwardRef={refs[1]}\n                mapMeta={MAP_META.Myanmar}\n                states={states}\n                // stateDistrictWiseData={stateDistrictWiseData}\n                // stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                onMapHighlightChange={onMapHighlightChange}\n                isCountryLoaded={true}\n              />\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={refs[2]}\n              >\n                <h1>{t(\"Spread Trends\")}</h1>\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>{t(\"Cumulative\")}</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>{t(\"Daily\")}</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label className=\"main\">{t(\"Scale Modes\")}</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n                    <input\n                      id=\"timeseries-mode\"\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n                    <input\n                      id=\"timeseries-logmode\"\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"trends-state-name\">\n                  <select\n                    onChange={({target}) => {\n                      onHighlightState(JSON.parse(target.value));\n                    }}\n                  >\n                    {states.map((s) => {\n                      return (\n                        <option\n                          key={s.statecode}\n                          value={JSON.stringify(s)}\n                          selected={s.statecode === activeStateCode}\n                        >\n                          {s.state === 'Total' ? t('All States') : t(`statenames.${s.state.toLowerCase()}`)}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries[activeStateCode]}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport locales from '../i18n/locales.json';\n\nexport default function LanguageSwitcher() {\n  const {i18n, t} = useTranslation();\n\n  const onLanguageChange = (e) => {\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return (\n    <div className=\"select-dropdown\">\n      <select onChange={onLanguageChange} aria-label={t('Select Language')} value={i18n.language}>\n        {Object.entries(locales).map(([key, lang]) => (\n          <option key={key} value={key}>\n            {lang}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport LanguageSwitcher from './languageswitcher';\nimport {useTranslation} from 'react-i18next';\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nfunction Navbar({pages}) {\n  const {t} = useTranslation();\n\n  const [expand, setExpand] = useState(false);\n\n  return (\n    <div\n      className=\"Navbar\"\n      style={{width: window.innerWidth > 769 && expand ? '6rem' : ''}}\n    >\n      <div className=\"navbar-left\"><LanguageSwitcher /></div>\n      <div className=\"navbar-middle\">\n        <Link to=\"/\">\n          Covid19<span>Myanmar</span>\n        </Link>\n      </div>\n      <div\n        className=\"navbar-right\"\n        style={{\n          background: expand ? '#4c75f2' : '',\n          color: expand ? 'white' : '',\n        }}\n        onClick={() => {\n          setExpand(!expand);\n        }}\n      >\n        {expand ? t('Close') : t('Menu')}\n      </div>\n      {expand && (\n        <div\n          className=\"expand\"\n          style={{left: window.innerWidth > 769 && expand ? '6rem' : ''}}\n        >\n          {pages.map((page, i) => {\n            if (page.showInNavbar === true) {\n              return (\n                <Link\n                  to={page.pageLink}\n                  key={i}\n                  onClick={() => {\n                    setExpand(false);\n                  }}\n                >\n                  <span\n                    {...navLinkProps(\n                      page.pageLink,\n                      page.animationDelayForNavbar\n                    )}\n                  >\n                    {page.displayName}\n                  </span>\n                </Link>\n              );\n            }\n            return null;\n          })}\n          <div\n            className=\"expand-bottom fadeInUp\"\n            style={{animationDelay: '1s'}}\n          >\n            <h5>A crowdsourced initiative.</h5>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Links(props) {\n  return (\n    <div className=\"Links\">\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <h3>HELPLINE NUMBERS [by State]</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\n        <h3>WHO : COVID-19 Home Page</h3>\n        <a\n          href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <h3>CDC</h3>\n        <a\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h3>Crowdsourced list of Resources & Essentials from across India</h3>\n        <a\n          href=\"https://bit.ly/covid19resourcelist\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://bit.ly/covid19resourcelist\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <h3>COVID-19 Global Tracker</h3>\n        <a\n          href=\"https://coronavirus.thebaselab.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://coronavirus.thebaselab.com/\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Links;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([]);\n\n  useEffect(() => {\n    getFAQs();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setFaq(response.data['faq']);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2\n              className=\"answer\"\n              dangerouslySetInnerHTML={{__html: faq.answer}}\n            ></h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FAQ;\n","import React from 'react';\nimport {format} from 'date-fns';\n\nfunction PatientsView(props) {\n  const logs = props.logs;\n\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(props.summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div\n                  key={index}\n                  className={`day ${props.summary ? 'summary' : ''}`}\n                >\n                  {logs[day]\n                    .slice(props.summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={props.applyClass(patient)}\n                          onClick={() => {\n                            props.setModal(true);\n                            props.setPatient(patient);\n                          }}\n                        >\n                          <h3>\n                            {props.expand ? `P${patient.patientnumber}` : ''}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {parse} from 'date-fns';\nimport * as Icon from 'react-feather';\nimport PatientsView from './patientsview';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  // When the user clicks anywhere outside of the modal, close modal\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  useEffect(() => {\n    if (modal) document.body.classList.add('modal-open');\n    else document.body.classList.remove('modal-open'); // to remove modal-open class from body\n  }, [modal]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndex) => {\n    if (patientIndex === '') return;\n    try {\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'french'\n              ? 'is-fr'\n              : patient.nationality === 'swiz'\n              ? 'is-ch'\n              : patient.nationality === 'american'\n              ? 'is-us'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3\n                className=\"contracted-from\"\n                onClick={() => {\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\n                }}\n              >\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected\n                  : '?'}\n              </h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>State Patient Number</h5>\n              <h3>\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\n              </h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import React from 'react';\nimport {Parser} from 'json2csv';\nimport * as Icon from 'react-feather';\n\nfunction CSVDownloadLink(props) {\n  if (!props.patients) {\n    return '';\n  }\n  try {\n    const parser = new Parser(Object.keys(props.patients[0]));\n    const csv = parser.parse(props.patients);\n    const data = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n    return (\n      <a href={data} download=\"patients.csv\">\n        <code>CSV</code>\n      </a>\n    );\n  } catch (e) {\n    console.log(e);\n    return (\n      <a href=\"/\">\n        <code>CSV</code>\n      </a>\n    );\n  }\n}\n\nfunction DownloadBlock(props) {\n  if (!props.patients) {\n    return '';\n  }\n\n  const dataJSON =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(props.patients));\n\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <button className=\"button\">\n        <Icon.Download />\n        <CSVDownloadLink patients={props.patients} />\n      </button>\n      <button className=\"button\">\n        <Icon.Download />\n        <a href={dataJSON} download=\"patients.json\">\n          JSON\n        </a>\n      </button>\n    </div>\n  );\n}\n\nexport default DownloadBlock;\n","import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport axios from 'axios';\nimport {format, parse} from 'date-fns';\n\nimport Patients from './patients';\nimport DownloadBlock from './downloadblock';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [error, setError] = useState('');\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: '',\n    // unfilter until data are low enough to show\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffect(() => {\n    async function fetchRawData() {\n      const response = await axios.get(\n        'https://raw.githubusercontent.com/thantthet/coivd19-api/master/raw_data.json'\n      );\n      if (response.data) {\n        setPatients(response.data.raw_data.reverse());\n        setFetched(true);\n      } else {\n        setError(\"Couldn't fetch patient data. Try again after sometime.\");\n        console.log(response);\n      }\n    }\n\n    if (!fetched) {\n      fetchRawData();\n    }\n  }, [fetched]);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    setFilteredPatients(filterByObject(patients, filters));\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      {error ? <div className=\"alert alert-danger\">{error}</div> : ''}\n\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select State\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? 'All' : state}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? 'All' : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select Day\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'dateannounced'\n              ).map((date, index) => {\n                return (\n                  <option key={index} value={date}>\n                    {date === ''\n                      ? 'All'\n                      : format(\n                          parse(date, 'dd/MM/yyyy', new Date()),\n                          'dd MMM, yyyy'\n                        )}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">Female</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">Male</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">Local</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">Imported</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">TBD</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n              <div className=\"circle is-fr\"></div>\n              <h5 className=\"is-us\">Fr</h5>\n              <div className=\"circle is-ch\"></div>\n              <h5 className=\"is-us\">Ch</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Color modes\n              </option>\n              <option value=\"genders\">Genders</option>\n              <option value=\"transmission\">Transmission</option>\n              <option value=\"nationality\">Nationality</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>Demographics</h1>\n          {/* <h3>No. of Patients: {patients.length}</h3>*/}\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n          Some of the data provided might be missing/unknown as the details have\n          not been shared by the state/central governments.\n        </h6>\n      </div>\n\n      <div className=\"reminder fadeInUp\" style={{animationDelay: '1s'}}>\n        <p>\n          It is important that we do not think of these as just tiny boxes,\n          numbers, or just another part of statistics - among these are our\n          neighbors, our teachers, our healthcare workers, our supermarket\n          vendors, our friends, our co-workers, our children or our\n          grandparents.\n          <br />\n          <br />\n          Among these are our people.\n        </p>\n      </div>\n\n      <div className=\"patientdb-wrapper\">\n        <Patients\n          patients={filteredPatients}\n          colorMode={colorMode}\n          expand={scaleMode}\n        />\n      </div>\n      <DownloadBlock patients={patients} />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction GenderChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  let male = 0;\n  let female = 0;\n  let unknown = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female, unknown],\n        backgroundColor: ['blue', 'pink', 'grey'],\n        label: 'Hola',\n      },\n    ],\n    labels: ['Male', 'Female', 'Awaiting Details'],\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction AgeChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  const ages = Array(10).fill(0);\n  let unknown = 0;\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 0,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction NationalityChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n  let unknown = 0;\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      unknown++;\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff7272',\n          '#ffb385',\n          '#fae7cb',\n          '#ffd31d',\n          '#00a8cc',\n          '#005082',\n          '#000839',\n          '#ffa41b',\n          '#f1e7b6',\n          '#400082',\n          '#fe346e',\n          '#5a3f11',\n          '#9c5518',\n          '#f67575',\n          '#d4f8e8',\n          '#1eb2a6',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\nimport {getStateName} from '../../utils/common-functions';\nfunction AllStatesChart(props) {\n  const dates = [];\n  const chartReference = React.createRef();\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD/MM/yyyy'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 1.5,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 0,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  function toggleSelection() {\n    // Get reference of chartInstance and update it\n    const ci = chartReference.current.chartInstance;\n    for (let i = 0; i < ci.data.datasets.length; i++) {\n      const meta = ci.getDatasetMeta(i);\n      meta.hidden =\n        meta.hidden === null\n          ? !chartReference.current.chartInstance.data.datasets[i].hidden\n          : null;\n    }\n    ci.update();\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} ref={chartReference} />\n      </div>\n      <div className=\"chart-note\" style={{marginTop: '0px', height: '30px'}}>\n        <button onClick={toggleSelection}>Toggle Selection</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/YYYY'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff073a',\n        label: 'Confirmed',\n        borderColor: '#ff073a',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#28a745',\n        label: 'Recovered',\n        borderColor: '#28a745',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: 'Deceased',\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    events: [\n      'click',\n      'mousemove',\n      'mouseout',\n      'touchstart',\n      'touchmove',\n      'touchend',\n    ],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/yyyy').format('DD MMM'));\n      confirmed.push(\n        data.dailyconfirmed - data.dailyrecovered - data.dailydeceased\n      );\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#28a745',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'Active',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport GenderChart from './Charts/genderchart';\nimport AgeChart from './Charts/agechart';\nimport NationalityChart from './Charts/nationalitychart';\nimport AllStatesChart from './Charts/allstates';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\n\nfunction DeepDive(props) {\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://raw.githubusercontent.com/thantthet/coivd19-api/master/data.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/coivd19-api/master/raw_data.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/coivd19-api/master/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart\n            title=\"Myanmar - Total Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart\n            title=\"Myanmar - Daily Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AllStatesChart\n            title=\"States - Total Cases\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title=\"Patient Gender\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title=\"Patient Age\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title=\"Patient Nationality\" data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React, {useState, useEffect, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useTable} from 'react-table';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Autosuggest from 'react-autosuggest';\nimport TextField from '@material-ui/core/TextField';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst usePanelSummaryStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  root: {\n    backgroundColor: '#201aa220',\n    height: '4rem',\n  },\n}));\nconst usePanelDetailsStyles = makeStyles((theme) => ({\n  root: {\n    padding: '0px 5px 0px 24px',\n  },\n}));\nconst useListStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst usePanelStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginBottom: '0.2rem',\n  },\n}));\nconst useItemTextStyles = makeStyles((theme) => ({\n  primary: {\n    fontFamily: 'Archia',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    fontSize: '13px',\n    fontTransform: 'uppercase',\n  },\n  secondary: {\n    fontFamily: 'Archia',\n    fontWeight: 400,\n    fontStyle: 'normal',\n    fontSize: '12px',\n    width: '100%',\n    wordWrap: 'break-word',\n    // fontTransform: 'uppercase'\n  },\n}));\n\nconst getNumbersLink = (initialValue) => {\n  // const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  const numbf = initialValue.split(',');\n  // console.log('numbers are', '' + numbf.length);\n\n  const numbg = /^\\d{5,12}$/g;\n  const numberList = numbf.map((iv, i) => {\n    iv = iv.trim();\n    // console.log('numbr ', '' + iv);\n    return iv.replace(numbg, '<a href=\"tel:$&\">$&</a>');\n  });\n  // console.log('numberList ', '' + numberList);\n  return {numberList};\n};\nconst getFormattedLinkForAccordion = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const noLetters = /^[\\d,\\s]+$/;\n  let s3 = '';\n  if (initialValue.match(noLetters) != null) {\n    const formatedLink = getNumbersLink(initialValue);\n    const links = JSON.parse(JSON.stringify(formatedLink));\n    // console.log('success val', ' --' + JSON.stringify(links.numberList));\n    s3 = String(links.numberList).replace(/,/g, '<br>');\n  } else {\n    const s1 = initialValue.replace(\n      reurl1,\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\n    );\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n  }\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: s3,\n      }}\n    ></div>\n  );\n};\n\nconst getFormattedLink = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const noLetters = /^[\\d,\\s]+$/;\n  let s3 = '';\n  if (initialValue.match(noLetters) != null) {\n    const formatedLink = getNumbersLink(initialValue);\n    const links = JSON.parse(JSON.stringify(formatedLink));\n    // console.log('success val', ' --' + JSON.stringify(links.numberList));\n    s3 = String(links.numberList).replace(/,/g, '<br>');\n  } else {\n    const s1 = initialValue.replace(\n      reurl1,\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\n    );\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n  }\n  return s3;\n};\nconst rendercell = (celli) => {\n  const value = celli.cell.value;\n  console.log(celli);\n  let renderedvalue = '';\n  const link = celli.row.allCells[5].value.split(',')[0];\n\n  if (celli.column.id === 'contact') renderedvalue = getFormattedLink(value);\n  else if (celli.column.id === 'phonenumber') {\n    // renderedvalue = String(JSON.parse(JSON.stringify(getNumbersLink(value))).numberList).replace(/,/g, '<br>');\n    renderedvalue = getFormattedLink(value);\n  } else if (celli.column.id === 'nameoftheorganisation') {\n    if (link !== '')\n      renderedvalue = `<a href=${link} target=\"_blank\">${value}</a>`;\n    else renderedvalue = value;\n  } else renderedvalue = value;\n\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: renderedvalue,\n      }}\n    ></div>\n  );\n};\nconst FormattedCell = ({value: initialValue, editable}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n\n  // If the initialValue is changed externall, sync it up with our state\n  React.useEffect(() => {\n    const noLetters = /^[\\d,\\s]+$/;\n    if (initialValue.match(noLetters) != null) {\n      const formatedLink = getNumbersLink(initialValue);\n      const links = JSON.parse(JSON.stringify(formatedLink));\n      setValue(String(links.numberList).replace(/,/g, '<br>'));\n    } else {\n      const s1 = initialValue.replace(\n        reurl1,\n        '<a href=\"$1\" target=\"_blank\">Link</a>'\n      );\n      const s2 = s1.replace(\n        reinsta,\n        '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n      );\n      const s3 = s2.replace(\n        refb,\n        '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n      );\n      setValue(s3);\n    }\n  }, [initialValue, reurl1, refb, reinsta]);\n\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: value,\n      }}\n    ></div>\n  );\n};\n\n// searchbar stuff\n\nconst getSuggestions = (value, resources) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  // console.log(resources);\n  return inputLength === 0\n    ? resources\n    : resources.filter(\n        (resource) =>\n          resource.category.toLowerCase().includes(inputValue.toLowerCase()) ||\n          resource.descriptionandorserviceprovided\n            .toLowerCase()\n            .includes(inputValue.toLowerCase()) ||\n          resource.nameoftheorganisation\n            .toLowerCase()\n            .includes(inputValue.toLowerCase())\n      );\n};\n\nconst getSuggestionValue = (suggestion) => suggestion.nameoftheorganisation;\n\nconst renderSuggestion = (suggestion) => (\n  <div>{suggestion.nameoftheorganisation}</div>\n);\n\nfunction ResourceTable({\n  columns,\n  data,\n  isDesktop,\n  totalCount,\n  onScrollUpdate,\n  city,\n  category,\n  indianstate,\n}) {\n  const classesPannelSummary = usePanelSummaryStyles();\n  const classesPanel = usePanelStyles();\n  const classesListItemText = useItemTextStyles();\n  const classesPanelDetails = usePanelDetailsStyles();\n  const classesList = useListStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const defaultColumn = React.useMemo(\n    () => ({\n      Cell: FormattedCell,\n    }),\n    []\n  );\n  const handleExpansionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const [searchValue, setSearchValue] = useState('');\n  const [suggestions, setSuggestions] = useState(data);\n\n  const prevIndianState = useRef('');\n  const prevCity = useRef('');\n  const prevCategory = useRef('');\n\n  useEffect(() => {\n    if (\n      prevCategory.current === category &&\n      prevIndianState.current === indianstate &&\n      prevCity.current === city\n    ) {\n      setSuggestions(getSuggestions(searchValue, data));\n    } else {\n      setSuggestions(data);\n      setSearchValue('');\n      prevCategory.current = category;\n      prevIndianState.current = indianstate;\n      prevCity.current = city;\n    }\n  }, [searchValue, data, category, indianstate, city]);\n\n  const onChange = (event, {newValue}) => {\n    setSearchValue(newValue);\n  };\n\n  const onSuggestionsFetchRequested = ({value}) => {\n    setSuggestions(getSuggestions(value, data));\n  };\n\n  const inputProps = {\n    placeholder: '',\n    value: searchValue,\n    onChange: onChange,\n  };\n\n  const renderInputComponent = (inputProps) => (\n    <TextField\n      id=\"outlined-number\"\n      label=\"Search keyword\"\n      fullWidth={true}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      style={{\n        width: '100%',\n      }}\n      variant=\"outlined\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchOutlinedIcon style={{fontSize: '0.7rem'}} />\n          </InputAdornment>\n        ),\n      }}\n      {...inputProps}\n    />\n  );\n\n  const parseText = function (text, limit) {\n    if (text.length > limit) {\n      for (let i = limit; i > 0; i--) {\n        if (\n          text.charAt(i) === ' ' &&\n          (text.charAt(i - 1) !== ',' ||\n            text.charAt(i - 1) !== '.' ||\n            text.charAt(i - 1) !== ';')\n        ) {\n          return text.substring(0, i) + '...';\n        }\n      }\n      return text.substring(0, limit) + '...';\n    } else return text;\n  };\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n  } = useTable({\n    columns,\n    data: suggestions,\n    defaultColumn,\n    initialState: {hiddenColumns: 'contact'},\n  });\n\n  // Render the UI for your table\n  if (isDesktop === true)\n    return (\n      <>\n        <div className=\"searchbar\">\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            alwaysRenderSuggestions={true}\n            renderInputComponent={renderInputComponent}\n          />\n        </div>\n        <div className=\"tableandcontrols\">\n          <InfiniteScroll\n            dataLength={data.length}\n            hasMore={data.length < totalCount}\n            next={onScrollUpdate}\n            loader={<h4>Fetching more information, please wait.</h4>}\n          >\n            <table {...getTableProps()}>\n              <thead>\n                {headerGroups.map((headerGroup) => (\n                  <tr\n                    key={headerGroup.id}\n                    {...headerGroup.getHeaderGroupProps()}\n                  >\n                    {headerGroup.headers.map((column, i) => (\n                      <th\n                        key={column.id}\n                        {...column.getHeaderProps()}\n                        className={i === 3 ? 'descriptionCol sticky' : 'sticky'}\n                      >\n                        {column.render('Header')}\n                      </th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                  prepareRow(row);\n                  return (\n                    <tr key={row.id} {...row.getRowProps()}>\n                      {row.cells.map((cell, cellindex) => {\n                        return (\n                          <td key={cellindex} {...cell.getCellProps()}>\n                            {cell.render(rendercell)}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </InfiniteScroll>\n        </div>\n      </>\n    );\n  else\n    return (\n      <>\n        <div className=\"searchbar\">\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            alwaysRenderSuggestions={true}\n            renderInputComponent={renderInputComponent}\n          />\n        </div>\n        <div\n          className=\"resourcesaccordion\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            alignItems: 'center',\n          }}\n        >\n          <InfiniteScroll\n            dataLength={data.length}\n            hasMore={data.length < totalCount}\n            next={onScrollUpdate}\n            loader={<h4>Fetching more information, please wait.</h4>}\n            style={{width: '100%', maxWidth: '335px', overflow: 'hidden'}} // for large texts\n          >\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <ExpansionPanel\n                  key={row.id}\n                  classes={{root: classesPanel.root}}\n                  expanded={expanded === `panel-${i}`}\n                  onChange={handleExpansionChange(`panel-${i}`)}\n                >\n                  <ExpansionPanelSummary\n                    classes={{\n                      content: classesPannelSummary.content,\n                      root: classesPannelSummary.root,\n                    }}\n                  >\n                    {/* <div className=\"expanelheading\"\n                                 style={{display: 'flex',\n                                         flexDirection: 'row',\n                                         justifyContent: 'space-between',\n                                         backgroundColor: 'blue'}}> */}\n                    <div\n                      className=\"orgname\"\n                      style={{\n                        maxWidth: '10rem',\n                        textAlign: 'start',\n                        color: '#201aa2dd',\n                      }}\n                    >\n                      <h6>\n                        {parseText(row.values['nameoftheorganisation'], 50)}\n                      </h6>\n                    </div>\n                    <div\n                      className=\"orgcategory\"\n                      style={{maxWidth: '10.9rem', textAlign: 'end'}}\n                    >\n                      <h6>{row.values['category']}</h6>\n                    </div>\n                    {/* </div> */}\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails\n                    classes={{root: classesPanelDetails.root}}\n                  >\n                    <List\n                      disablePadding={true}\n                      dense={true}\n                      classes={{root: classesList.root}}\n                    >\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Organisation Name\"\n                          secondary={row.values['nameoftheorganisation']}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Location\"\n                          secondary={row.values['city']}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Description\"\n                          secondary={\n                            row.values['descriptionandorserviceprovided']\n                          }\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Service\"\n                          secondary={row.values['category']}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Phonenumber\"\n                          secondary={getFormattedLinkForAccordion(\n                            row.values['phonenumber']\n                          )}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem\n                        alignItems=\"flex-start\"\n                        dense={true}\n                        divider={true}\n                      >\n                        <ListItemText\n                          primary=\"Website\"\n                          secondary={getFormattedLinkForAccordion(\n                            row.values['contact']\n                          )}\n                          classes={{\n                            primary: classesListItemText.primary,\n                            secondary: classesListItemText.secondary,\n                          }}\n                        />\n                      </ListItem>\n                    </List>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      </>\n    );\n}\n\nexport default ResourceTable;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport ResourceTable from './resourcetable';\nimport axios from 'axios';\nimport FormControl from '@material-ui/core/FormControl';\nimport Popover from '@material-ui/core/Popover';\nimport Select from '@material-ui/core/Select';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationOutlinedIcon from '@material-ui/icons/NavigationOutlined';\n\nexport const useFormControlStyles = makeStyles((isDesktop) => {\n  if (isDesktop === true)\n    return {\n      root: {\n        margin: '1rem',\n        flexGrow: '1',\n      },\n    };\n  else\n    return {\n      root: {\n        margin: '0.4rem',\n        flexGrow: '1',\n        width: '100%',\n      },\n    };\n});\nexport const useInputLabelStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\n\nexport const useMenuItemStyles = makeStyles(() => ({\n  root: {\n    fontFamily: 'archia',\n    fontSize: '11px !important',\n    fontWeight: 600,\n    textTransform: 'uppercase',\n  },\n}));\nexport const usePopOverStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#201aa220',\n    zIndex: '1000',\n  },\n}));\nexport const useTextInputStyles = makeStyles(() => ({\n  root: {\n    height: '0.5rem',\n  },\n}));\nfunction Resources(props) {\n  const [data, setData] = useState([]);\n  const [partData, setPartData] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const [city, setCity] = useState('all');\n  const [category, setCategory] = useState('all');\n  const [indianstate, setIndianState] = useState('all');\n  const [resourcedict, setResourceDict] = useState({});\n  const [showTable, setShowTable] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n  const classesFormControl = useFormControlStyles();\n  const classesInputLabel = useInputLabelStyles();\n  const classesMenuItem = useMenuItemStyles();\n  const classesPopOver = usePopOverStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  useEffect(() => {\n    if (fetched === false) {\n      getResources();\n    }\n  }, [fetched, data, resourcedict]);\n  const checkForResizeEvent = useCallback((event) => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    // console.log(isDesktop);\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    window.addEventListener('resize', checkForResizeEvent);\n    return () => {\n      window.removeEventListener('resize', checkForResizeEvent);\n    };\n  }, [isDesktop, checkForResizeEvent]);\n\n  const getResources = async () => {\n    try {\n      const [response] = await Promise.all([\n        axios.get('https://api.covid19india.org/resources/resources.json'),\n      ]);\n      // console.log(response)\n      // console.log(\"Column names are\")\n      // console.log(columns)\n      // setData(response.data.resources);\n      const hashmap = {};\n      response.data.resources.forEach((x) => {\n        // console.log(x)\n        if (typeof hashmap[x['state']] === 'undefined')\n          hashmap[x['state']] = {};\n        if (typeof hashmap[x['state']][x['city']] === 'undefined')\n          hashmap[x['state']][x['city']] = {};\n        if (\n          typeof hashmap[x['state']][x['city']][x['category']] === 'undefined'\n        )\n          hashmap[x['state']][x['city']][x['category']] = [];\n        if (Array.isArray(hashmap[x['state']][x['city']][x['category']]))\n          hashmap[x['state']][x['city']][x['category']].push(x);\n      });\n\n      setResourceDict(hashmap);\n      // setIndianState(Object.keys()[0]);\n\n      setFetched(true);\n      // console.log(resourcedict);\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  const handleDisclaimerClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDisclaimerClose = () => {\n    setAnchorEl(null);\n  };\n\n  const isDisclaimerOpen = Boolean(anchorEl);\n  const id = isDisclaimerOpen ? 'simple-popover' : undefined;\n  function topFunction() {\n    document.body.scrollTop = 0; // For Safari\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n  }\n\n  const memocols = React.useMemo(\n    () => [\n      {\n        Header: 'City',\n        accessor: 'city',\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n      },\n      {\n        Header: 'Organisation',\n        accessor: 'nameoftheorganisation',\n      },\n      {\n        Header: 'Description',\n        accessor: 'descriptionandorserviceprovided',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phonenumber',\n      },\n      {\n        Header: 'Source',\n        accessor: 'contact',\n        isVisible: false,\n      },\n    ],\n    []\n  );\n  // const memodata = React.useMemo(() => data, [data])\n\n  const getCityOptions = function () {\n    if (indianstate) {\n      if (indianstate === 'all') return [];\n      else {\n        return Object.keys(resourcedict[indianstate])\n          .sort()\n          .map((x) => (\n            <option\n              key={x.id}\n              value={x}\n              style={{\n                fontFamily: 'archia',\n                fontSize: '11px !important',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n              }}\n            >\n              {x}\n            </option>\n          ));\n      }\n    } else return [];\n    // return getCityList().map((x) => <option value={x}>{x}</option>)\n  };\n  const getIndianStateOptions = function () {\n    // let defaultOption = ['Please select']\n    return Object.keys(resourcedict)\n      .sort()\n      .map((x) => (\n        <option\n          key={x.id}\n          value={x}\n          style={{\n            fontFamily: 'archia',\n            fontSize: '11px !important',\n            fontWeight: 600,\n            textTransform: 'uppercase',\n          }}\n        >\n          {x}\n        </option>\n      ));\n  };\n  const getCategoryOptions = function () {\n    if (indianstate && city) {\n      if (indianstate === 'all') {\n        const array = [];\n        Object.values(resourcedict).forEach((state) => {\n          Object.values(state).forEach((citydata) => {\n            Object.keys(citydata).forEach((x) => {\n              if (array.indexOf(x) === -1) array.push(x);\n            });\n          });\n        });\n        return array.map((x) => (\n          <option\n            key={x.id}\n            value={x}\n            style={{\n              fontFamily: 'archia',\n              fontSize: '11px !important',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n            }}\n          >\n            {x}\n          </option>\n        ));\n      } else {\n        if (city === 'all') {\n          const array = [];\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\n            Object.keys(citydata).forEach((x) => {\n              if (array.indexOf(x) === -1) array.push(x);\n            });\n          });\n          return array.map((x) => (\n            <option\n              key={x.id}\n              value={x}\n              style={{\n                fontFamily: 'archia',\n                fontSize: '11px !important',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n              }}\n            >\n              {x}\n            </option>\n          ));\n        } else {\n          return Object.keys(resourcedict[indianstate][city])\n            .sort()\n            .map((x) => (\n              <option\n                key={x.id}\n                value={x}\n                style={{\n                  fontFamily: 'archia',\n                  fontSize: '11px !important',\n                  fontWeight: 600,\n                  textTransform: 'uppercase',\n                }}\n              >\n                {x}\n              </option>\n            ));\n        }\n      }\n    } else return [];\n  };\n\n  const filterTable = function () {\n    // console.log('Search Button Pressed');\n    // console.log(`Filters are: ${indianstate} ---> ${city} ----> ${category}`);\n    let a = [];\n    if (category === 'all') {\n      // console.log(\"All category selected\");\n      if (city === 'all') {\n        if (indianstate === 'all') {\n          Object.values(resourcedict).forEach((state) => {\n            Object.values(state).forEach((citydata) => {\n              Object.values(citydata).forEach((category) => {\n                category.forEach((x) => a.push(x));\n              });\n            });\n          });\n        } else {\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\n            Object.values(citydata).forEach((category) => {\n              category.forEach((x) => a.push(x));\n            });\n          });\n        }\n      } else {\n        Object.values(resourcedict[indianstate][city]).forEach((x) => {\n          x.forEach((y) => a.push(y));\n        });\n      }\n    } else {\n      // console.log(`Category chosen ${category}`);\n      // a = resourcedict[indianstate][city][category];\n\n      if (indianstate === 'all' && city === 'all') {\n        Object.values(resourcedict).forEach((state) => {\n          Object.values(state).forEach((citydata) => {\n            Object.values(citydata).forEach((categorydata) => {\n              categorydata.forEach((x) => {\n                if (x.category === category) a.push(x);\n              });\n            });\n          });\n        });\n      } else if (indianstate !== 'all' && city === 'all') {\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\n          if (category in citydata) {\n            citydata[category].forEach((x) => {\n              a.push(x);\n            });\n          }\n        });\n      } else {\n        a = resourcedict[indianstate][city][category];\n      }\n    }\n    try {\n      if ('PAN India' in resourcedict) {\n        resourcedict['PAN India']['Multiple']['CoVID-19 Testing Lab'].forEach(\n          (element) => {\n            a.push(element);\n          }\n        );\n      }\n    } catch (err) {\n      // console.log('No PAN India row found');\n    }\n    setData(a);\n    setPartData(a.slice(0, 30));\n    // console.log(resourcedict[indianstate][city][category]);\n    // console.log(data);\n    setShowTable(true);\n  };\n\n  const changeIndianState = function (changedstateevent) {\n    setIndianState(changedstateevent.target.value);\n    // setCity(\n    //   Object.keys(resourcedict[changedstateevent.target.value]).sort()[0]\n    // );\n    if (changedstateevent.target.value === '') {\n      setCity('');\n      document.getElementById('cityselect1').selectedIndex = 0;\n      setCategory('');\n      document.getElementById('categoryselect').selectedIndex = 0;\n    } else {\n      setCity('all');\n      document.getElementById('cityselect1').selectedIndex = 1;\n      setCategory('all');\n      document.getElementById('categoryselect').selectedIndex = 1;\n    }\n  };\n  const changeCity = function (changedcityevent) {\n    setCity(changedcityevent.target.value);\n    setCategory('all');\n    document.getElementById('categoryselect').selectedIndex = 1;\n  };\n  const changeCategory = function (changedcategoryevent) {\n    setCategory(changedcategoryevent.target.value);\n    // console.log(changedcategoryevent.target.value);\n  };\n  const appendData = function () {\n    const tempArr = partData.concat(\n      data.slice(partData.length, partData.length + 30)\n    );\n    setPartData(tempArr);\n  };\n\n  const openSharingLink = function (message) {\n    const shareUri = `https://www.addtoany.com/share#url=${encodeURI(\n      'https://www.covid19india.org/essentials'\n    )}&title=${encodeURI(message)}`;\n\n    const h = 500;\n    const w = 500;\n    const left = window.screen.width / 2 - w / 2;\n    const top = window.screen.height / 2 - h / 2;\n    return window.open(\n      shareUri,\n\n      document.title,\n      'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' +\n        w +\n        ', height=' +\n        h +\n        ', top=' +\n        top +\n        ', left=' +\n        left\n    );\n  };\n\n  const openSharingTray = function () {\n    const message =\n      'Discover nearest coronavirus support and essential service providers such as testing lab centres, accommodation shelters and vegetable vendors at ';\n    if (navigator.share !== undefined) {\n      navigator\n        .share({\n          title: document.title,\n          text: message,\n          url: 'https://www.covid19india.org/essentials',\n        })\n        .then()\n        .catch((error) => console.log(error));\n    } else {\n      openSharingLink(message);\n    }\n  };\n  return (\n    <div className=\"Resources\">\n      <div className=\"filtersection\">\n        <div className=\"filtertitle\">\n          <h3>Service Before Self</h3>\n        </div>\n        {!isDesktop && (\n          <React.Fragment>\n            <div\n              className=\"disclaimercontainer\"\n              style={{\n                display: 'flex',\n                flexDirection: 'row-reverse',\n                width: '100%',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <div\n                className=\"button is-purple mobile-disclaimer-button\"\n                style={{\n                  margin: '0.2rem',\n                  padding: '0.5rem',\n                  alignItems: 'center',\n                }}\n                onClick={handleDisclaimerClick}\n              >\n                Disclaimer\n                <ErrorOutlineOutlinedIcon\n                  htmlColor=\"#6c757d\"\n                  fontSize=\"0.1rem\"\n                />\n              </div>\n              <Popover\n                id={id}\n                open={isDisclaimerOpen}\n                classes={{root: classesPopOver.root}}\n                anchorEl={anchorEl}\n                onClose={handleDisclaimerClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <h6\n                  style={{\n                    paddingLeft: '0.5rem',\n                    color: '#343a40',\n                    margin: '0.3rem 0rem',\n                  }}\n                >\n                  <p>\n                    We are a community sourced listing platform and are not\n                    associated with any of the organisations listed below.\n                  </p>\n                  <p>\n                    Although we verify all our listings, we request you to\n                    follow all the guidelines and take necessary precautions.\n                  </p>\n                  <p>\n                    We encourage you to report any error or suspicious activity\n                    so we can take immediate action.\n                  </p>\n                </h6>\n              </Popover>\n              <a\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\n              >\n                <span>Add</span>\n              </a>\n              <a\n                href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\n              >\n                <span>Feedback</span>\n              </a>\n            </div>\n            <div className=\"resourcefilters\">\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  State/UT\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"stateselect\"\n                  value={indianstate}\n                  onChange={changeIndianState}\n                  defaultValue=\"all\"\n                  label=\"State/UT\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All states\n                  </option>\n                  {getIndianStateOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  City\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"cityselect1\"\n                  value={city}\n                  onChange={changeCity}\n                  defaultValue=\"all\"\n                  label=\"City\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All Cities\n                  </option>\n                  {getCityOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  Services\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"categoryselect\"\n                  value={category}\n                  onChange={changeCategory}\n                  defaultValue=\"all\"\n                  label=\"Services\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All Categories\n                  </option>\n                  {getCategoryOptions()}\n                </Select>\n              </FormControl>\n\n              <div\n                className=\"search-share\"\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  width: '100%',\n                }}\n              >\n                <button\n                  className=\"button is-purple\"\n                  disabled={!indianstate}\n                  onClick={filterTable}\n                  style={{\n                    margin: '0.2rem 0.2rem',\n                    padding: '0.5rem 0.5rem',\n                    width: '50%',\n                    justifyContent: 'center',\n                  }}\n                >\n                  Search\n                </button>\n                <button\n                  onClick={openSharingTray}\n                  className=\"button add-entry is-purple\"\n                  style={{\n                    margin: '0.2rem 0.2rem',\n                    padding: '0.5rem 0.5rem',\n                    width: '50%',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <span>Share</span>\n                </button>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n        {isDesktop && (\n          <React.Fragment>\n            <div\n              className=\"disclaimercontainer\"\n              style={{\n                display: 'flex',\n                flexDirection: 'row-reverse',\n                width: '100%',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <div\n                className=\"button disclaimer-button\"\n                style={{\n                  margin: '0rem',\n                  padding: '0.3rem',\n                  alignItems: 'center',\n                  justifyContent: 'space-around',\n                }}\n                onClick={handleDisclaimerClick}\n              >\n                Disclaimer\n                <ErrorOutlineOutlinedIcon\n                  htmlColor=\"#6c757d\"\n                  fontSize=\"small\"\n                />\n              </div>\n              <Popover\n                id={id}\n                open={isDisclaimerOpen}\n                classes={{root: classesPopOver.root}}\n                anchorEl={anchorEl}\n                onClose={handleDisclaimerClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <h6\n                  style={{\n                    paddingLeft: '0.5rem',\n                    color: '#343a40',\n                    margin: '0.3rem 0rem',\n                  }}\n                >\n                  <p>\n                    We are a community sourced listing platform and are not\n                    associated with any of the organisations listed below.\n                  </p>\n                  <p>\n                    Although we verify all our listings, we request you to\n                    follow all the guidelines and take necessary precautions.\n                  </p>\n                  <p>\n                    We encourage you to report any error or suspicious activity\n                    so we can take immediate action.\n                  </p>\n                </h6>\n              </Popover>\n            </div>\n            <div className=\"resourcefilters\">\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  State/UT\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"stateselect\"\n                  value={indianstate}\n                  onChange={changeIndianState}\n                  defaultValue=\"all\"\n                  label=\"State/UT\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All states\n                  </option>\n                  {getIndianStateOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  City\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"cityselect1\"\n                  value={city}\n                  onChange={changeCity}\n                  defaultValue=\"all\"\n                  label=\"City\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All cities\n                  </option>\n                  {getCityOptions()}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"resourcefilterMobile\"\n                classes={{root: classesFormControl.root}}\n              >\n                <InputLabel\n                  id=\"demo-simple-select-outlined-label\"\n                  classes={{root: classesInputLabel.root}}\n                >\n                  Services\n                </InputLabel>\n                <Select\n                  native\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"categoryselect\"\n                  value={category}\n                  onChange={changeCategory}\n                  defaultValue=\"all\"\n                  label=\"Services\"\n                  classes={{root: classesMenuItem.root}}\n                >\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\n                    All categories\n                  </option>\n                  {getCategoryOptions()}\n                </Select>\n              </FormControl>\n              <button\n                className=\"button is-purple\"\n                disabled={!indianstate}\n                onClick={filterTable}\n                style={!indianstate ? {pointerEvents: 'none'} : null}\n              >\n                Search\n              </button>\n            </div>\n            <div\n              className=\"misclinkscontainer\"\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '100%',\n                justifyContent: 'center',\n                marginTop: '0.2rem',\n                marginBottom: '0.6rem',\n              }}\n            >\n              <a\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\n              >\n                <span>Add Entry</span>\n              </a>\n              <a\n                href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\n                className=\"button add-entry is-purple\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\n              >\n                <span>Feedback</span>\n              </a>\n              <button\n                onClick={openSharingTray}\n                className=\"button add-entry is-purple\"\n                style={{margin: '0rem 0.2rem', padding: '0.4rem'}}\n              >\n                <span>Share</span>\n              </button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      {showTable && (\n        <React.Fragment>\n          <ResourceTable\n            columns={memocols}\n            data={partData}\n            totalCount={data.length}\n            isDesktop={isDesktop}\n            onScrollUpdate={appendData}\n            city={city}\n            category={category}\n            indianstate={indianstate}\n          />\n          <div>\n            <Fab\n              color=\"inherit\"\n              aria-label=\"gototop\"\n              id=\"gototopbtn\"\n              onClick={topFunction}\n              size=\"small\"\n              style={{\n                position: 'fixed',\n                bottom: '1rem',\n                right: '1rem',\n                zIndex: '1000',\n              }}\n            >\n              <NavigationOutlinedIcon htmlColor=\"#201aa299\" />\n            </Fab>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default Resources;\n","import axios from 'axios';\nimport * as d3 from 'd3';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport React, {useEffect, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Clusters({stateCode}) {\n  const [fetched, setFetched] = useState(false);\n  const [stateRawData, setStateRawData] = useState([]);\n  const [networkData, setNetworkData] = useState([]);\n\n  function prepareNetworkData(data) {\n    // Parse data\n    let contractedStr = data.reduce(\n      (acc, v) => acc + v.contractedfromwhichpatientsuspected + ', ',\n      ''\n    );\n    contractedStr = contractedStr.replace(/\\s+/g, '');\n    const sources = new Set(contractedStr.match(/[^,]+/g));\n\n    // Prepare nodes and links\n    const nodes = [];\n    const nodesSet = new Set();\n    const links = [];\n    data.forEach((d) => {\n      const contractedStr = d.contractedfromwhichpatientsuspected.replace(\n        /\\s+/g,\n        ''\n      );\n      const contracted = contractedStr.match(/[^,]+/g);\n      if (contracted) {\n        const pid = 'P' + d.patientnumber;\n        nodesSet.add(pid);\n        nodes.push({\n          id: pid,\n          group: sources.has(pid) ? 'source' : 'target',\n          raw: d,\n        });\n        contracted.forEach((p) => {\n          links.push({\n            source: p,\n            target: pid,\n          });\n        });\n      }\n    });\n\n    // Add missing nodes\n    links.forEach((d) => {\n      if (!nodesSet.has(d.source)) {\n        nodes.push({\n          id: d.source,\n          group: 'source',\n          raw: d.source,\n        });\n        nodesSet.add(d.source);\n      }\n    });\n    return {\n      nodes: nodes,\n      links: links,\n    };\n  }\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const rawDataResponse = await axios.get(\n          'https://api.covid19india.org/raw_data.json'\n        );\n        setStateRawData(\n          rawDataResponse.data.raw_data.filter((d) => d.statecode === stateCode)\n        );\n        setFetched(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (!fetched) {\n      getData();\n    }\n  }, [fetched, stateCode]);\n\n  useEffect(() => {\n    setNetworkData(prepareNetworkData(stateRawData));\n  }, [stateRawData]);\n\n  const NetworkGraph = () => {\n    const fgRef = useRef();\n\n    useEffect(() => {\n      const fg = fgRef.current;\n      const width = document.getElementById('clusters').offsetWidth;\n      const height = width;\n      // Deactivate existing forces\n      fg.d3Force('charge').strength(-60);\n      fg.d3Force('collision', d3.forceCollide());\n      fg.d3Force('x', d3.forceX().strength(0.3));\n      fg.d3Force('y', d3.forceY().strength(0.3));\n      fg.d3Force('box', boxForce);\n\n      // Custom force to keep everything inside box\n      function boxForce() {\n        for (let i = 0, n = networkData.nodes.length; i < n; ++i) {\n          const currNode = networkData.nodes[i];\n          currNode.x = Math.max(-width, Math.min(width, currNode.x));\n          currNode.y = Math.max(-height, Math.min(height, currNode.y));\n        }\n      }\n    }, []);\n\n    const width = document.getElementById('clusters').offsetWidth;\n    const height = width;\n\n    return (\n      <ForceGraph2D\n        ref={fgRef}\n        width={width}\n        height={height}\n        graphData={networkData}\n        nodeLabel='id'\n        nodeColor={(node) => (node.group === 'source' ? '#dc3545' : 'gray')}\n        linkDirectionalParticleColor={() => 'red'}\n        linkDirectionalParticles={1}\n        linkDirectionalParticleWidth={(link) =>\n          link.source.id[0] === 'P' ? 2 : 0\n        }\n        enableZoomPanInteraction={false}\n      />\n    );\n  };\n\n  useEffect(() => {\n    ReactDOM.render(<NetworkGraph />, document.getElementById('clusters'));\n  }, [networkData]);\n\n  return <div id='clusters'></div>;\n}\n\nexport default Clusters;\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\n\nfunction DeltaBarGraph({timeseries, arrayKey}) {\n  const [data, setData] = useState([]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    setData(timeseries);\n  }, [timeseries]);\n\n  useEffect(() => {\n    if (!data.length) return;\n\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    const margin = {top: 50, right: 0, bottom: 50, left: 0};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const barRadius = 5;\n\n    const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((d) => formatTime(d.date)))\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        0,\n        Math.max(\n          1,\n          d3.max(data, (d) => d[arrayKey])\n        ),\n      ])\n      .range([chartBottom, margin.top]); // - barRadius\n\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n\n    svg\n      .select('.x-axis')\n      .style('transform', `translateY(${chartBottom}px)`)\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('x', -40)\n      .attr('dy', '.35em')\n      .attr('transform', 'rotate(-90)')\n      .style('text-anchor', 'start');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .join('path')\n      .attr('class', 'bar')\n      .attr('d', (d) =>\n        roundedBar(\n          xScale(formatTime(d.date)),\n          chartBottom,\n          xScale.bandwidth(),\n          chartBottom - yScale(d[arrayKey]),\n          barRadius\n        )\n      )\n      .attr('fill', (d, i) => (i < data.length - 1 ? '#dc354590' : '#dc3545'));\n\n    svg\n      .selectAll('.delta')\n      .data(data)\n      .join('text')\n      .attr('class', 'delta')\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '11px')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('y', (d) => yScale(d[arrayKey]) - 6)\n      .text((d) => d[arrayKey])\n      .append('tspan')\n      .attr('class', 'percent')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('dy', '-1.2em')\n      .text((d, i) =>\n        i && data[i - 1][arrayKey]\n          ? d3.format('+.1%')(\n              (data[i][arrayKey] - data[i - 1][arrayKey]) /\n                data[i - 1][arrayKey]\n            )\n          : ''\n      );\n  }, [data, arrayKey]);\n\n  return (\n    <div className=\"DeltaBarGraph fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default DeltaBarGraph;\n\nfunction roundedBar(x, y, w, h, r, f) {\n  if (!h) return;\n  // Flag for sweep:\n  if (f === undefined) f = 1;\n  // x coordinates of top of arcs\n  const x0 = x + r;\n  const x1 = x + w - r;\n  // y coordinates of bottom of arcs\n  const y0 = y - h + r;\n\n  const parts = [\n    'M',\n    x,\n    y,\n    'L',\n    x,\n    y0,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x0,\n    y - h,\n    'L',\n    x1,\n    y - h,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x + w,\n    y0,\n    'L',\n    x + w,\n    y,\n    'Z',\n  ];\n  return parts.join(' ');\n}\n","import axios from 'axios';\nimport {format, parse} from 'date-fns';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport {\n  formatDateAbsolute,\n  formatNumber,\n  parseStateTimeseries,\n} from '../utils/common-functions';\nimport {MAP_META, STATE_CODES} from '../constants';\n\nimport Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeries from './timeseries';\nimport Footer from './footer';\n\nfunction State(props) {\n  const mapRef = useRef();\n  const tsRef = useRef();\n\n  const {stateCode} = useParams();\n\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [graphOption, setGraphOption] = useState(1);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [stateData, setStateData] = useState({});\n  const [testData, setTestData] = useState({});\n  const [sources, setSources] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES[stateCode]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getState(stateCode);\n    }\n  }, [fetched, stateCode]);\n\n  const getState = async (code) => {\n    try {\n      const [\n        {data: dataResponse},\n        {data: stateDistrictWiseResponse},\n        {data: statesDailyResponse},\n        {data: stateTestResponse},\n        {data: sourcesResponse},\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n        axios.get('https://api.covid19india.org/sources_list.json'),\n      ]);\n      const states = dataResponse.statewise;\n      setStateData(states.find((s) => s.statecode === code));\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      setTimeseries(ts);\n      const statesTests = stateTestResponse.states_tested_data;\n      const name = STATE_CODES[code];\n      setTestData(\n        statesTests.filter(\n          (obj) => obj.state === name && obj.totaltested !== ''\n        )\n      );\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name],\n      });\n      const sourceList = sourcesResponse.sources_list;\n      setSources(sourceList.filter((state) => state.statecode === code));\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const testObjLast = testData[testData.length - 1];\n\n  return (\n    <React.Fragment>\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <div className=\"breadcrumb fadeInUp\">\n            <Link to=\"/\">Home</Link>/\n            <Link to={`${stateCode}`}>{stateName}</Link>\n          </div>\n          <div className=\"header\">\n            <div\n              className=\"header-left fadeInUp\"\n              style={{animationDelay: '0.3s'}}\n            >\n              <h1>{stateName}</h1>\n              <h5>\n                Last Updated on{' '}\n                {Object.keys(stateData).length\n                  ? formatDateAbsolute(stateData.lastupdatedtime)\n                  : ''}\n              </h5>\n            </div>\n            <div\n              className=\"header-right fadeInUp\"\n              style={{animationDelay: '0.5s'}}\n            >\n              <h5>Tested</h5>\n              <h2>{formatNumber(testObjLast?.totaltested)}</h2>\n              <h5 className=\"timestamp\">\n                {!isNaN(parse(testObjLast?.updatedon, 'dd/MM/yyyy', new Date()))\n                  ? `As of ${format(\n                      parse(testObjLast?.updatedon, 'dd/MM/yyyy', new Date()),\n                      'dd MMM'\n                    )}`\n                  : ''}\n              </h5>\n              <h5>\n                {'per '}\n                {testObjLast?.totaltested && (\n                  <a href={testObjLast.source} target=\"_noblank\">\n                    source\n                  </a>\n                )}\n              </h5>\n            </div>\n          </div>\n\n          {fetched && <Level data={stateData} />}\n          {fetched && <Minigraph timeseries={timeseries} />}\n          {fetched && (\n            <React.Fragment>\n              {\n                <MapExplorer\n                  forwardRef={mapRef}\n                  mapMeta={MAP_META[stateName]}\n                  states={[stateData]}\n                  stateDistrictWiseData={districtData}\n                  stateTestData={testData}\n                  isCountryLoaded={false}\n                />\n              }\n            </React.Fragment>\n          )}\n\n          {fetched && (\n            <div className=\"meta-secondary\">\n              <div className=\"unknown\">\n                <Icon.AlertCircle />\n                <div className=\"unknown-right\">\n                  Awaiting district details for{' '}\n                  {districtData[stateName]?.districtData['Unknown']\n                    ?.confirmed || '0'}{' '}\n                  cases\n                </div>\n              </div>\n              <div className=\"sources\">\n                <Icon.Compass />\n                <div className=\"sources-right\">\n                  Data collected from sources{' '}\n                  {Object.keys(sources[0]).map((key) => {\n                    if (key.match('source') && sources[0][key] !== '') {\n                      const num = key.match(/\\d+/);\n                      return (\n                        <React.Fragment>\n                          {num > 1 ? ',' : ''}\n                          <a href={sources[0][key]}>{num}</a>\n                        </React.Fragment>\n                      );\n                    }\n                    return null;\n                  })}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          {fetched && (\n            <React.Fragment>\n              <div className=\"district-bar\">\n                <div\n                  className=\"district-bar-left fadeInUp\"\n                  style={{animationDelay: '0.6s'}}\n                >\n                  <h2>Top districts</h2>\n                  <div className=\"districts\">\n                    {Object.keys(districtData[stateName].districtData)\n                      .slice(0, 6)\n                      .sort(\n                        (a, b) =>\n                          districtData[stateName].districtData[b].confirmed -\n                          districtData[stateName].districtData[a].confirmed\n                      )\n                      .map((district, index) => {\n                        return (\n                          <div key={index} className=\"district\">\n                            <h2>\n                              {\n                                districtData[stateName].districtData[district]\n                                  .confirmed\n                              }\n                            </h2>\n                            <h5>{district}</h5>\n                            <div className=\"delta\">\n                              <Icon.ArrowUp />\n                              <h6>\n                                {\n                                  districtData[stateName].districtData[district]\n                                    .delta.confirmed\n                                }\n                              </h6>\n                            </div>\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n                <div className=\"district-bar-right\">\n                  {\n                    <DeltaBarGraph\n                      timeseries={timeseries.slice(-5)}\n                      arrayKey={'dailyconfirmed'}\n                    />\n                  }\n                </div>\n              </div>\n\n              <Link to=\"/essentials\">\n                <div\n                  className=\"to-essentials fadeInUp\"\n                  style={{animationDelay: '0.9s'}}\n                >\n                  <h2>Go to essentials</h2>\n                  <Icon.ArrowRightCircle />\n                </div>\n              </Link>\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={tsRef}\n              >\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>Cumulative</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>Daily</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label className=\"main\">Scale Modes</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        <div className=\"state-left\">\n          <div className=\"Clusters fadeInUp\" style={{animationDelay: '0.8s'}}>\n            <h1>Network of transmission</h1>\n            <Clusters stateCode={stateCode} />\n          </div>\n        </div>\n\n        <div className=\"state-right\"></div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default State;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AnimatedSwitch} from 'react-router-transition';\nimport {useTranslation} from 'react-i18next';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport Links from './components/links';\nimport FAQ from './components/faq';\nimport PatientDB from './components/patientdb';\nimport DeepDive from './components/deepdive';\nimport Resources from './components/resources';\nimport State from './components/state';\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: t('menu.home'),\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: t('menu.demographics'),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: t('menu.deepdrive'),\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/links',\n      view: Links,\n      displayName: t('menu.helpfulLinks'),\n      animationDelayForNavbar: 0.5,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/essentials',\n      view: Resources,\n      displayName: t('menu.essentials'),\n      animationDelayForNavbar: 0.6,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/faq',\n      view: FAQ,\n      displayName: t('menu.faq'),\n      animationDelayForNavbar: 0.7,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: t('menu.state'),\n      animationDelayForNavbar: 0.8,\n      showInNavbar: false,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Route\n        render={({location}) => (\n          <div className=\"Almighty-Router\">\n            <Navbar pages={pages} />\n            <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n            <AnimatedSwitch\n              atEnter={{opacity: 0}}\n              atLeave={{opacity: 0}}\n              atActive={{opacity: 1}}\n              className=\"switch-wrapper\"\n              location={location}\n            >\n              {pages.map((page, i) => {\n                return (\n                  <Route\n                    exact\n                    path={page.pageLink}\n                    component={page.view}\n                    key={i}\n                  />\n                );\n              })}\n              <Redirect to=\"/\" />\n            </AnimatedSwitch>\n          </div>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .init({\n    debug: false,\n    fallbackLng: 'en',\n    backend: {\n      loadPath: '/locales/{{lng}}.json',\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ScrollToTop from './utils/ScrollToTop';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <I18nextProvider i18n={i18n}>\n      <Router>\n        <ScrollToTop>\n          <App />\n        </ScrollToTop>\n      </Router>\n    </I18nextProvider>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}