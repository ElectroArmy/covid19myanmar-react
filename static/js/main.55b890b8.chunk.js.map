{"version":3,"sources":["constants.js","utils/common-functions.js","components/row.js","components/table.js","components/level.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/minigraph.js","components/updates.js","components/footer.js","components/home.js","components/languageswitcher.js","components/navbar.js","components/patientsview.js","components/patients.js","components/downloadblock.js","components/patientdb.js","components/Charts/genderchart.js","components/Charts/agechart.js","components/Charts/nationalitychart.js","components/Charts/allstates.js","components/Charts/totalconfirmedchart.js","components/Charts/dailyconfirmedchart.js","components/deepdive.js","components/clusters.js","components/deltabargraph.js","components/state.js","App.js","serviceWorker.js","utils/ScrollToTop.js","i18n/detector.js","i18n/index.js","index.js"],"names":["MAP_TYPES","MAP_META","Myanmar","name","geoDataFile","mapType","graphObjectName","Ayeyarwady","Bago","Chin","Kachin","Kayah","Kayin","Magway","Mandalay","Mon","Rakhine","Sagaing","Shan","Tanintaryi","Yangon","STATE_CODES","reverseStateCodes","Object","keys","map","key","index","stateCodes","push","code","months","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","preprocessTimeseries","timeseries","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","moment","toDate","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","format","parseStateTimeseries","states_daily","statewiseSeries","reduce","a","c","i","isBefore","entries","forEach","k","v","stateCode","toLowerCase","prev","length","Row","props","t","useTranslation","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","handleSort","column","setItem","Fragment","className","total","onMouseEnter","onHighlightState","onMouseLeave","onClick","style","background","fontWeight","reveal","display","statenotes","e","stopPropagation","content","styles","tooltip","borderRadius","fontSize","left","opacity","wrapper","cursor","position","textAlign","arrow","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","colSpan","title","parse","lastupdatedtime","formatDistance","window","innerWidth","to","statecode","district","onHighlightDistrict","delta","Unknown","padding","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","districtData","height","Level","setData","ramp","n","canvas","document","createElement","context","width","getContext","fillStyle","fillRect","legend","x","tickSize","marginTop","marginRight","marginBottom","marginLeft","ticks","tickFormat","tickValues","svg","d3","attr","tickAdjust","g","selectAll","interpolate","Math","min","domain","range","copy","rangeRound","append","toDataURL","interpolator","assign","undefined","round","invertExtent","thresholds","quantiles","thresholdFormat","join","max","bandwidth","call","select","remove","text","node","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","choroplethMap","useRef","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","geoData","path","propertyField","current","topology","topojson","objects","projection","widthStyle","fitWidth","heightStyle","fitSize","bBox","bounds","split","svgLegend","colorScale","maxConfirmed","widthLegend","margin","right","barWidth","heightLegend","isInteger","onceTouchedRegion","features","properties","on","handleMouseover","parseFloat","toFixed","toString","toTitleCase","err","console","log","str","charAt","toUpperCase","prevCount","classed","nodes","parentNode","appendChild","id","preserveAspectRatio","ref","getRegionFromState","region","MapExplorer","forwardRef","regionHighlighted","stateTestData","onMapHighlightChange","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","useMemo","currentMapData","acc","districtWiseData","find","getRegionFromDistrict","newMap","switchMapToState","topDistrict","b","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","type","chartType","setChartType","moving","setMoving","svgRef1","svgRef2","svgRef3","svgRef4","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","chartRight","chartBottom","T","svg1","svg2","svg3","svg4","dateMin","setDate","getDate","dateMax","yScales","xScale","clamp","numTicksX","xAxis","yScale","yAxis","tickPadding","svgArray","plotTotal","dataTypesTotal","dataTypesDaily","colors","uniformScaleMin","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","transition","duration","typeTotal","typeDaily","enter","reverse","getTotalLength","p","getPointAtLength","y","repeat","curve","mousemove","mouseout","xm","this","invert","bisectDate","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","chartKey4","currentStatusCount","currentDiff","formatedDiff","aria-label","Minigraph","timeSeriesData","setTimeSeriesData","dailyMin","dailyMax","domainMinMax","datum","totalLength","delay","target","viewBox","Updates","updates","setUpdates","fetched","setFetched","currentDate","axios","get","then","response","catch","activity","update","replace","activityDate","timestamp","dangerouslySetInnerHTML","__html","Footer","href","rel","Home","setStateDistrictWiseData","graphOption","setGraphOption","lastUpdated","setLastUpdated","activeStateCode","setActiveStateCode","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","showUpdates","setShowUpdates","seenUpdates","setSeenUpdates","newUpdate","setNewUpdate","getStates","currentTimestamp","Promise","all","stateDistrictWiseResponse","statesDailyResponse","statewise","ts","cases_time_series","refs","htmlFor","checked","onChange","event","disabled","JSON","stringify","selected","LanguageSwitcher","i18n","changeLanguage","language","locales","lang","Navbar","pages","expand","setExpand","page","showInNavbar","pageLink","animationDelayForNavbar","location","pathname","displayName","PatientsView","logs","patient","indexTwo","applyClass","setModal","setPatient","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","getElementById","body","classList","add","parseByDate","dateannounced","list","colorMode","gender","typeoftransmission","nationality","getClassNameFn","contractedfromwhichpatientsuspected","patientid","patientIndex","switchPatient","detectedcity","detecteddistrict","detectedstate","agebracket","notes","source1","source2","source3","CSVDownloadLink","csv","Parser","encodeURIComponent","download","DownloadBlock","dataJSON","filterByObject","obj","filters","PatientDB","filteredPatients","setFilteredPatients","error","setError","useLocation","setColorMode","scaleMode","setScaleMode","setFilters","scrollTo","raw_data","fetchRawData","handleFilters","label","newFilters","city","selectedIndex","getSortedValues","setValues","Set","size","Array","from","GenderChart","defaults","global","tooltips","intersect","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","hover","male","female","unknown","chartData","datasets","labels","chartOptions","layout","top","bottom","events","responsive","maintainAspectRatio","callbacks","tooltipItem","dataset","datasetIndex","_meta","currentValue","options","AgeChart","ages","fill","age","scales","xAxes","stacked","gridLines","yAxes","NationalityChart","hasOwnProperty","AllStatesChart","dates","chartReference","React","createRef","elements","line","statesData","Map","status","trim","has","set","previousValue","sortedMap","borderCapStyle","pointBackgroundColor","pointHoverRadius","point","radius","tension","beginAtZero","precision","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","ci","chartInstance","meta","getDatasetMeta","hidden","TotalConfirmedChart","deceased","callback","values","DailyConfirmedChart","barDataSet","DeepDive","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","rawDataResponse","stateDailyResponse","Clusters","stateRawData","setStateRawData","networkData","setNetworkData","getData","contractedStr","sources","match","nodesSet","links","contracted","pid","group","raw","source","prepareNetworkData","NetworkGraph","fgRef","fg","offsetWidth","d3Force","strength","currNode","nodeLabel","nodeColor","linkDirectionalParticleColor","linkDirectionalParticles","linkDirectionalParticleWidth","link","enableZoomPanInteraction","ReactDOM","render","DeltaBarGraph","arrayKey","svgRef","formatTime","paddingInner","w","h","r","y0","roundedBar","State","mapRef","tsRef","useParams","stateData","setStateData","setDistrictData","stateName","getState","dataResponse","App","view","exact","atEnter","atLeave","atActive","component","Boolean","hostname","ScrollToTop","prevProps","children","Component","withRouter","lookup","languageDetector","LanguageDetector","addDetector","Detector","use","Backend","init","debug","fallbackLng","backend","loadPath","interpolation","escapeValue","detection","order","fallback","navigator","serviceWorker","registration","unregister","message"],"mappings":"6ZAAaA,EACF,UADEA,EAEJ,QAKIC,EAAW,CACtBC,QAAS,CACPC,KAAM,UACNC,YAAY,GAAD,OALS,QAKT,iBACXC,QAASL,EACTM,gBAAiB,WAEnBC,WAAY,CACVJ,KAAM,aACNC,YAAY,GAAD,OAXS,QAWT,oBACXC,QAASL,EACTM,gBAAiB,cAEnBE,KAAM,CACJL,KAAM,OACNC,YAAY,GAAD,OAjBS,QAiBT,cACXC,QAASL,EACTM,gBAAiB,QAEnBG,KAAM,CACJN,KAAM,OACNC,YAAY,GAAD,OAvBS,QAuBT,cACXC,QAASL,EACTM,gBAAiB,QAEnBI,OAAQ,CACNP,KAAM,SACNC,YAAY,GAAD,OA7BS,QA6BT,gBACXC,QAASL,EACTM,gBAAiB,UAEnBK,MAAO,CACLR,KAAM,QACNC,YAAY,GAAD,OAnCS,QAmCT,eACXC,QAASL,EACTM,gBAAiB,SAEnBM,MAAO,CACLT,KAAM,QACNC,YAAY,GAAD,OAzCS,QAyCT,eACXC,QAASL,EACTM,gBAAiB,SAEnBO,OAAQ,CACNV,KAAM,SACNC,YAAY,GAAD,OA/CS,QA+CT,gBACXC,QAASL,EACTM,gBAAiB,UAEnBQ,SAAU,CACRX,KAAM,WACNC,YAAY,GAAD,OArDS,QAqDT,kBACXC,QAASL,EACTM,gBAAiB,YAEnBS,IAAK,CACHZ,KAAM,MACNC,YAAY,GAAD,OA3DS,QA2DT,aACXC,QAASL,EACTM,gBAAiB,OAEnB,cAAe,CACbH,KAAM,cACNC,YAAY,GAAD,OAjES,QAiET,mBACXC,QAASL,EACTM,gBAAiB,aAEnBU,QAAS,CACPb,KAAM,UACNC,YAAY,GAAD,OAvES,QAuET,iBACXC,QAASL,EACTM,gBAAiB,WAEnBW,QAAS,CACPd,KAAM,UACNC,YAAY,GAAD,OA7ES,QA6ET,iBACXC,QAASL,EACTM,gBAAiB,WAEnBY,KAAM,CACJf,KAAM,OACNC,YAAY,GAAD,OAnFS,QAmFT,cACXC,QAASL,EACTM,gBAAiB,QAEnBa,WAAY,CACVhB,KAAM,aACNC,YAAY,GAAD,OAzFS,QAyFT,oBACXC,QAASL,EACTM,gBAAiB,cAEnBc,OAAQ,CACNjB,KAAM,SACNC,YAAY,GAAD,OA/FS,QA+FT,gBACXC,QAASL,EACTM,gBAAiB,WAIRe,EAAc,CACzB,QAAS,aACT,QAAS,OACT,QAAS,OACT,QAAS,SACT,QAAS,QACT,QAAS,QACT,QAAS,SACT,QAAS,WACT,QAAS,MACT,QAAS,YACT,QAAS,UACT,QAAS,UACT,QAAS,OACT,QAAS,aACT,QAAS,UAGLC,EAAoB,GAC1BC,OAAOC,KAAKH,GAAaI,KAAI,SAACC,EAAKC,GAEjC,OADAL,EAAkBD,EAAYK,IAAQA,EAC/B,QAEF,IAEDE,EAAa,GACnBL,OAAOC,KAAKH,GAAaI,KAAI,SAACC,EAAKC,GAEjC,OADAC,EAAWC,KAAK,CAACC,KAAMJ,EAAKvB,KAAMkB,EAAYK,KACvC,QAEF,I,iBCrIDK,EAAS,CACb,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,OAOKC,EAAa,SAACC,GACzB,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCE,EAAOJ,EAAgBE,MAAM,EAAG,IAChCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUE,EAAV,YAAkBD,EAAlB,YAA2BF,EAA3B,YAAkCI,EAAlC,WAGWC,EAAqB,SAACN,GACjC,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUD,EAAV,YAAiBH,EAAOK,GAAxB,aAAmCE,EAAKH,MAAM,EAAG,GAAjD,SAsBWK,EAAuB,SAACC,GACnC,OApBkB,WAAgB,IAAfC,EAAc,uDAAP,GACpBC,EAAQ,IAAIC,KAClBD,EAAME,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMC,EAAY,CAChB,iBACA,gBACA,iBACA,iBACA,gBACA,kBAEF,OAAOJ,EACJK,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQF,EAAEE,OAAQF,EAAEG,QAClDJ,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQE,OAAOJ,EAAEE,KAAQ,QACvDH,QAAO,SAACC,GACP,OAAOK,IAAOL,EAAEG,KAAM,cAAcG,SAAWX,KAK5CY,CAAYd,GAAYhB,KAAI,SAAC+B,GAAD,MAAW,CAC5CL,KAAME,IAAOG,EAAKL,KAAM,cAAcG,SACtCG,gBAAiBD,EAAKC,eACtBC,gBAAiBF,EAAKE,eACtBC,eAAgBH,EAAKG,cACrBC,gBAAiBJ,EAAKI,eACtBC,gBAAiBL,EAAKK,eACtBC,eAAgBN,EAAKM,cAErBC,aACGP,EAAKC,gBAAkBD,EAAKE,gBAAkBF,EAAKG,cACtDK,aACGR,EAAKI,gBAAkBJ,EAAKK,gBAAkBL,EAAKM,mBAenD,IAAMG,EAAe,SAACC,GAC3B,IAAMC,EAAkB,IAAIC,KAAKC,aAAa,SAC9C,OAAOC,MAAMJ,GAAS,IAAMC,EAAgBI,OAAOL,IAGxCM,EAAuB,SAAC,GAOnC,IAP6D,IAAX9B,EAAU,EAAxB+B,aAC9BC,EAAkBnD,OAAOC,KAAKH,GAAasD,QAAO,SAACC,EAAGC,GAE1D,OADAD,EAAEC,GAAK,GACAD,IACN,IAEGjC,EAAQU,MAN8C,WAOnDyB,GACP,IAAM3B,EAAOE,IAAOX,EAAKoC,GAAG3B,KAAM,cAE9BA,EAAK4B,SAASpC,EAAO,SACvBpB,OAAOyD,QAAQN,GAAiBO,SAAQ,YAAa,IAAD,mBAAVC,EAAU,KAAPC,EAAO,KAC5CC,EAAYF,EAAEG,cACdC,EAAOH,EAAEA,EAAEI,OAAS,IAAM,GAE1B3B,GAAkBlB,EAAKoC,GAAGM,IAAc,EACxCvB,GAAkBnB,EAAKoC,EAAI,GAAGM,IAAc,EAC5CtB,GAAiBpB,EAAKoC,EAAI,GAAGM,IAAc,EAC3C3B,GAAkBf,EAAKoC,GAAGM,IAAcE,EAAK7B,gBAAkB,GAC/DC,GACHhB,EAAKoC,EAAI,GAAGM,IAAcE,EAAK5B,gBAAkB,GAC9CC,GACHjB,EAAKoC,EAAI,GAAGM,IAAcE,EAAK3B,eAAiB,GAEnDwB,EAAEtD,KAAK,CACLsB,KAAMA,EAAKG,SACXM,eAAgBA,EAChBC,eAAgBA,EAChBC,cAAeA,EACfL,eAAgBA,EAChBC,eAAgBA,EAChBC,cAAeA,EAEfI,YAAaN,EAAiBC,EAAiBC,EAC/CK,YAAaJ,EAAiBC,EAAiBC,QA3B9CgB,EAAI,EAAGA,EAAIpC,EAAK6C,OAAQT,GAAK,EAAI,EAAjCA,GAiCT,OAAOJ,G,gGC0PMc,MA/Wf,SAAaC,GAAQ,IACZC,EAAKC,cAALD,EADW,EAEQE,mBAASH,EAAMI,OAFvB,mBAEXA,EAFW,KAEJC,EAFI,OAGgBF,mBAASH,EAAMM,WAH/B,mBAGXA,EAHW,KAGAC,EAHA,OAI4BJ,mBAASH,EAAMM,WAJ3C,mBAIXE,EAJW,KAIMC,EAJN,OAKcN,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,uBAC7BD,aAAaC,QAAQ,uBACrB,YACJC,cAAaF,aAAaC,QAAQ,yBACmB,SAAjDD,aAAaC,QAAQ,0BAVT,mBAKXE,EALW,KAKDC,EALC,KAclBC,qBAAU,WACRX,EAASL,EAAMI,SACd,CAACJ,EAAMI,QAEVY,qBAAU,WACRT,EAAaP,EAAMM,WACnBG,EAAmBT,EAAMM,aACxB,CAACN,EAAMM,YAEV,IAAMW,EAAe,WACnBjB,EAAMiB,aAAajB,EAAMI,MAAMA,QAO3Bc,EAAgBC,uBACpB,SAACC,GACC,IAAMC,EAAS,GACXD,IACFtF,OAAOC,KAAKqF,GACTE,MAAK,SAACC,EAAWC,GAChB,IAAMd,EAAaI,EAASJ,WACtBe,EACW,aAAff,EACIa,EACAG,SAASN,EAAWG,GAAWI,WAC/BC,EACW,aAAflB,EACIc,EACAE,SAASN,EAAWI,GAAWG,WAC/BE,EACJJ,EAASG,GAELH,IAAWG,GAAUL,EAAYC,EADjC,GAGC,EACP,OAAOV,EAASD,YACZgB,GACmB,EAAnBA,KAELrC,SAAQ,SAACvD,GACRoF,EAAOpF,GAAOmF,EAAWnF,MAE7BwE,EAAmBY,MAGvB,CAACP,EAASD,YAAaC,EAASJ,aAG5BoB,EAAa,SAACC,GAClB,IAAMlB,EACJC,EAASJ,aAAeqB,GACnBjB,EAASD,YACc,aAAxBC,EAASJ,WACfK,EAAY,CACVL,WAAYqB,EACZlB,YAAaA,IAEfF,aAAaqB,QAAQ,sBAAuBD,GAC5CpB,aAAaqB,QAAQ,uBAAwBnB,IAO/C,OAJAG,qBAAU,WACRE,EAAcZ,KACb,CAACA,EAAWQ,EAAUI,IAGvB,kBAAC,IAAMe,SAAP,KACE,wBACEC,UAAWlC,EAAMmC,MAAQ,iBAAmB,QAC5CC,aAAc,kCAAMpC,EAAMqC,wBAAZ,aAAM,OAAArC,EAAyBI,EAAOJ,EAAM9D,QAC1DoG,aAAc,kCAAMtC,EAAMqC,wBAAZ,aAAM,OAAArC,IAEpBuC,QAAUvC,EAAMmC,MAAuB,KAAflB,EACxBuB,MAAO,CAACC,WAAYzC,EAAM9D,MAAQ,IAAM,EAAI,UAAY,KAExD,wBAAIsG,MAAO,CAACE,WAAY,MACtB,yBAAKR,UAAU,wBACb,0BACEA,UAAS,mBACPlC,EAAM2C,OAAS,kBAAoB,mBAErCH,MAAO,CAACI,QAAU5C,EAAMmC,MAAa,OAAL,IAChCI,QAAS,WACPtB,MAGF,kBAAC,IAAD,OAEF,0BAAMiB,UAAU,yBACbjC,EAAE,cAAD,OAAeG,EAAMA,MAAMR,gBAC5BQ,EAAMyC,YACL,0BAAMN,QAjFE,SAACO,GACrBA,EAAEC,oBAiFY,kBAAC,UAAD,CACEC,QAAS,CAAC,GAAD,OAAI5C,EAAMyC,aACnBI,OAAQ,CACNC,QAAS,CACPT,WAAY,OACZU,aAAc,OACdC,SAAU,OACVC,KAAM,OACNC,QAAS,KAEXC,QAAS,CACPC,OAAQ,SACRZ,QAAS,eACTa,SAAU,WACVC,UAAW,UAEbC,MAAO,CACLN,KAAM,SAIV,kBAAC,IAAD,WAOZ,4BACE,0BAAMnB,UAAU,SAASM,MAAO,CAACoB,MAAO,YACrCxD,EAAMyD,eAAiB,GAAK,kBAAC,IAAD,MAC5BzD,EAAMyD,eAAiB,EAAvB,UAA8BzD,EAAMyD,gBAAmB,IAE1D,0BAAM3B,UAAU,qBACiB,IAA9BR,SAAStB,EAAMuB,WACZ,IACAnD,EAAa4B,EAAMuB,aAG3B,wBACEa,MAAO,CAACoB,MAAkC,IAA3BlC,SAAStB,EAAM0D,QAAgB,UAAY,YAM9B,IAA3BpC,SAAStB,EAAM0D,QAAgB,IAAMtF,EAAa4B,EAAM0D,SAE3D,wBACEtB,MAAO,CACLoB,MAAqC,IAA9BlC,SAAStB,EAAM2D,WAAmB,UAAY,YAGvD,0BAAM7B,UAAU,SAASM,MAAO,CAACoB,MAAO,YACrCxD,EAAM4D,eAAiB,GAAK,kBAAC,IAAD,MAC5B5D,EAAM4D,eAAiB,EAAvB,UAA8B5D,EAAM4D,gBAAmB,IAE1D,0BAAM9B,UAAU,qBACiB,IAA9BR,SAAStB,EAAM2D,WACZ,IACAvF,EAAa4B,EAAM2D,aAG3B,wBACEvB,MAAO,CAACoB,MAAkC,IAA3BlC,SAAStB,EAAM6D,QAAgB,UAAY,YAE1D,0BAAM/B,UAAU,SAASM,MAAO,CAACoB,MAAO,YACrCxD,EAAM8D,YAAc,GAAK,kBAAC,IAAD,MACzB9D,EAAM8D,YAAc,EAApB,UAA2B9D,EAAM8D,aAAgB,IAEpD,0BAAMhC,UAAU,qBACc,IAA3BR,SAAStB,EAAM6D,QAAgB,IAAMzF,EAAa4B,EAAM6D,WAK/D,wBACE/B,UAAW,oBACXM,MAAO,CAACI,QAAS5C,EAAM2C,SAAW3C,EAAMmC,MAAQ,GAAK,SAErD,wBAAIgC,QAAS,GACX,yBAAKjC,UAAU,eACb,gDACA,wBACEkC,MACEvF,MAAM1B,KAAKkH,MAAM9H,EAAWyD,EAAMI,MAAMkE,mBACpC,GACAxH,EAAmBkD,EAAMI,MAAMkE,kBAGpCzF,MAAM1B,KAAKkH,MAAM9H,EAAWyD,EAAMI,MAAMkE,mBACrC,GADH,UAEMC,YACD,IAAIpH,KAAKZ,EAAWyD,EAAMI,MAAMkE,kBAChC,IAAInH,MAJT,YAWT,wBACE+E,UAAS,mBACTM,MAAO,CAACI,QAAS5C,EAAM2C,SAAW3C,EAAMmC,MAAQ,GAAK,SAErD,wBAAII,QAAS,SAACO,GAAD,OAAOhB,EAAW,cAC7B,yBAAKI,UAAU,mBACb,0BAAMkC,MAAM,YAAZ,YACA,yBACE5B,MAAO,CACLI,QAC0B,aAAxB9B,EAASJ,WAA4B,UAAY,SAGpDI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIK,QAAS,SAACO,GAAD,OAAOhB,EAAW,eAC7B,yBAAKI,UAAU,mBACb,0BACEA,UAAS,UAAKsC,OAAOC,YAAc,IAAM,YAAc,IACvDL,MAAM,aAELI,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACEjC,MAAO,CACLI,QAC0B,cAAxB9B,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,kBAAkBiC,QAAS,GACvC,kBAAC,IAAD,CAAMO,GAAE,gBAAWtE,EAAMuE,YACvB,6BACE,kDACA,kBAAC,IAAD,UAMPnE,GACC1E,OAAOC,KAAKyE,GACTlD,QAAO,SAACsH,GAAD,MAAyC,YAA3BA,EAAShF,iBAC9B5D,KAAI,SAAC4I,EAAU1I,GACd,MAA+B,YAA3B0I,EAAShF,cAET,wBACE3D,IAAKC,EACLgG,UAAS,WACTM,MAAO,CACLI,QAAS5C,EAAM2C,SAAW3C,EAAMmC,MAAQ,GAAK,OAC7CM,WAAYvG,EAAQ,IAAM,EAAI,UAAY,IAE5CkG,aAAc,kCACZpC,EAAM6E,2BADM,aACZ,OAAA7E,EAA4B4E,EAAUxE,EAAOJ,EAAM9D,QAErDoG,aAAc,kCAAMtC,EAAM6E,2BAAZ,aAAM,OAAA7E,KAKpB,wBAAIwC,MAAO,CAACE,WAAY,MAAOkC,GAC/B,4BACE,0BAAM1C,UAAU,SAASM,MAAO,CAACoB,MAAO,YACrCpD,EAAgBoE,GAAUE,MAAMnD,UAAY,GAC3C,kBAAC,IAAD,MAEDnB,EAAgBoE,GAAUE,MAAMnD,UAAY,EAA5C,UACMnB,EAAgBoE,GAAUE,MAAMnD,WACnC,IAEN,0BAAMO,UAAU,qBACb1D,EAAagC,EAAgBoE,GAAUjD,cAM3C,SAGG,OAAfnB,QAAe,IAAfA,OAAA,EAAAA,EAAiBuE,UAChB,kBAAC,IAAM9C,SAAP,KACE,wBACEC,UAAS,WACTM,MAAO,CAACI,QAAS5C,EAAM2C,SAAW3C,EAAMmC,MAAQ,GAAK,SAErD,wBAAID,UAAU,UAAUM,MAAO,CAACE,WAAY,MAA5C,UAEE,kBAAC,UAAD,CACEM,QAAS,CAAC,sDACVC,OAAQ,CACNC,QAAS,CACPT,WAAY,OACZU,aAAc,MACdC,SAAU,OACVC,KAAM,OACNC,QAAS,EACT0B,QAAS,UAEXzB,QAAS,CACPC,OAAQ,SACRZ,QAAS,eACTa,SAAU,WACVC,UAAW,YAIf,kBAAC,IAAD,QAGJ,4BACE,0BAAMxB,UAAU,SAASM,MAAO,CAACoB,MAAO,YACrCpD,EAAe,QAAYsE,MAAMnD,UAAY,GAC5C,kBAAC,IAAD,MAEDnB,EAAe,QAAYsE,MAAMnD,UAAY,EAA7C,UACMnB,EAAe,QAAYsE,MAAMnD,WACpC,IAEN,0BAAMO,UAAU,qBACb1D,EAAagC,EAAe,QAAYmB,eAOnD,wBACEO,UAAS,SACTM,MAAO,CAACI,QAAS5C,EAAM2C,SAAW3C,EAAMmC,MAAQ,GAAK,SAErD,6BACA,6BACA,gCC3EO8C,MArSf,SAAejF,GAAQ,IACdC,EAAKC,cAALD,EADa,EAEQE,mBAASH,EAAMkF,QAFvB,mBAEbA,EAFa,KAELC,EAFK,OAGwBhF,mBAAS,IAHjC,mBAGbiF,EAHa,KAGGC,EAHH,OAIclF,mBAAS,IAJvB,mBAIbG,EAJa,KAIFC,EAJE,OAKMJ,mBAAS,GALf,mBAKbmF,EALa,KAKNC,EALM,OAMYpF,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,oBACrB,YACJC,cAAaF,aAAaC,QAAQ,sBACgB,SAA9CD,aAAaC,QAAQ,uBAXP,mBAMbE,EANa,KAMHC,EANG,KAepBC,qBAAU,YACc,IAAlBhB,EAAMwF,QACRL,EAAUnF,EAAMkF,OAAOxI,MAAM,EAAG,IAEhCyI,EAAUnF,EAAMkF,UAEjB,CAAClF,EAAMkF,OAAQlF,EAAMwF,UAExBxE,qBAAU,WACJhB,EAAMkF,OAAO,IACfG,EACErF,EAAMkF,OAAOhG,QAAO,SAACC,EAAGiB,GACtB,OAAO,eAAIjB,EAAX,eAAeiB,EAAMA,OAAQ,MAC5B,OAGN,CAACJ,EAAMkF,SAEVlE,qBAAU,WACJkE,EAAOpF,OAAS,GAElByF,EAASL,EAAOxI,MAAM,GAAGY,QAAO,SAACmI,GAAD,OAAOA,GAAKA,EAAE9D,UAAY,KAAG7B,UAE9D,CAACoF,IAEJlE,qBAAU,WACRT,EAAaP,EAAM0F,yBAClB,CAAC1F,EAAM0F,wBAEV,IA6BM5D,EAAa,SAACgB,EAAG9C,GACrB,IAAM2F,EAAoB7C,EAAE8C,cACzBC,cAAc,QACdC,aAAa,SACblG,cACGiB,EACJC,EAASJ,aAAeiF,GACnB7E,EAASD,YACc,UAAxBC,EAASJ,WACfK,EAAY,CACVL,WAAYiF,EACZ9E,YAAaA,IAEfF,aAAaqB,QAAQ,mBAAoB2D,GACzChF,aAAaqB,QAAQ,oBAAqBnB,IAGtCI,EAAe,SAACb,GACpBiF,EAAkB,eACbD,EADY,eAEdhF,GAASgF,EAAehF,OAM7B,OAvDe,SAAC0C,EAAG9C,GACjB,IAAM+F,EAAWb,EAAOc,OAAO,EAAG,GAClCd,EAAO5D,MAAK,SAAC2E,EAAYC,GACvB,IAAMxF,EAAaI,EAASJ,WACxBe,EAASwE,EAAWvF,GACpBkB,EAASsE,EAAWxF,GAOxB,MALmB,UAAfA,IACFe,EAASC,SAASuE,EAAWvF,IAC7BkB,EAASF,SAASwE,EAAWxF,KAG3BI,EAASD,YACJY,EAASG,GAEZH,IAAWG,GAAUqE,EAAU,MAAYC,EAAU,MADrD,GAGC,EAEEzE,EAASG,GAEZH,IAAWG,GAAUqE,EAAU,MAAYC,EAAU,MADrD,GAGC,KAGThB,EAAOiB,QAAQJ,EAAS,IA2B1BK,GAEIlB,EAAOpF,OAAS,EAEhB,kBAAC,IAAMmC,SAAP,KACE,wBACEC,UAAU,2BACVM,MAAO,CAAC6D,eAAgB,SAEvBpG,EAAE,0BAEL,2BAAOiC,UAAU,iBAAiBM,MAAO,CAAC6D,eAAgB,SACxD,+BACE,4BACE,wBACEnE,UAAU,uBACVK,QAAS,SAACO,GAAD,OAAOhB,EAAWgB,KAE3B,yBAAKZ,UAAU,mBACb,0BAAMkC,MAAM,SAASnE,EAAE,WACvB,yBACEuC,MAAO,CACLI,QAC0B,UAAxB9B,EAASJ,WAAyB,UAAY,SAGjDI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASK,QAAS,SAACO,GAAD,OAAOhB,EAAWgB,KAChD,yBAAKZ,UAAU,mBACb,0BACEA,UAAS,UAAKsC,OAAOC,YAAc,IAAM,YAAc,IACvDL,MAAM,aAELI,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnBxE,EAAE,qBACFA,EAAE,mBACJA,EAAE,mBAER,yBACEuC,MAAO,CACLI,QAC0B,cAAxB9B,EAASJ,WACL,UACA,SAGPI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASK,QAAS,SAACO,GAAD,OAAOhB,EAAWgB,KAChD,yBAAKZ,UAAU,mBACb,0BACEA,UAAS,UAAKsC,OAAOC,YAAc,IAAM,UAAY,IACrDL,MAAM,UAELI,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnBxE,EAAE,kBACFA,EAAE,gBACJA,EAAE,gBAER,yBACEuC,MAAO,CACLI,QAC0B,WAAxB9B,EAASJ,WAA0B,UAAY,SAGlDI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASK,QAAS,SAACO,GAAD,OAAOhB,EAAWgB,KAChD,yBAAKZ,UAAU,mBACb,0BACEA,UAAS,UAAKsC,OAAOC,YAAc,IAAM,WAAa,IACtDL,MAAM,aAELI,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnBxE,EAAE,qBACFA,EAAE,mBACJA,EAAE,mBAER,yBACEiC,UAC0B,cAAxBpB,EAASJ,WAA6B,aAAe,KAGzD,yBACE8B,MAAO,CACLI,QAC0B,cAAxB9B,EAASJ,WACL,UACA,SAGPI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,SAASK,QAAS,SAACO,GAAD,OAAOhB,EAAWgB,KAChD,yBAAKZ,UAAU,mBACb,0BACEA,UAAS,UAAKsC,OAAOC,YAAc,IAAM,UAAY,IACrDL,MAAM,UAELI,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnBxE,EAAE,oBACFA,EAAE,kBACJA,EAAE,kBAER,yBACEuC,MAAO,CACLI,QAC0B,WAAxB9B,EAASJ,WAA0B,UAAY,SAGlDI,EAASD,YACR,yBAAKqB,UAAU,aAEf,yBAAKA,UAAU,oBAQ3B,+BACGgD,EAAOlJ,KAAI,SAACoE,EAAOlE,GAClB,OAAc,IAAVA,GAAekE,EAAMuB,UAAY,EAEjC,kBAAC,EAAD,CACE1F,IAAKC,EACLA,MAAOA,EACPkE,MAAOA,EACP+B,OAAO,EACPQ,OAAQyC,EAAehF,EAAMA,OAC7BE,UACEF,EAAMA,SAASE,EACXA,EAAUF,EAAMA,OAAOkG,aACvB,GAENjE,iBAAkBrC,EAAMqC,iBACxBwC,oBAAqB7E,EAAM6E,oBAC3B5D,aAAcA,IAIb,SAIX,+BACGiE,EAAOpF,OAAS,IAAuB,IAAlBE,EAAMwF,SAC1B,kBAAC,EAAD,CACEvJ,IAAK,EACLmE,MAAO8E,EAAO,GACd/C,OAAO,EACPE,iBAAkBrC,EAAMqC,qBAKhC,wBAAIH,UAAU,2BAA2BM,MAAO,CAAC6D,eAAgB,OAC9DpG,EAAE,kBAAmB,CAACqF,YAKtB,yBAAK9C,MAAO,CAAC+D,OAAQ,YC9MjBC,MApFf,SAAexG,GAAQ,IACdC,EAAKC,cAALD,EADa,EAEIE,mBAASH,EAAM/C,MAFnB,mBAEbA,EAFa,KAEPwJ,EAFO,KAgBpB,OAZAzF,qBAAU,WACRyF,EAAQ,CACN3C,QAAS9D,EAAM/C,KAAK6G,OACpBnC,WAAY3B,EAAM/C,KAAK0E,UACvBoC,WAAY/D,EAAM/C,KAAK8G,UACvBE,QAASjE,EAAM/C,KAAKgH,OACpBJ,gBAAiB7D,EAAM/C,KAAK4G,eAC5BK,aAAclE,EAAM/C,KAAKiH,YACzBF,gBAAiBhE,EAAM/C,KAAK+G,mBAE7B,CAAChE,EAAM/C,OAGR,yBAAKiF,UAAU,SACb,yBACEA,UAAU,gCACVM,MAAO,CAAC6D,eAAgB,OAExB,4BAAMpG,EAAE,mBACR,gCAEGpB,MAAM5B,EAAK4G,gBACR,GACA5G,EAAK4G,eAAiB,EACtB,IAAMrF,EAAavB,EAAK4G,gBACxB,KANN,KASA,4BAAKrF,EAAavB,EAAK0E,WAAvB,MAGF,yBACEO,UAAU,8BACVM,MAAO,CAAC6D,eAAgB,SAExB,wBAAInE,UAAU,WAAWjC,EAAE,gBAC3B,oCAEA,wBAAIiC,UAAU,uBAAuB1D,EAAavB,EAAK6G,UAGzD,yBACE5B,UAAU,+BACVM,MAAO,CAAC6D,eAAgB,SAExB,wBAAInE,UAAU,WAAWjC,EAAE,mBAC3B,gCAEGpB,MAAM5B,EAAK+G,gBACR,GACA/G,EAAK+G,eAAiB,EACtB,IAAMxF,EAAavB,EAAK+G,gBACxB,KANN,KASA,wBAAI9B,UAAU,0BACX1D,EAAavB,EAAK8G,WAAY,MAInC,yBACE7B,UAAU,8BACVM,MAAO,CAAC6D,eAAgB,SAExB,wBAAInE,UAAU,WAAWjC,EAAE,kBAC3B,gCAEGpB,MAAM5B,EAAKiH,aACR,GACAjH,EAAKiH,YAAc,EACnB,IAAM1F,EAAavB,EAAKiH,aACxB,KANN,KASA,wBAAIhC,UAAU,uBAAuB1D,EAAavB,EAAKgH,Y,gBCoG/D,SAASyC,EAAK9C,GAKZ,IAL6B,IAAV+C,EAAS,uDAAL,IACjBC,EAASC,SAASC,cAAc,UAChCC,GAAYH,EAAOI,MAAQL,EAAKC,EAAOL,OAAS,EAAIK,GAAQK,WAChE,MAEO5H,EAAI,EAAGA,EAAIsH,IAAKtH,EACvB0H,EAAQG,UAAYtD,EAAMvE,GAAKsH,EAAI,IACnCI,EAAQI,SAAS9H,EAAG,EAAG,EAAG,GAE5B,OAAOuH,EAGMQ,MA/Lf,WAaS,IAcHC,EAdE,yDAAJ,GAZFzD,EAYM,EAZNA,MACAQ,EAWM,EAXNA,MAWM,IAVNkD,gBAUM,MAVK,EAUL,MATNN,aASM,MATE,IASF,MARNT,cAQM,MARG,GAAKe,EAQR,MAPNC,iBAOM,MAPM,GAON,MANNC,mBAMM,MANQ,EAMR,MALNC,oBAKM,MALS,GAAKH,EAKd,MAJNI,kBAIM,MAJO,EAIP,MAHNC,aAGM,MAHEX,EAAQ,GAGV,EAFNY,EAEM,EAFNA,WACAC,EACM,EADNA,WAEMC,EAAMC,IACF,OACPC,KAAK,QAAShB,GACdgB,KAAK,SAAUzB,GACfyB,KAAK,UAAW,CAAC,EAAG,EAAGhB,EAAOT,IAC9B/D,MAAM,WAAY,WAClBA,MAAM,UAAW,SAEhByF,EAAa,SAACC,GACFA,EAAEC,UAAU,cACpBH,KAAK,KAAMT,EAAYE,EAAelB,IAM9C,GAAI3C,EAAMwE,YAAa,CACrB,IAAMzB,EAAI0B,KAAKC,IAAI1E,EAAM2E,SAASzI,OAAQ8D,EAAM4E,QAAQ1I,QAExDuH,EAAIzD,EACD6E,OACAC,WACCX,IAAYA,IAAeL,EAAYV,EAAQQ,GAAcb,IAGjEmB,EACGa,OAAO,SACPX,KAAK,IAAKN,GACVM,KAAK,IAAKT,GACVS,KAAK,QAAShB,EAAQU,EAAaF,GACnCQ,KAAK,SAAUzB,EAASgB,EAAYE,GACpCO,KAAK,sBAAuB,QAC5BA,KACC,aACAtB,EACE9C,EAAM6E,OAAOF,OAAOR,IAAYA,IAAe,EAAG,GAAIpB,KACtDiC,kBAKH,GAAIhF,EAAMiF,cAsBb,GArBAxB,EAAIvL,OAAOgN,OACTlF,EACG6E,OACAI,aAAad,IAAoBL,EAAYV,EAAQQ,IACxD,CACEgB,MADF,WAEI,MAAO,CAACd,EAAYV,EAAQQ,MAKlCM,EACGa,OAAO,SACPX,KAAK,IAAKN,GACVM,KAAK,IAAKT,GACVS,KAAK,QAAShB,EAAQU,EAAaF,GACnCQ,KAAK,SAAUzB,EAASgB,EAAYE,GACpCO,KAAK,sBAAuB,QAC5BA,KAAK,aAActB,EAAK9C,EAAMiF,gBAAgBD,cAG5CvB,EAAEM,MAAO,CACZ,QAAmBoB,IAAflB,EAA0B,CAC5B,IAAMlB,EAAI0B,KAAKW,MAAMrB,EAAQ,GAC7BE,EAAaE,IACJpB,GACN3K,KAAI,SAACqD,GAAD,OAAO0I,IAAYnE,EAAM2E,SAAUlJ,GAAKsH,EAAI,OAE3B,oBAAfiB,IACTA,EAAaG,SAAyBgB,IAAfnB,EAA2B,KAAOA,UAM1D,GAAIhE,EAAMqF,aAAc,CAC3B,IAAMC,EAAatF,EAAMsF,WACrBtF,EAAMsF,aACNtF,EAAMuF,UACNvF,EAAMuF,YACNvF,EAAM2E,SAEJa,OACWL,IAAfnB,EACI,SAACrK,GAAD,OAAOA,GACe,kBAAfqK,EACPG,IAAUH,GACVA,EAENP,EAAIU,MAEDQ,OAAO,EAAE,EAAG3E,EAAM4E,QAAQ1I,OAAS,IACnC4I,WAAW,CAAChB,EAAYV,EAAQQ,IAEnCM,EACGa,OAAO,KACPR,UAAU,QACVlL,KAAK2G,EAAM4E,SACXa,KAAK,QACLrB,KAAK,KAAK,SAACzK,EAAG8B,GAAJ,OAAUgI,EAAEhI,EAAI,MAC1B2I,KAAK,IAAKT,GACVS,KAAK,SAAS,SAACzK,EAAG8B,GAAJ,OAAUgI,EAAEhI,GAAKgI,EAAEhI,EAAI,MACrC2I,KAAK,SAAUzB,EAASgB,EAAYE,GACpCO,KAAK,QAAQ,SAACzK,GAAD,OAAOA,KAEvBsK,EAAaE,KAAU,EAAGmB,EAAWpJ,QACrC8H,EAAa,SAACvI,GACZ,OAAW,IAAPA,EAAiB+J,EAAgB,GAC5B/J,IAAM6J,EAAWpJ,OAAS,EAC1BT,IAAM6J,EAAWpJ,OAAS,EAC1BsJ,EAAgBF,EAAW7J,GAAK,IAAKA,GACvC+J,EAAgBF,EAAW7J,GAAIA,QAHjC,QASPgI,EAAIU,MAEDQ,OAAO3E,EAAM2E,UACbG,WAAW,CAAChB,EAAYV,EAAQQ,IAEnCM,EACGa,OAAO,KACPR,UAAU,QACVlL,KAAK2G,EAAM2E,UACXc,KAAK,QACLrB,KAAK,IAAKX,GACVW,KAAK,IAAKT,GACVS,KAAK,QAASK,KAAKiB,IAAI,EAAGjC,EAAEkC,YAAc,IAC1CvB,KAAK,SAAUzB,EAASgB,EAAYE,GACpCO,KAAK,OAAQpE,GAEhBqE,EAAa,aA2Bf,OAxBAH,EACGa,OAAO,KACPX,KAAK,YAFR,sBAEoCzB,EAASkB,EAF7C,MAGG+B,KACCzB,IACcV,GACXM,MAAMA,EAA6B,kBAAfC,EAA0BA,OAAamB,GAC3DnB,WAAiC,oBAAfA,EAA4BA,OAAamB,GAC3DzB,SAASA,GACTO,WAAWA,IAEf2B,KAAKvB,GACLuB,MAAK,SAACtB,GAAD,OAAOA,EAAEuB,OAAO,WAAWC,YAChCF,MAAK,SAACtB,GAAD,OACJA,EACGS,OAAO,QACPX,KAAK,IAAKN,GACVM,KAAK,IAAKT,EAAYE,EAAelB,EAAS,GAC9CyB,KAAK,OAAQ,gBACbA,KAAK,cAAe,SACpBA,KAAK,cAAe,QACpB2B,KAAKvF,MAGL0D,EAAI8B,QC5KPC,EAAmB,CACvBC,QAAS,KACT1J,MAAO,MAwOM2J,MArOf,YASI,IARFC,EAQC,EARDA,UACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,iBACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,kBACAC,EACC,EADDA,gBAEOtK,EAAKC,cAALD,EACDuK,EAAgBC,iBAAO,MACvBC,EAAmBD,iBAAO,MAH/B,EAI2CtK,mBAAS,GAJpD,mBAIMwK,EAJN,KAIsBC,EAJtB,KAMKC,EAAQ1J,uBACZ,SAAC2J,GACC/C,IAAa,iBAAiB2B,SAE9B,IAUIqB,EACA/D,EACAT,EAZEyE,EAAgBnB,EAAiBM,EAAQvP,SACzCkN,EAAMC,IAAUyC,EAAcS,SAE9BC,EAAWC,IACfL,EACAA,EAAQM,QAAQjB,EAAQtP,kBAGpBwQ,EAAatD,MAKnB,IAAKD,EAAIE,KAAK,WAAY,CACxB,IAAMsD,EAAa5J,SAASoG,EAAItF,MAAM,UACtC,GAAI+H,EAAiBc,EAAWE,SAASD,EAAYJ,OAChD,CACH,IAAMM,EAAc9J,SAASoG,EAAItF,MAAM,WACvC6I,EAAWI,QAAQ,CAACH,EAAYE,GAAcN,GAGhD,IAAMQ,GADNX,EAAOhD,IAAWsD,IACAM,OAAOT,GACzBlE,GAAS0E,EAAK,GAAG,GACjBnF,GAAUmF,EAAK,GAAG,GAClB5D,EAAIE,KAAK,UAAT,cAA2BhB,EAA3B,YAAoCT,IAEtC,IAAMmF,EAAO5D,EAAIE,KAAK,WAAW4D,MAAM,KACvC5E,GAAS0E,EAAK,GACdnF,GAAUmF,EAAK,GACfL,EAAWI,QAAQ,CAACzE,EAAOT,GAAS2E,GACpCH,EAAOhD,IAAWsD,GAGlB,IAAMQ,EAAY9D,IAAU2C,EAAiBO,SAC7CY,EAAU1D,UAAU,KAAKuB,SACzB,IACMoC,EAAa/D,IACjB,CAAC,EAAGiC,EAAU+B,eAFQ,SAAC9L,GAAD,OAAO8H,IAAuB,IAAJ9H,MAM5C+L,EAActK,SAASmK,EAAUrJ,MAAM,UACvCyJ,EAAS,CAAC5I,KAAM,IAAO2I,EAAaE,MAAO,IAAOF,GAClDG,EAAWH,EAAcC,EAAO5I,KAAO4I,EAAOC,MAC9CE,GAAgBP,EAAU7D,KAAK,UACrC6D,EACGlD,OAAO,KACPnG,MAAM,YAFT,qBAEoCyJ,EAAO5I,KAF3C,QAGGsF,QAAO,kBACNvB,EAAO,CACLxD,MAAOkI,EACP1H,MAAOnE,EAAE,8BACT+G,MAAOmF,EACP5F,OAAQ,GAAM6F,EACdzE,MAAO,EACPC,WAAY,SAAUrK,EAAG8B,EAAGsH,GAC1B,GAAKhJ,OAAO0O,UAAU9O,GACtB,OAAI8B,IAAMsH,EAAE7G,OAAS,EAAUvC,EAAI,IAC5BA,QAIfsO,EAAU7D,KAAK,UAAf,cAAiCgE,EAAjC,YAAgDI,IAGhD,IAAIE,EAAoB,KAClBpE,EAAIJ,EAAIa,OAAO,KAAKX,KAAK,QAASmC,EAAQtP,iBAChDqN,EAAES,OAAO,KACNX,KAAK,QAAS,UACdG,UAAU,QACVlL,KAAKiO,EAASqB,UACdlD,KAAK,QACLrB,KAAK,QAAS,eACdA,KAAK,QAAQ,SAAUzK,GACtB,IAAMoJ,EAAIjF,SAASuI,EAAQ1M,EAAEiP,WAAWxB,MAAoB,EAE5D,OADoB,IAANrE,EAAU,UAAYmF,EAAWnF,MAGhDqB,KAAK,IAAK+C,GACV/C,KAAK,iBAAkB,OACvByE,GAAG,aAAa,SAAClP,GAChBmP,EAAgBnP,EAAEiP,WAAWxB,OAE9ByB,GAAG,cAAc,SAAClP,GACb+O,IAAsB/O,IAAG+O,EAAoB,SAElDG,GAAG,cAAc,SAAClP,GACY+O,EAAzBA,IAAsB/O,EAAuB,KACxBA,KAE1BkP,GAAG,SAiCN,SAAqBlP,GAEnB,GADAwK,IAAShF,kBACLuJ,GAAqBnC,EAAQvP,UAAYL,EAAiB,OAC9D6P,EAAU7M,EAAEiP,WAAWxB,OAnCtBxI,MAAM,SAAU,WAChBmG,OAAO,SACPgB,MAAK,SAAUpM,GACd,IAAMkB,EAAQwL,EAAQ1M,EAAEiP,WAAWxB,KAAmB,EACtD,OACErN,OACEgP,WAAkBlO,GAASuL,EAAU7H,OAAS,MAAnC,KAA4CyK,QAAQ,IAC/DC,WACF,UACAC,EAAYvP,EAAEiP,WAAWxB,OAI/B9C,EAAES,OAAO,QACNX,KAAK,QAAS,WACdA,KAAK,SAAU,aACfA,KAAK,OAAQ,QACbA,KAAK,eAAgB,GACrBA,KACC,IACA+C,EAAKI,IAAcL,EAASA,EAAQM,QAAQjB,EAAQtP,oBAGxD,IAAM6R,EAAkB,SAAChS,GACvB,IACE4P,EAAkB5P,GAClBwP,EAAiBxP,EAAMyP,GACvB,MAAO4C,GACPC,QAAQC,IAAI,MAAOF,KAWvBjF,EAAI2E,GAAG,SAAS,WACdnC,EAAkB,MACdH,EAAQvP,UAAYL,GACtB2P,EAAiB,QAASC,QAGhC,CACEF,EACAE,EACAH,EAAU7H,MACV6H,EAAU+B,aACV3B,EACAF,EACAI,EACAC,EACAtK,IAIE6M,EAAc,SAACI,GACnBA,EAAMA,EAAItN,cAAcgM,MAAM,KAC9B,IAAK,IAAIvM,EAAI,EAAGA,EAAI6N,EAAIpN,OAAQT,IAC9B6N,EAAI7N,GAAK6N,EAAI7N,GAAG8N,OAAO,GAAGC,cAAgBF,EAAI7N,GAAG3C,MAAM,GAEzD,OAAOwQ,EAAI7D,KAAK,MAgClB,OA7BArI,qBAAU,WACR,sBAAC,4BAAA7B,EAAA,sEACoB4I,IAAQoC,EAAQxP,aADpC,OACOsC,EADP,OAEK+M,GAAaQ,EAAcS,UAC7BJ,EAAM5N,GACN2N,GAAkB,SAACyC,GAAD,OAAeA,EAAY,MAJhD,0CAAD,KAOC,CAAClD,EAAQxP,YAAaqP,EAAWa,IAiBpC7J,qBAAU,WAfmB,IAACtG,IAgBP2P,EAfPtC,IAAa,gBACrBuF,QAAQ,aAAa,SAAC/P,EAAG8B,EAAGkO,GAChC,IAAMvC,EACJnB,EAAgB,SAAatM,EAAEiP,WAC3B3C,EAAgB,MAChBA,EAAgB,QACtB,OAAInP,IAAS6C,EAAEiP,WAAWxB,KACxBuC,EAAMlO,GAAGmO,WAAWC,YAAYF,EAAMlO,KAC/B,QAQV,CAACsL,EAAgBN,IAGlB,6BACE,yBAAKnI,UAAU,sBAAsBM,MAAO,CAAC6D,eAAgB,SAC3D,yBACEqH,GAAG,QACHC,oBAAoB,gBACpBC,IAAKpD,KAGT,yBACEtI,UAAU,6BACVM,MAAO,CAAC6D,eAAgB,SAExB,yBACEqH,GAAG,SACHnH,OAAO,KACPoH,oBAAoB,gBACpBC,IAAKlD,OClOTmD,EAAqB,SAACzN,GAC1B,GAAKA,EAAL,CACA,IAAM0N,EAAM,eAAO1N,GAEnB,OADK0N,EAAOpT,OAAMoT,EAAOpT,KAAOoT,EAAO1N,OAChC0N,IAyRMC,MA/Qf,YASI,IARFC,EAQC,EARDA,WACA7D,EAOC,EAPDA,QACAjF,EAMC,EANDA,OACAQ,EAKC,EALDA,sBAEAuI,GAGC,EAJDC,cAIC,EAHDD,mBACAE,EAEC,EAFDA,qBACA5D,EACC,EADDA,gBAEOtK,EAAKC,cAALD,EADN,EAE2CE,mBAAS,IAFpD,mBAEMkK,EAFN,KAEsBC,EAFtB,OAGqCnK,mBAAS0N,EAAmB3I,EAAO,KAHxE,mBAGMkJ,EAHN,KAGmBC,EAHnB,OAIuDlO,mBACtD0N,EAAmB3I,EAAO,KAL3B,mBAIMoJ,EAJN,KAI4BC,EAJ5B,OAOmCpO,mBAASgK,GAP5C,mBAOMqE,EAPN,KAOkBC,EAPlB,OASmCC,mBAAQ,WAC1C,IAAM1E,EAAY,CAAC7H,MAAO,EAAG4J,aAAc,GACvC4C,EAAiB,GAErB,GAAIH,EAAW5T,UAAYL,EACzBoU,EAAiBzJ,EAAOhG,QAAO,SAAC0P,EAAKxO,GACnC,GAAoB,UAAhBA,EAAMA,MACR,OAAOwO,EAET,IAAMjN,EAAYD,SAAStB,EAAMuB,WAOjC,OANAqI,EAAU7H,OAASR,EACfA,EAAYqI,EAAU+B,eACxB/B,EAAU+B,aAAepK,GAG3BiN,EAAIxO,EAAMA,OAASA,EAAMuB,UAClBiN,IACN,SACE,GAAIJ,EAAW5T,UAAYL,EAAiB,CACjD,IAAMsU,GACJnJ,EAAsB8I,EAAW9T,OAAS,CAAC4L,aAAc,KACzDA,aACFqI,EAAiB7S,OAAOC,KAAK8S,GAAkB3P,QAAO,SAAC0P,EAAKhK,GAC1D,IAAMjD,EAAYD,SAASmN,EAAiBjK,GAAUjD,WAMtD,OALAqI,EAAU7H,OAASR,EACfA,EAAYqI,EAAU+B,eACxB/B,EAAU+B,aAAepK,GAE3BiN,EAAIhK,GAAYiK,EAAiBjK,GAAUjD,UACpCiN,IACN,IAEL,MAAO,CAAC5E,EAAW2E,KAClB,CAACH,EAAYtJ,EAAQQ,IA1CvB,mBASMsE,EATN,KASiB2E,EATjB,KA4CKzE,EAAmB/I,uBACvB,SAACzG,EAAM8T,GACL,GAAIA,EAAW5T,UAAYL,EAAmB,CAC5C,IAAMuT,EAASD,EACb3I,EAAO4J,MAAK,SAAC1O,GAAD,OAAW1F,IAAS0F,EAAMA,UAExCmO,EAAwBT,GACxBO,EAAeP,GACfK,EAAqBL,QAChB,GAAIU,EAAW5T,UAAYL,EAAiB,CACjD,IAGI+L,GAHUZ,EAAsB8I,EAAW9T,OAAS,CACtD4L,aAAc,KAESA,aAAa5L,GACjC4L,IACHA,EAAe,CACb3E,UAAW,EACXmC,OAAQ,EACRG,OAAQ,EACRF,UAAW,IAGfwK,EAlFsB,SAACjI,EAAc5L,GAC3C,GAAK4L,EAAL,CACA,IAAMwH,EAAM,eAAOxH,GAEnB,OADKwH,EAAOpT,OAAMoT,EAAOpT,KAAOA,GACzBoT,GA8EuBiB,CAAsBzI,EAAc5L,IAC5D,IAAM0T,EAAcP,EAClB3I,EAAO4J,MAAK,SAAC1O,GAAD,OAAWoO,EAAW9T,OAAS0F,EAAMA,UAEnDiO,EAAeD,GACXD,GAAsBA,EAAqBC,MAGnD,CAAClJ,EAAQQ,EAAuByI,IAGlCnN,qBAAU,WACR,QAA0B+H,IAAtBkF,GAAyD,OAAtBA,EAGvC,KADkB,aAAcA,GACnB,CACX,IAAMe,EAASxU,EAASC,QACxBgU,EAAcO,GACd,IAAMlB,EAASD,EAAmBI,EAAkB7N,OACpD8J,EAAiB4D,EAAOpT,KAAMsU,GAC9B1E,EAAkBwD,EAAOpT,UACpB,CACL,IAAMsU,EAASxU,EAASyT,EAAkB7N,MAAMA,OAChD,IAAK4O,EACH,OAEFP,EAAcO,GACd9E,EAAiB+D,EAAkBrJ,SAAUoK,GAC7C1E,EAAkB2D,EAAkBrJ,aAErC,CAACqJ,EAAmB/D,IAEvB,IAAM+E,EAAmB9N,uBACvB,SAACzG,GACC,IAAMsU,EAASxU,EAASE,GACxB,GAAKsU,EAKL,GAFAP,EAAcO,GACd1E,EAAkB,MACd0E,EAAOpU,UAAYL,EACrB2P,EAAiBhF,EAAO,GAAG9E,MAAO4O,QAC7B,GAAIA,EAAOpU,UAAYL,EAAiB,CAAC,IACvC+L,GAAgBZ,EAAsBhL,IAAS,CAAC4L,aAAa,KAA7DA,aACD4I,EAAcpT,OAAOC,KAAKuK,GAC7BhJ,QAAO,SAAC5C,GAAD,MAAmB,YAATA,KACjB4G,MAAK,SAACnC,EAAGgQ,GACR,OAAO7I,EAAa6I,GAAGxN,UAAY2E,EAAanH,GAAGwC,aAClD,GACLuI,EAAiBgF,EAAaF,GAC9B1E,EAAkB4E,MAGtB,CAAChF,EAAkBxE,EAAuBR,IAGrCxK,EAAyB4T,EAAzB5T,KAAM4J,EAAmBgK,EAAnBhK,gBAUb,OACE,yBACEpC,UAAU,uBACVM,MAAO,CAAC6D,eAAgB,QACxBuH,IAAKI,GAEL,yBAAK9L,UAAU,UACb,4BAAKjC,EAAE,MAAO,CAACvF,KAAMuF,EAAEuO,EAAW9T,SAClC,4BACC8J,OAAOC,YAAc,IACrB+J,EAAW5T,UAAYL,EAAoB0F,EAAE,iBAAmBA,EAAE,oBAChEuO,EAAW5T,UAAYL,EAAoB0F,EAAE,mBAAqBA,EAAE,wBAIzE,yBAAKiC,UAAU,aACb,yBAAKA,UAAU,iBAAiBM,MAAO,CAAC6D,eAAgB,OACtD,4BAAK7B,OAAOC,YAAc,IAAMxE,EAAE,mBAAqBA,EAAE,mBACzD,yBAAKiC,UAAU,gBACb,4BAAK1D,EAAa4P,EAAYzM,YAC9B,uCAASnD,EAAa4P,EAAYvK,oBAItC,yBACE3B,UAAU,yBACVM,MAAO,CAAC6D,eAAgB,SAExB,4BAAK7B,OAAOC,YAAc,IAAMxE,EAAE,gBAAkBA,EAAE,gBACtD,yBAAKiC,UAAU,gBACb,4BAAK1D,EAAa4P,EAAYtK,SAC9B,mCAIJ,yBACE5B,UAAU,0BACVM,MAAO,CAAC6D,eAAgB,SAExB,4BAAK7B,OAAOC,YAAc,IAAMxE,EAAE,mBAAqBA,EAAE,mBACzD,yBAAKiC,UAAU,gBACb,4BAAK1D,EAAa4P,EAAYrK,YAC9B,uCAASvF,EAAa4P,EAAYpK,oBAItC,yBACE9B,UAAU,yBACVM,MAAO,CAAC6D,eAAgB,SAExB,4BAAK7B,OAAOC,YAAc,IAAMxE,EAAE,kBAAoBA,EAAE,kBACxD,yBAAKiC,UAAU,gBACb,4BAAK1D,EAAa4P,EAAYnK,SAC9B,uCAASzF,EAAa4P,EAAYlK,kBAKxC,yBAAKhC,UAAU,gBAAgBM,MAAO,CAAC6D,eAAgB,SACrD,4BAAKmI,EAAW5T,UAAYL,EAAoB0F,EAAE,cAAD,OAAevF,EAAKkF,gBAAmBlF,GACvF4J,GACC,yBACEpC,UAAS,sBACPsM,EAAW5T,UAAYL,EACnB,uBACA,sBAGN,4BAAK0F,EAAE,iBACP,wBACEmE,MACEvF,MAAM1B,KAAKkH,MAAM9H,EAAW+H,KACxB,GACAxH,EAAmBwH,IAGxBrE,EAAE,MAAO,CAACpD,KAAMgC,MAAM1B,KAAKkH,MAAM9H,EAAW+H,KACzC,GACAC,YACE,IAAIpH,KAAKZ,EAAW+H,IACpB,IAAInH,UAMfqR,EAAW5T,UAAYL,GACxB+T,EAAqB5T,OAAS8T,EAAW9T,KACvC,wBAAIwH,UAAU,sBACXyM,EAAeL,EAAqB5T,MACjCiU,EAAeL,EAAqB5T,MACpC,EACJ,6BACA,0BAAM8H,MAAO,CAACY,SAAU,UAAWV,WAAY,MAC5CzC,EAAE,oBAGL,KAEHuO,EAAW5T,UAAYL,GACxBoU,EAAe5J,QAAU,EACvB,wBAAI7C,UAAU,WAAd,yBACyByM,EAAe5J,QADxC,WAGE,KAEHyJ,EAAW5T,UAAYL,EACtB,yBACE2H,UAAU,qBACVK,QAAS,kBAAM0M,EAAiB,aAFlC,QAME,MAGN,kBAAC,EAAD,CACEjF,UAAWA,EACXG,QAASqE,EACTvE,QAAS0E,EACTzE,iBAAkBA,EAClBE,UAAW6E,EACX5E,eAAgBA,EAChBC,kBAAmBA,EACnBC,gBAAiBA,M,iBCiNV6E,OAvef,SAAoBpP,GAAQ,IACnBC,EAAKC,cAALD,EADkB,EAGiBE,mBACxCqE,OAAOC,WAAa,IAAM4K,IAAW,IAJd,mBAGlBC,EAHkB,KAGHC,EAHG,OAMWpP,mBAAS,IANpB,mBAMlBnD,EANkB,KAMNwS,EANM,OAOSrP,mBAAS,IAPlB,mBAOlBsP,EAPkB,KAOPC,EAPO,OAQCvP,mBAAS,GARV,mBAQlBjE,EARkB,KAQXyT,EARW,OASDxP,mBAASH,EAAM4P,MATd,mBASlBA,EATkB,KASZC,EATY,OAUK1P,mBAASH,EAAM8P,SAVpB,mBAUlBA,EAVkB,KAUTC,EAVS,OAWS5P,mBAASH,EAAMgQ,MAXxB,mBAWlBC,EAXkB,KAWPC,EAXO,OAYG/P,oBAAS,GAZZ,mBAYlBgQ,EAZkB,KAYVC,EAZU,KAcnBC,EAAU5F,mBACV6F,EAAU7F,mBACV8F,EAAU9F,mBACV+F,EAAU/F,mBAEVgG,EAAahG,mBACbiG,EC1ByB,SAAC9C,GAAS,IAAD,EACJzN,mBAAS,MADL,mBACjCuQ,EADiC,KACrBC,EADqB,KAcxC,OAZA3P,qBAAU,WACR,IAAM4P,EAAgBhD,EAAI3C,QACpB4F,EAAiB,IAAIC,KAAe,SAACvR,EAASwR,GAClDxR,EAAQC,SAAQ,SAACwR,EAAO9U,GACtByU,EAAcK,EAAMC,mBAIxB,OADAJ,EAAeK,QAAQN,GAChB,WACLC,EAAeM,UAAUP,MAE1B,CAAChD,IACG8C,EDYYU,CAAkBX,GAE/BY,EAAsBlQ,uBAC1B,SAACnE,GACC,GAAIA,EAAW8C,OAAS,EAAG,CACzB,IAAMwR,EP8CP,SAAgCtU,EAAYuU,GACjD,OAAOvU,EAAWN,OAAO6U,GO/CMC,CACvBxU,EACAsS,GAEFK,EAAS2B,EAAiBxR,OAAS,GACnC0P,EAAc8B,MAGlB,CAAChC,IAGHtO,qBAAU,WACRqQ,EAAoBrR,EAAMhD,cACzB,CAACgD,EAAMhD,WAAYsS,EAAe+B,IAErCrQ,qBAAU,WACR6O,EAAQ7P,EAAM4P,QACb,CAAC5P,EAAM4P,OAEV5O,qBAAU,WACR+O,EAAW/P,EAAM8P,WAChB,CAAC9P,EAAM8P,UAEV9O,qBAAU,WACRkP,EAAalQ,EAAMgQ,QAClB,CAAChQ,EAAMgQ,OAEV,IAAMyB,EAAYtQ,uBAChB,SAACnE,GACC,GAAK0T,EAAL,CACA,IAAM1J,EAAQ0J,EAAW1J,MACnBT,EAASmK,EAAWnK,OAGpB0F,EAAe,GAAfA,EAAgD,GAChDyF,EAAa1K,EADa,GAE1B2K,EAAcpL,EAFwB,GAItCqL,EAAI5U,EAAW8C,OAGrB4P,EAAa1S,EAAW4U,EAAI,IAC5BjC,EAASiC,EAAI,GAEb,IAAMC,EAAO9J,IAAUsI,EAAQpF,SACzB6G,EAAO/J,IAAUuI,EAAQrF,SACzB8G,EAAOhK,IAAUwI,EAAQtF,SACzB+G,EAAOjK,IAAUyI,EAAQvF,SAEzBgH,EAAU,IAAI9U,KAAKH,EAAW,GAAX,MACzBiV,EAAQC,QAAQD,EAAQE,UAAY,GACpC,IAAMC,EAAU,IAAIjV,KAAKH,EAAW4U,EAAI,GAAf,MACzBQ,EAAQF,QAAQE,EAAQD,UAAY,GAEpC,IAuCIE,EAvCEC,EAASvK,MAEZwK,OAAM,GACNhK,OAAO,CAAC0J,EAASG,IACjB5J,MAAM,CAACyD,EAAayF,IAGjBc,EAAYxL,EAAQ,IAAM,EAAI,EAE9ByL,EAAQ,SAACvK,EAAGwK,GAAJ,OACZxK,EACGF,KAAK,QAAS,UACdwB,KAAKzB,IAAcuK,GAAQ3K,MAAM6K,IACjChQ,MAAM,YAHT,qBAGoCkQ,EAAO,GAH3C,SAKIC,EAAQ,SAACzK,EAAGwK,GAAJ,OACZxK,EACGF,KAAK,QAAS,UACdwB,KAAKzB,IAAa2K,GAAQ/K,MAAM,EAAG,OAAOiL,YAAY,IACtDpQ,MAAM,YAHT,qBAGoCkP,EAHpC,SAMImB,EAAW,CAAChB,EAAMC,EAAMC,EAAMC,GAC9Bc,EAA0B,IAAd7C,EACZ8C,EAAiB,CACrB,iBACA,cACA,iBACA,iBAEIC,EAAiB,CACrB,iBACA,cACA,iBACA,iBAGIC,EAAS,CAAC,UAAW,UAAW,UAAW,WAGjD,GAAIH,EAAW,CACb,IAAII,EAAkB7D,IACtB0D,EAAevT,SAAQ,SAACwQ,GACtBkD,EAAkB7K,KAAKC,IACrB4K,EACAnL,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEyS,UAGhC,IAAMmD,EAAsBpL,MAEzBwK,OAAM,GACNhK,OAAO,CACN2K,EACA7K,KAAKiB,IAAI,EApEC,IAoEYvB,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAES,qBAEnDoV,OACA5K,MAAM,CAACmJ,EAAa1F,IAEjBoH,EAAmBtL,MAEtBwK,OAAM,GACNhK,OAAO,CACNF,KAAKiB,IAAI,EAAG4J,GACZ7K,KAAKiB,IAAI,EA9EC,IA8EYvB,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAES,qBAEnDoV,OACA5K,MAAM,CAACmJ,EAAa1F,IAEvBoG,EAAUU,EAAe/W,KAAI,SAACgU,GAC5B,IAAMsD,EAAevL,MAElBwK,OAAM,GACNhK,OAAO,CACNR,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEyS,MAC5B3H,KAAKiB,IAAI,EAzFD,IAyFcvB,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEyS,SAEnDoD,OACA5K,MAAM,CAACmJ,EAAa1F,IACjBsH,EAAYxL,MAEfwK,OAAM,GACNhK,OAAO,CACNF,KAAKiB,IACH,EACAvB,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEyS,OAE9B3H,KAAKiB,IAAI,EArGD,IAqGcvB,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEyS,SAEnDoD,OACA5K,MAAM,CAACmJ,EAAa1F,IACvB,OAAI6D,EAAgBF,EAAOyD,EAAmBE,EAClC3D,EAAOuD,EAAsBG,SAEtC,CACL,IAAME,EAAqBzL,MAExBwK,OAAM,GACNhK,OAAO,CACNF,KAAKC,IACH,EACAP,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEgB,gBAE9B8J,KAAKiB,IACH,EAtHQ,IAwHNvB,IAAO/K,GAAY,SAACO,GAAD,OACjB8K,KAAKiB,IAAI/L,EAAEY,eAAgBZ,EAAEa,eAAgBb,EAAEc,qBAItD+U,OACA5K,MAAM,CAACmJ,EAAa1F,IAEvBoG,EAAUW,EAAehX,KAAI,SAACgU,GAC5B,IAAMsD,EAAevL,MAElBwK,OAAM,GACNhK,OAAO,CACNF,KAAKC,IACH,EACAP,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEyS,OAE9B3H,KAAKiB,IAAI,EAzID,IAyIcvB,IAAO/K,GAAY,SAACO,GAAD,OAAOA,EAAEyS,SAEnDoD,OACA5K,MAAM,CAACmJ,EAAa1F,IACvB,OAAO2D,EAAO4D,EAAqBF,KAKvC,IAAMG,EAAQZ,EAAS7W,KAAI,SAAC8L,EAAKzI,GAC/B,OAAOyI,EACJK,UAAU,UACVlL,KAAK,CAACD,EAAW4U,EAAI,KAAK,SAACrU,GAAD,OAAOA,EAAEG,QACnC2L,KAAK,UACLrB,KAAK,QAAS,SACdA,KAAK,OAAQiL,EAAO5T,IACpB2I,KAAK,SAAUiL,EAAO5T,IACtB2I,KAAK,IAAK,MAqCf6K,EAASrT,SAAQ,SAACsI,EAAKzI,GAErB,IAAMY,EAAI6H,EAAI4L,aAAaC,SAAS,KAC9BC,EAAYb,EAAe1T,GAC3BwU,EAAYb,EAAe3T,GAC3B2Q,EAAO8C,EAAYc,EAAYC,EAE/BjQ,EAAQqP,EAAO5T,GACfqT,EAASL,EAAQhT,GAyBvB,GAtBAyI,EAAI2B,OAAO,WAAWiK,WAAWzT,GAAGuJ,KAAKiJ,EAAOC,GAEhD5K,EAAI2B,OAAO,WAAWiK,WAAWzT,GAAGuJ,KAAKmJ,EAAOD,GAGhD5K,EACGK,UAAU,QACVlL,KAAKD,GAAY,SAACO,GAAD,OAAOA,EAAEG,QAC1B2L,MAAK,SAACyK,GAAD,OAAWA,EAAMnL,OAAO,UAAUX,KAAK,KAAM2J,MAClD3J,KAAK,QAAS,OACdA,KAAK,OAAQpE,GACboE,KAAK,SAAUpE,GACfoE,KAAK,IAAK,GACV0L,WAAWzT,GACX+H,KAAK,MAAM,SAACzK,GAAD,OAAO+U,EAAO/U,EAAEG,SAC3BsK,KAAK,MAAM,SAACzK,GAAD,OAAOmV,EAAOnV,EAAEyS,OAE9ByD,EAAMpU,GACHqU,WAAWzT,GACX+H,KAAK,MAAM,SAACzK,GAAD,OAAO+U,EAAO/U,EAAEG,SAC3BsK,KAAK,MAAM,SAACzK,GAAD,OAAOmV,EAAOnV,EAAEyS,OAE1B8C,EAAW,CAEbhL,EAAIK,UAAU,SAASuB,SACvB,IAAMqB,EAAOjD,EACVK,UAAU,UACVlL,KAAK,CAAC,YAAID,GAAY+W,YACtB1K,KAAK,QACLrB,KAAK,QAAS,SACdA,KAAK,OAAQ,QACbA,KAAK,SAAUpE,EAAQ,MACvBoE,KAAK,eAAgB,GAMxB,GAAI+C,EAAK/C,KAAK,KAAM,CAClB,IAAMrB,EAAIoE,EAAKnB,OAAOoK,iBAChBC,EAAIlJ,EAAKnB,OAAOsK,iBAAiBvN,GAEvCoE,EAAK/C,KACH,KACA,kBAAM+C,EAAK/C,KAAK,KAAO,WAAIiM,EAAE5M,EAAN,YAAW4M,EAAEE,GAAIC,OAAO,EAAIxC,MAGvD7G,EACG2I,WAAWzT,GACX+H,KAAK,UAAW8K,EAAY,EAAI,GAChC9K,KACC,IACAD,MAEGV,GAAE,SAAC9J,GAAD,OAAO+U,EAAO/U,EAAEG,SAClByW,GAAE,SAAC5W,GAAD,OAAOmV,EAAOnV,EAAEqW,OAClBS,MAAMtM,WAUbD,EAAIK,UAAU,UAAUuB,SACxB5B,EACGK,UAAU,SACVlL,KAAKD,GAAY,SAACO,GAAD,OAAOA,EAAEG,QAC1B2L,MAAK,SAACyK,GAAD,OACJA,EACGnL,OAAO,QACPX,KAAK,MAAM,SAACzK,GAAD,OAAO+U,EAAO/U,EAAEG,SAC3BsK,KAAK,MAAM,SAACzK,GAAD,OAAO+U,EAAO/U,EAAEG,SAC3BsK,KAAK,KAAM2J,GACX3J,KAAK,KAAM2J,MAEf3J,KAAK,QAAS,QACdxF,MAAM,SAAUoB,EAAQ,MACxBpB,MAAM,eAAgB,GACtBkR,WAAWzT,GACX+H,KAAK,KAAM0K,EAAO,IAClB1K,KAAK,MAAM,SAACzK,GAAD,OAAO+U,EAAO/U,EAAEG,SAC3BsK,KAAK,MAAM,SAACzK,GAAD,OAAO+U,EAAO/U,EAAEG,SAC3BsK,KAAK,MAAM,SAACzK,GAAD,OAAOmV,EAAOnV,EAAEsW,OAGhC/L,EACG2E,GAAG,YAAa6H,GAChB7H,GAAG,YAAa6H,GAChB7H,GAAG,WAAY8H,GACf9H,GAAG,WAAY8H,MAzIpB,SAASD,IACP,IAAME,EAAKzM,IAAS0M,MAAM,GACpB/W,EAAO4U,EAAOoC,OAAOF,GAEvBnV,GAAIsV,EADW5M,KAAY,SAACxK,GAAD,OAAOA,EAAEG,QAAM2F,MAC3BrG,EAAYU,EAAM,GACrC,GAAI,GAAK2B,GAAKA,EAAIuS,EAAG,CACflU,EAAOV,EAAWqC,EAAI,GAAG3B,KAAOV,EAAWqC,GAAG3B,KAAOA,KAAQ2B,EACjEqQ,EAAa1S,EAAWqC,IACxBsQ,EAAStQ,GACT+Q,GAAU,GACV,IAAM7S,EAAIP,EAAWqC,GACrBoU,EAAMjU,SAAQ,SAACoV,EAAGC,GAChB,IAAMnC,EAASL,EAAQwC,GACjB7E,EAAO8C,EAAYC,EAAe8B,GAAK7B,EAAe6B,GAC5DD,EAAE5M,KAAK,KAAMsK,EAAO/U,EAAEG,OAAOsK,KAAK,KAAM0K,EAAOnV,EAAEyS,SAKvD,SAASuE,IACP7E,EAAa1S,EAAW4U,EAAI,IAC5BjC,EAASiC,EAAI,GACbxB,GAAU,GACVqD,EAAMjU,SAAQ,SAACoV,EAAGC,GAChB,IAAMnC,EAASL,EAAQwC,GACjB7E,EAAO8C,EAAYC,EAAe8B,GAAK7B,EAAe6B,GAC5DD,EAAE5M,KAAK,KAAMsK,EAAOtV,EAAW4U,EAAI,GAAGlU,OAAOsK,KAC3C,KACA0K,EAAO1V,EAAW4U,EAAI,GAAG5B,WAgHjC,CAACU,EAAYT,EAAWH,EAASF,IAGnC5O,qBAAU,WACJhE,EAAW8C,OAAS,GACtB2R,EAAUzU,KAEX,CAACA,EAAYyU,IAEhB,IAAMqD,EAAYlX,IAAO6R,EAAU/R,MAC/BqX,EAAUD,EAAUhW,OAAO,WAC/BiW,GAAWD,EAAUE,OAAOpX,MAASqX,SAAS,EAAG,QAAS,OACtD,aACA,GAEJ,IAAMC,EAA0B,IAAdjF,EAAkB,iBAAmB,iBACjDkF,GAA0B,IAAdlF,EAAkB,cAAgB,cAC9CmF,GAA0B,IAAdnF,EAAkB,iBAAmB,iBACjDoF,GAA0B,IAAdpF,EAAkB,gBAAkB,gBAGhDqF,GAAqB,SAACrF,GAC1B,GAAIjT,EAAW8C,QAAU,GAAK5D,GAAS,GAAKA,GAASc,EAAW8C,OAC9D,MAAO,GACT,IAAMyV,EACJvY,EAAWd,GAAO+T,GAAajT,EAAWd,EAAQ,GAAG+T,GACjDuF,EAAehX,EAAa+W,GAClC,OAAOA,GAAe,EAAf,WAAuBC,GAAiBA,GAGjD,OACE,yBACEtT,UAAU,6BACVM,MAAO,CAAC6D,eAAgB,SAExB,yBAAKnE,UAAU,cACb,yBAAKA,UAAU,aAAa0L,IAAK6C,GAC/B,yBAAKvO,UAAU,SACb,wBAAIA,UAAS,UAAMiO,EAAmB,GAAV,UAAiBlQ,EAAE,mBAC/C,wBAAIiC,UAAS,UAAKiO,EAAS,QAAU,KAArC,UAA+C4E,IAC/C,yBAAK7S,UAAU,gBACb,4BAAK1D,EAAaiR,EAAUyF,KAC5B,4BAAKI,GAAmBJ,MAG5B,yBAAKtH,IAAKyC,EAAS1C,oBAAoB,iBACrC,uBAAGzL,UAAU,WACb,uBAAGA,UAAU,aAIjB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAMiO,EAAmB,GAAV,UAA5B,UACA,wBAAIjO,UAAS,UAAKiO,EAAS,QAAU,KAArC,UAA+C4E,IAC/C,yBAAK7S,UAAU,gBACb,4BAAK1D,EAAaiR,EAAU0F,MAC5B,4BAAKG,GAAmBH,OAG5B,yBAAKvH,IAAK0C,EAAS3C,oBAAoB,iBACrC,uBAAGzL,UAAU,WACb,uBAAGA,UAAU,aAIjB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAS,UAAMiO,EAAmB,GAAV,UAAiBlQ,EAAE,mBAC/C,wBAAIiC,UAAS,UAAKiO,EAAS,QAAU,KAArC,UAA+C4E,IAC/C,yBAAK7S,UAAU,gBACb,4BAAK1D,EAAaiR,EAAU2F,MAC5B,4BAAKE,GAAmBF,OAG5B,yBAAKxH,IAAK2C,EAAS5C,oBAAoB,iBACrC,uBAAGzL,UAAU,WACb,uBAAGA,UAAU,aAIjB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAMiO,EAAmB,GAAV,UAAiBlQ,EAAE,kBAC/C,wBAAIiC,UAAS,UAAKiO,EAAS,QAAU,KAArC,UAA+C4E,IAC/C,yBAAK7S,UAAU,gBACb,4BAAK1D,EAAaiR,EAAU4F,MAC5B,4BAAKC,GAAmBD,OAG5B,yBAAKzH,IAAK4C,EAAS7C,oBAAoB,iBACrC,uBAAGzL,UAAU,WACb,uBAAGA,UAAU,cAKnB,yBAAKA,UAAU,SACb,4BACE8N,KAAK,SACLzN,QAAS,kBAAMgN,EAAiBF,MAChCnN,UAAWoN,IAAkBD,IAAW,WAAa,IAEpDpP,EAAE,cAEL,4BACE+P,KAAK,SACLzN,QAAS,kBAAMgN,EAAiB,KAChCrN,UAA6B,KAAlBoN,EAAuB,WAAa,GAC/CmG,aAAYxV,EAAE,YAEbA,EAAE,YAEL,4BACE+P,KAAK,SACLzN,QAAS,kBAAMgN,EAAiB,KAChCrN,UAA6B,KAAlBoN,EAAuB,WAAa,GAC/CmG,aAAYxV,EAAE,YAEbA,EAAE,eElUEyV,OApKf,YAAkC,IAAd1Y,EAAa,EAAbA,WAAa,EACamD,mBAAS,IADtB,mBACxBwV,EADwB,KACRC,EADQ,KAEzBvF,EAAU5F,mBACV6F,EAAU7F,mBACV8F,EAAU9F,mBACV+F,EAAU/F,mBAEhBzJ,qBAAU,WACR4U,EAAkB5Y,EAAWN,MAAMM,EAAW8C,OAAS,OACtD,CAAC9C,IAEJ,IAAMyU,EAAYtQ,uBAAY,SAAClE,GAC7B,GAAIA,EAAK6C,QAAU,EAAG,OAAO,EAE7B,IAAMmM,EAAe,EAAfA,EAA+C,EAC/CyF,EAAa,IADY,GAEzBC,EAAc,IAFuB,GAIrCE,EAAO9J,IAAUsI,EAAQpF,SACzB6G,EAAO/J,IAAUuI,EAAQrF,SACzB8G,EAAOhK,IAAUwI,EAAQtF,SACzB+G,EAAOjK,IAAUyI,EAAQvF,SAE/BhO,EAAKuC,SAAQ,SAACjC,GACZA,EAAC,YAAkBA,EAAEY,eAAiBZ,EAAEa,eAAiBb,EAAEc,iBAG7D,IAAMiU,EAASvK,MAEZQ,OAAOR,IAAU9K,GAAM,SAACM,GAAD,OAAOA,EAAEG,SAChC8K,MAAM,CAACyD,EAAayF,IAEjBmB,EAAW,CAAChB,EAAMC,EAAMC,EAAMC,GAC9B3U,EAAY,CAChB,iBACA,cACA,iBACA,iBAEI4V,EAAS,CAAC,UAAW,UAAW,UAAW,WAE3C4C,EAAW9N,IAAO9K,GAAM,SAACM,GAAD,OAAOA,EAAEgB,eACjCuX,EAAW/N,IAAO9K,GAAM,SAACM,GAAD,OAC5B8K,KAAKiB,IAAI/L,EAAEY,eAAgBZ,EAAEa,eAAgBb,EAAEc,kBAE3C0X,EAAe1N,KAAKiB,KAAKuM,EAAUC,GAEnCpD,EAAS3K,MAEZQ,OAAO,EAAEwN,EAAcA,IACvBvN,MAAM,CAACmJ,EAAa1F,IAEvB4G,EAASrT,SAAQ,SAACsI,EAAKzI,GACrB,IAAM2Q,EAAO3S,EAAUgC,GACjBuE,EAAQqP,EAAO5T,GAEf0L,EAAOjD,EACVa,OAAO,QACPqN,MAAM/Y,GACN+K,KAAK,OAAQ,QACbA,KAAK,SAAUpE,EAAQ,MACvBoE,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KACC,IACAD,MAEGV,GAAE,SAAC9J,GAAD,OAAO+U,EAAO/U,EAAEG,SAClByW,GAAE,SAAC5W,GAAD,OAAOmV,EAAOnV,EAAEyS,OAClBqE,MAAMtM,MAGPkO,EAAclL,EAAKnB,OAAOoK,iBAChCjJ,EACG/C,KAAK,mBAAoBiO,EAAc,IAAMA,GAC7CjO,KAAK,oBAAqBiO,GAC1BvC,aACAwC,MAAM,KACNvC,SAAS,MACT3L,KAAK,oBAAqB,GAE7BF,EACGK,UAAU,QACVlL,KAAKA,EAAKP,MAAMO,EAAK6C,OAAS,IAC9BgU,QACAnL,OAAO,UACPX,KAAK,OAAQpE,GACboE,KAAK,SAAUpE,GACfoE,KAAK,IAAK,GACVA,KAAK,SAAU,WACfA,KAAK,MAAM,SAACzK,GAAD,OAAO+U,EAAO/U,EAAEG,SAC3BsK,KAAK,MAAM,SAACzK,GAAD,OAAOmV,EAAOnV,EAAEyS,OAC3BvD,GAAG,aAAa,SAAClP,GAChBwK,IAAUA,IAASoO,QAAQnO,KAAK,IAAK,QAEtCyE,GAAG,YAAY,SAAClP,GACfwK,IAAUA,IAASoO,QAAQnO,KAAK,IAAK,QAEtCxF,MAAM,UAAW,GACjBkR,aACAwC,MAAM,KACNvC,SAAS,MACTnR,MAAM,UAAW,QAErB,IAMH,OAJAxB,qBAAU,WACRyQ,EAAUkE,KACT,CAACA,EAAgBlE,IAGlB,yBAAKvP,UAAU,aACb,yBAAKA,UAAU,sBAAsBM,MAAO,CAAC6D,eAAgB,SAC3D,yBACEuH,IAAKyC,EACLrJ,MAAM,MACNT,OAAO,MACP6P,QAAQ,cACRzI,oBAAoB,mBAIxB,yBACEzL,UAAU,8BACVM,MAAO,CAAC6D,eAAgB,SAExB,yBACEuH,IAAK0C,EACLtJ,MAAM,MACNT,OAAO,MACP6P,QAAQ,cACRzI,oBAAoB,mBAIxB,yBACEzL,UAAU,+BACVM,MAAO,CAAC6D,eAAgB,SAExB,yBACEuH,IAAK2C,EACLvJ,MAAM,MACNT,OAAO,MACP6P,QAAQ,cACRzI,oBAAoB,mBAIxB,yBACEzL,UAAU,8BACVM,MAAO,CAAC6D,eAAgB,SAExB,yBACEuH,IAAK4C,EACLxJ,MAAM,MACNT,OAAO,MACP6P,QAAQ,cACRzI,oBAAoB,qB,UClFf0I,OA1Ef,SAAiBrW,GAAQ,IAAD,EACQG,mBAAS,IADjB,mBACfmW,EADe,KACNC,EADM,OAEQpW,oBAAS,GAFjB,mBAEfqW,EAFe,KAENC,EAFM,KAGlBC,EAAc,IAAIvZ,KAgBtB,OAdA6D,qBAAU,YACQ,IAAZwV,GACFG,IACGC,IAAI,qFACJC,MAAK,SAACC,GACLP,EAAWO,EAAS7Z,MACpBwZ,GAAW,MAEZM,OAAM,SAAChK,GACNC,QAAQC,IAAIF,QAGjB,CAACyJ,IAGF,kBAAC,IAAMvU,SAAP,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,kBACb,4BAAKpD,aAAO4X,EAAa,WAE1BJ,EACE5Z,OAAO,GACPqX,UACA/X,KAAI,SAAUgb,EAAU9a,GACvB8a,EAASC,OAASD,EAASC,OAAOC,QAAQ,KAAM,SAChD,IAAMC,EAAe,IAAIha,KAA0B,IAArB6Z,EAASI,WAkBvC,OACE,oCACGD,EAAahF,YAAcuE,EAAYvE,WAlB1CuE,EAAcS,EAEZ,oCACa,IAAVjb,EACC,yBAAKgG,UAAU,UACb,gDAGF,GAEF,yBAAKA,UAAU,kBACb,4BAAKpD,aAAOqY,EAAc,aAS1B,IACJ,yBAAKlb,IAAKC,EAAOgG,UAAU,UACzB,4BACGqC,YACC,IAAIpH,KAA0B,IAArB6Z,EAASI,WAClB,IAAIja,MACF,QAEN,wBACEka,wBAAyB,CACvBC,OAAQN,EAASC,kB,oBCrCxBM,OA1Bf,SAAgBvX,GACd,OACE,4BAAQkC,UAAU,WAAWM,MAAO,CAAC6D,eAAgB,OACnD,iFACA,uBACEmR,KAAK,oDACLtV,UAAU,gBACViU,OAAO,SACPsB,IAAI,uBAEJ,kBAAC,KAAD,MACA,6DAEF,uBACEvV,UAAU,eACVsV,KAAK,0BACLrB,OAAO,SACPsB,IAAI,uBAEJ,kBAAC,KAAD,MACA,oECqQOC,OAvQf,SAAc1X,GAAQ,IACbC,EAAKC,cAALD,EADY,EAGSE,mBAAS,IAHlB,mBAGZ+E,EAHY,KAGJC,EAHI,OAIuChF,mBAAS,IAJhD,mBAIZuF,EAJY,KAIWiS,EAJX,OAKWxX,oBAAS,GALpB,mBAKZqW,EALY,KAKHC,EALG,OAMmBtW,mBAAS,GAN5B,mBAMZyX,EANY,KAMCC,EAND,OAOmB1X,mBAAS,IAP5B,mBAOZ2X,EAPY,KAOCC,EAPD,OAQiB5X,mBAAS,IAR1B,mBAQZnD,EARY,KAQAwS,EARA,OAS2BrP,mBAAS,MATpC,mBASZ6X,EATY,KASKC,EATL,OAUyB9X,oBAAS,GAVlC,mBAUZ+X,EAVY,KAUIC,EAVJ,OAW+BhY,oBAAS,GAXxC,mBAWZiY,EAXY,KAWOC,GAXP,QAY+BlY,wBAAS4I,GAZxC,qBAYZkF,GAZY,MAYOqK,GAZP,SAamBnY,oBAAS,GAb5B,qBAaZoY,GAbY,MAaCC,GAbD,SAcmBrY,oBAAS,GAd5B,qBAcZsY,GAdY,MAcCC,GAdD,SAeevY,oBAAS,GAfxB,qBAeZwY,GAfY,MAeDC,GAfC,MAiBnB5X,qBAAU,WAEqC,OAAzCL,aAAaC,QAAQ,gBACvBD,aAAaqB,QAAQ,gBAAgB,IAErC0W,IAAe,GACfE,GAAsD,UAAzCjY,aAAaC,QAAQ,mBAEpB,IAAZ4V,IACFqC,KACAlC,IACGC,IAAI,qFACJC,MAAK,SAACC,GACL,IAAMgC,EAAmBhC,EAAS7Z,KAC/BP,QACAqX,UAAU,GACVqD,UAAUvK,WAE+B,OAAxClM,aAAaC,QAAQ,eACnBD,aAAaC,QAAQ,iBAAmBkY,IAC1CnY,aAAaqB,QAAQ,cAAe8W,GACpCnY,aAAaqB,QAAQ,gBAAgB,IAGvCrB,aAAaqB,QAAQ,cAAe8W,MAGvC/B,OAAM,SAAChK,GACNC,QAAQC,IAAIF,SAGjB,CAACyJ,IAEJ,IAAMqC,GAAS,uCAAG,sCAAA1Z,EAAA,+EAMJ4Z,QAAQC,IAAI,CACpBrC,IAAMC,IAAI,4EACVD,IAAMC,IAAI,2FACVD,IAAMC,IAAI,sFATE,mCAGX3Z,EAHW,KAGXA,KACDgc,EAJY,KAKLC,EALK,KAKXjc,KAMHkI,EAAUlI,EAAKkc,YACTC,EAAKra,EAAqBma,IAC9B,GAASnc,EAAqBE,EAAKoc,mBACrC7J,EAAc4J,GACdrB,EAAe9a,EAAKkc,UAAU,GAAG7U,iBACjCqT,EAAyBsB,EAA0Bhc,MACnDwZ,GAAW,GAjBG,kDAmBdzJ,QAAQC,IAAR,MAnBc,0DAAH,qDAuBT5K,GAAmB,SAACjC,EAAOlE,GAC/B,IAAKkE,IAAUlE,EAAO,OAAOoc,GAAqB,MAClDA,GAAqB,CAAClY,QAAOlE,WAOzBiS,GAAuBhN,uBAAY,YAAkB,IAAhBwD,EAAe,EAAfA,UACzCsT,EAAmBtT,KAClB,IAEG2U,GAAO,CAAC7O,mBAAUA,mBAAUA,oBAQlC,OACE,kBAAC,IAAMxI,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAkBM,MAAO,CAAC6D,eAAgB,OACvD,yBAAKnE,UAAU,WACb,4BACGrD,MAAM1B,KAAKkH,MAAM9H,EAAWub,KACzB,GACAhb,EAAmBgb,KAEvBS,IACA,yBAAKrW,UAAU,aACb,kBAAC,IAAD,CACEK,QAAS,WACPiW,IAAgBD,IAChB5X,aAAaqB,QAAQ,gBAAgB,GACrC0W,IAAe,GACfE,GAC2C,UAAzCjY,aAAaC,QAAQ,oBAI1B6X,IACEE,GAGC,GAGF,yBAAKzW,UAAU,eAIpBqW,IACC,kBAAC,IAAD,CACEhW,QAAS,WACPiW,IAAgBD,SAOzBA,IAAe,kBAAC,GAAD,MAEfrT,EAAOpF,OAAS,kBAAC,EAAD,CAAO7C,KAAMiI,EAAO,KAAS,GAC7CsR,GAAW,kBAAC,GAAD,CAAWxZ,WAAYA,EAAU,KAC5CwZ,GACC,kBAAC,EAAD,CACExI,WAAYsL,GAAK,GACjBpU,OAAQA,EACRM,SAAS,EACTE,sBAAuBA,EACvBrD,iBAAkBA,GAClBwC,oBAxEgB,SAACD,EAAUxE,EAAOlE,GAC5C,IAAKkE,IAAUlE,IAAU0I,EAAU,OAAO0T,GAAqB,MAC/DA,GAAqB,CAAC1T,WAAUxE,QAAOlE,cA2EnC,yBAAKgG,UAAU,cACZsU,GACC,kBAAC,IAAMvU,SAAP,KACE,kBAAC,EAAD,CACE+L,WAAYsL,GAAK,GACjBnP,QAAS3P,EAASC,QAClByK,OAAQA,EACRQ,sBAAuBA,EAEvBuI,kBAAmBA,GACnBE,qBAAsBA,GACtB5D,iBAAiB,IAGnB,yBACErI,UAAU,6BACVM,MAAO,CAAC6D,eAAgB,QACxBuH,IAAK0L,GAAK,IAEV,4BAAKrZ,EAAE,kBACP,yBAAKiC,UAAU,QACb,yBACEA,UAAS,cAAyB,IAAhB0V,EAAoB,UAAY,IAClDrV,QAAS,WACPsV,EAAe,KAGjB,4BAAK5X,EAAE,gBAET,yBACEiC,UAAS,cAAyB,IAAhB0V,EAAoB,UAAY,IAClDrV,QAAS,WACPsV,EAAe,KAGjB,4BAAK5X,EAAE,YAIX,yBAAKiC,UAAU,eACb,2BAAOA,UAAU,QAAQjC,EAAE,gBAC3B,yBAAKiC,UAAU,mBACb,2BAAOqX,QAAQ,mBAAmBtZ,EAAE,uBACpC,2BACEyN,GAAG,kBACHsC,KAAK,WACLwJ,QAAStB,EACThW,UAAU,SACVuT,aAAW,yCACXgE,SAAU,SAACC,GACTvB,GAAmBD,OAIzB,yBACEhW,UAAS,6BACS,IAAhB0V,EAAoB,WAAa,KAGnC,2BAAO2B,QAAQ,sBAAsBtZ,EAAE,2BACvC,2BACEyN,GAAG,qBACHsC,KAAK,WACLwJ,QAAyB,IAAhB5B,GAAqBQ,EAC9BlW,UAAU,SACVyX,SAA0B,IAAhB/B,EACV6B,SAAU,SAACC,GACTrB,IAAsBD,QAM9B,yBAAKlW,UAAU,qBACb,4BACEuX,SAAU,YAAe,IAAbtD,EAAY,EAAZA,OACV9T,GAAiBuX,KAAKvV,MAAM8R,EAAO1X,UAGpCyG,EAAOlJ,KAAI,SAACyJ,GACX,OACE,4BACExJ,IAAKwJ,EAAEd,UACPlG,MAAOmb,KAAKC,UAAUpU,GACtBqU,SAAUrU,EAAEd,YAAcqT,GAEb,UAAZvS,EAAErF,MAAoBH,EAAE,cAAgBA,EAAE,cAAD,OAAewF,EAAErF,MAAMR,uBAQ7E,kBAAC,GAAD,CACE5C,WAAYA,EAAWgb,GACvBhI,KAAM4H,EACNhI,KAAMsI,EACNpI,QAASsI,OAMnB,kBAAC,GAAD,Q,UClRS,SAAS2B,KAAoB,IAAD,EACvB7Z,cAAX8Z,EADkC,EAClCA,KAAM/Z,EAD4B,EAC5BA,EAMb,OACE,yBAAKiC,UAAU,mBACb,4BAAQuX,SANa,SAAC3W,GACxBkX,EAAKC,eAAenX,EAAEqT,OAAO1X,QAKSgX,aAAYxV,EAAE,mBAAoBxB,MAAOub,EAAKE,UAC/Epe,OAAOyD,QAAQ4a,IAASne,KAAI,mCAAEC,EAAF,KAAOme,EAAP,YAC3B,4BAAQne,IAAKA,EAAKwC,MAAOxC,GACtBme,QC+DEC,OApEf,YAA0B,IAATC,EAAQ,EAARA,MACRra,EAAKC,cAALD,EADgB,EAGKE,oBAAS,GAHd,mBAGhBoa,EAHgB,KAGRC,EAHQ,KAKvB,OACE,yBACEtY,UAAU,SACVM,MAAO,CAACwE,MAAOxC,OAAOC,WAAa,KAAO8V,EAAS,OAAS,KAE5D,yBAAKrY,UAAU,eAAc,kBAAC6X,GAAD,OAC7B,yBAAK7X,UAAU,iBACb,kBAAC,IAAD,CAAMwC,GAAG,KAAT,UACS,2CAGX,yBACExC,UAAU,eACVM,MAAO,CACLC,WAAY8X,EAAS,UAAY,GACjC3W,MAAO2W,EAAS,QAAU,IAE5BhY,QAAS,WACPiY,GAAWD,KAGHta,EAATsa,EAAW,QAAa,SAE1BA,GACC,yBACErY,UAAU,SACVM,MAAO,CAACa,KAAMmB,OAAOC,WAAa,KAAO8V,EAAS,OAAS,KAE1DD,EAAMte,KAAI,SAACye,EAAMpb,GAChB,OAA0B,IAAtBob,EAAKC,aAEL,kBAAC,IAAD,CACEhW,GAAI+V,EAAKE,SACT1e,IAAKoD,EACLkD,QAAS,WACPiY,GAAU,KAGZ,0BAlDIzP,EAoDA0P,EAAKE,SApDCtU,EAqDNoU,EAAKG,wBArDqB,CAC9C1Y,UAAU,YAAD,OAAcsC,OAAOqW,SAASC,WAAa/P,EAAO,UAAY,IACvEvI,MAAO,CACL6D,eAAe,GAAD,OAAKA,EAAL,QAqDGoU,EAAKM,cAKP,KA7DE,IAAChQ,EAAM1E,KA+DlB,yBACEnE,UAAU,yBACVM,MAAO,CAAC6D,eAAgB,OAExB,8D,oBCrBG2U,OAhDf,SAAsBhb,GACpB,IAAMib,EAAOjb,EAAMib,KAEnB,OACE,yBAAK/Y,UAAU,oBAAoBM,MAAO,CAAC6D,eAAgB,OACxDvK,OAAOC,KAAKkf,GACVve,MAAMsD,EAAMwF,SAAW,EAAI,GAC3BxJ,KAAI,SAACS,EAAKP,GACT,MAAY,iBAARO,EAEA,kBAAC,IAAMwF,SAAP,CAAgBhG,IAAKC,GACnB,wBAAIgG,UAAU,YACXpD,aAAO,IAAI3B,KAAKV,GAAM,gBAAiB,IACvC,IAAMwe,EAAKxe,GAAKqD,OAAS,KAE5B,yBACE7D,IAAKC,EACLgG,UAAS,cAASlC,EAAMwF,QAAU,UAAY,KAE7CyV,EAAKxe,GACHC,MAAMsD,EAAMwF,SAAW,GAAK,GAC5BxJ,KAAI,SAACkf,EAASC,GACb,OACE,yBACElf,IAAKkf,EACLjZ,UAAWlC,EAAMob,WAAWF,GAC5B3Y,QAAS,WACPvC,EAAMqb,UAAS,GACfrb,EAAMsb,WAAWJ,KAGnB,4BACGlb,EAAMua,OAAN,WAAmBW,EAAQK,eAAkB,UASvD,UCsKJC,OA7Mf,SAAkBxb,GAAQ,IAAD,EACSG,mBAASH,EAAMyb,UADxB,mBAChBA,EADgB,KACNC,EADM,OAEOvb,mBAASH,EAAMyb,SAAS/e,OAAO,IAFtC,mBAEhBwe,EAFgB,KAEPI,EAFO,OAGCnb,mBAAS,IAHV,mBAGhB8a,EAHgB,KAGVU,EAHU,OAIGxb,oBAAS,GAJZ,mBAIhByb,EAJgB,KAITP,EAJS,KAOvB7W,OAAOqX,QAAU,SAAUnC,GACzB,IAAMkC,EAAQ/U,SAASiV,eAAe,SAClCpC,EAAMvD,SAAWyF,GACnBP,GAAS,IAIbra,qBAAU,WACR0a,EAAY1b,EAAMyb,YACjB,CAACzb,EAAMyb,WAEVza,qBAAU,WACJ4a,EAAO/U,SAASkV,KAAKC,UAAUC,IAAI,cAClCpV,SAASkV,KAAKC,UAAUtS,OAAO,gBACnC,CAACkS,IAEJ,IAAMM,EAAc/a,uBAAY,SAACsa,GAE/B,IADA,IAAMxO,EAAM,GACH5N,EAAI,EAAGA,EAAIoc,EAAS3b,OAAQT,IAAK,CACxC,IAAM5C,EAAM,IAAIU,KACdkH,aAAMoX,EAASpc,GAAG8c,cAAe,aAAc,IAAIhf,OAErD,GAAMV,KAAOwQ,EAIN,CACL,IAAMmP,EAAOnP,EAAIxQ,GACjB2f,EAAKhgB,KAAKqf,EAASpc,IACnB4N,EAAIxQ,GAAO2f,MAPM,CACjB,IAAMA,EAAO,GACbA,EAAKhgB,KAAKqf,EAASpc,IACnB4N,EAAIxQ,GAAO2f,GAOfT,EAAQ1O,KACP,IAmEH,OAjEAjM,qBAAU,WACJya,EAAS3b,QACXoc,EAAYT,KAEb,CAACS,EAAaT,IA8Df,kBAAC,IAAMxZ,SAAP,KACE,kBAAC,GAAD,CACEgZ,KAAMA,EACNI,SAAUA,EACVC,WAAYA,EACZf,OAAQva,EAAMua,OACda,WAtDiB,SAACiB,GACtB,OAAQA,GACN,IAAK,UACH,OAAO,SAACnB,GACN,MAAM,gBAAN,OACqB,MAAnBA,EAAQoB,OACJ,WACmB,MAAnBpB,EAAQoB,OACR,UACA,GALN,YAMItc,EAAMua,OAAS,GAAK,aAE5B,IAAK,eACH,OAAO,SAACW,GACN,MAAM,gBAAN,OACiC,UAA/BA,EAAQqB,mBACJ,WAC+B,aAA/BrB,EAAQqB,mBACR,cACA,GALN,YAMIvc,EAAMua,OAAS,GAAK,aAE5B,IAAK,cACH,OAAO,SAACW,GACN,MAAM,gBAAN,OAC0B,YAAxBA,EAAQsB,YACJ,QACwB,WAAxBtB,EAAQsB,YACR,QACwB,SAAxBtB,EAAQsB,YACR,QACwB,aAAxBtB,EAAQsB,YACR,QACA,GATN,YAUIxc,EAAMua,OAAS,GAAK,aAE5B,IAAK,MAIL,QACE,OAAO,SAACW,GACN,MAAM,gBAAN,OAAuBlb,EAAMua,OAAS,GAAK,cAYjCkC,CAAezc,EAAMqc,aAGlCT,GACC,yBAAK1Z,UAAU,QAAQwL,GAAG,SACxB,yBACExL,UAAS,wBAAmB0Z,EAAQ,WAAa,gBAEjD,yBAAK1Z,UAAU,gBACb,kBAAC,KAAD,CACEK,QAAS,WACP8Y,GAAS,OAKf,yBAAKnZ,UAAU,aACb,gCAAMgZ,EAAQK,gBAGhB,yBAAKrZ,UAAU,QACb,8CACA,4BAAKgZ,EAAQiB,cAAgBjB,EAAQiB,cAAgB,KAErD,+CACA,wBAAIja,UAAU,mBACXgZ,EAAQwB,oCACLxB,EAAQwB,oCAAoC9Q,MAAM,KAAK5P,KAAI,SAAC2gB,EAAWtd,GACvE,OAAO,0BAAMpD,IAAKoD,EAAGkD,QAAS,kBA9F1B,SAACqa,GACrB,GAAqB,KAAjBA,EACJ,IAEEnB,EAASzf,KAAI,SAACkf,EAAShf,IAChBgf,EAAQK,iBAAmBqB,GAActB,EAAWJ,MAE3D,MAAOnO,GACPC,QAAQC,IAAIF,IAsFsC8P,CAAcF,KAAaA,EAAxD,QAEP,KAGN,6CACA,4BAAKzB,EAAQ4B,aAAe5B,EAAQ4B,aAAe,KAEnD,iDACA,4BACG5B,EAAQ6B,iBAAmB7B,EAAQ6B,iBAAmB,KAGzD,8CACA,4BAAK7B,EAAQ8B,cAAgB9B,EAAQ8B,cAAgB,KAErD,2CACA,4BAAK9B,EAAQsB,YAActB,EAAQsB,YAAc,KAEjD,mCACA,4BAAKtB,EAAQ+B,WAAa/B,EAAQ+B,WAAa,KAE/C,sCACA,4BAAK/B,EAAQoB,OAASpB,EAAQoB,OAAS,KAEvC,oDACA,4BACGpB,EAAQqB,mBAAqBrB,EAAQqB,mBAAqB,MAI/D,yBAAKra,UAAU,SACb,qCACA,4BAAKgZ,EAAQgC,QAGf,wCACA,yBAAKhb,UAAU,QACb,uBAAGsV,KAAM0D,EAAQiC,QAAShH,OAAO,YAC9B+E,EAAQiC,UAIb,wCACA,yBAAKjb,UAAU,QACb,uBAAGsV,KAAM0D,EAAQkC,QAASjH,OAAO,YAC9B+E,EAAQkC,UAIb,wCACA,yBAAKlb,UAAU,QACb,uBAAGsV,KAAM0D,EAAQmC,QAASlH,OAAO,YAC9B+E,EAAQmC,c,oBCpMzB,SAASC,GAAgBtd,GACvB,IAAKA,EAAMyb,SACT,MAAO,GAET,IACE,IACM8B,EADS,IAAIC,UAAO1hB,OAAOC,KAAKiE,EAAMyb,SAAS,KAClCpX,MAAMrE,EAAMyb,UACzBxe,EAAO,+BAAiCwgB,mBAAmBF,GACjE,OACE,uBAAG/F,KAAMva,EAAMygB,SAAS,gBACtB,sCAGJ,MAAO5a,GAEP,OADAkK,QAAQC,IAAInK,GAEV,uBAAG0U,KAAK,KACN,uCA+BOmG,OAzBf,SAAuB3d,GACrB,IAAKA,EAAMyb,SACT,MAAO,GAGT,IAAMmC,EACJ,gCACAH,mBAAmB7D,KAAKC,UAAU7Z,EAAMyb,WAE1C,OACE,yBAAKvZ,UAAU,yBAAyBM,MAAO,CAAC6D,eAAgB,SAC9D,4BAAQnE,UAAU,UAChB,kBAAC,KAAD,MACA,kBAACob,GAAD,CAAiB7B,SAAUzb,EAAMyb,YAEnC,4BAAQvZ,UAAU,UAChB,kBAAC,KAAD,MACA,uBAAGsV,KAAMoG,EAAUF,SAAS,iBAA5B,WCnCR,SAASG,GAAeC,EAAKC,GAC3B,IAAMhiB,EAAOD,OAAOC,KAAKgiB,GACzB,OAAOD,EAAIxgB,QAAO,SAAC2W,GACjB,OAAOlY,EAAKyB,OAAM,SAACvB,GACjB,OAAK8hB,EAAQ9hB,GAAK6D,QACXmU,EAAEhY,KAAS8hB,EAAQ9hB,SAwVjB+hB,OAnVf,SAAmBhe,GAAQ,IAClBC,EAAKC,cAALD,EADiB,EAEME,oBAAS,GAFf,mBAEjBqW,EAFiB,KAERC,EAFQ,OAGQtW,mBAAS,IAHjB,mBAGjBsb,EAHiB,KAGPC,EAHO,OAIwBvb,mBAAS,IAJjC,mBAIjB8d,EAJiB,KAICC,EAJD,OAKE/d,mBAAS,IALX,mBAKjBge,EALiB,KAKVC,EALU,KAMjBtD,EAAYuD,cAAZvD,SANiB,EAOU3a,mBAAS,WAPnB,mBAOjBkc,EAPiB,KAONiC,EAPM,OAQUne,oBAAS,GARnB,mBAQjBoe,EARiB,KAQNC,EARM,OASMre,mBAAS,CACrC6c,cAAe,GACfD,iBAAkB,GAClBD,aAAc,GACdX,cAAe,KAbO,mBASjB4B,EATiB,KASRU,EATQ,KAiBxBzd,qBAAU,WACRwD,OAAOka,SAAS,EAAG,KAClB,CAAC5D,IAEJ9Z,qBAAU,WAAM,4CACd,4BAAA7B,EAAA,sEACyBwX,IAAMC,IAC3B,gFAFJ,QACQE,EADR,QAIe7Z,MACXye,EAAY5E,EAAS7Z,KAAK0hB,SAAS5K,WACnC0C,GAAW,KAEX2H,EAAS,0DACTpR,QAAQC,IAAI6J,IAThB,4CADc,sBAcTN,GAdU,WAAD,wBAeZoI,KAED,CAACpI,IAEJ,IAAMqI,EAAgB,SAACC,EAAOrgB,GAC5BggB,GAAW,SAAC7J,GAEV,IAAMmK,EAAU,eAAOnK,GAEvB,GADAmK,EAAWD,GAASrgB,EACN,kBAAVqgB,EAA2B,CAC7B,IAAMla,EAAWiC,SAASiV,eAAe,YACnCkD,EAAOnY,SAASiV,eAAe,QAEnBlX,EAASpC,MAAMI,QAAnB,KAAVnE,EAAuC,OACb,SAC9BugB,EAAKxc,MAAMI,QAAU,OAErBgC,EAASqa,cAAgB,EACzBD,EAAKC,cAAgB,EACrBF,EAAU,iBAAuB,GACjCA,EAAU,aAAmB,QACxB,GAAc,qBAAVD,EAA8B,CACvC,IAAME,EAAOnY,SAASiV,eAAe,QAEnBkD,EAAKxc,MAAMI,QAAf,KAAVnE,EAAmC,OACb,SAE1BugB,EAAKC,cAAgB,EACrBF,EAAU,aAAmB,GAE/B,OAAOA,MAQX,SAASG,EAAgBpB,EAAK7hB,GAC5B,IAAMkjB,EAAY,IAAIC,IAAItB,EAAI9hB,KAAI,SAACiY,GAAD,OAAOA,EAAEhY,OAE3C,OADIkjB,EAAUE,KAAO,GAAGF,EAAUlD,IAAI,IAC1B,kBAARhgB,EAAgCqjB,MAAMC,KAAKJ,GACxCG,MAAMC,KAAKJ,GAAW7d,OAG/B,OAXAN,qBAAU,WACRkd,EAAoBL,GAAepC,EAAUsC,MAC5C,CAACtC,EAAUsC,IAUZ,yBAAK7b,UAAU,cACZic,EAAQ,yBAAKjc,UAAU,sBAAsBic,GAAe,GAE7D,yBAAKjc,UAAU,mBAAmBM,MAAO,CAAC6D,eAAgB,SACxD,yBAAKnE,UAAU,gBACb,yBAAKA,UAAU,UACb,4BACEM,MAAO,CAAC6D,eAAgB,QACxBqH,GAAG,QACH+L,SAAU,SAACC,GACTmF,EAAc,gBAAiBnF,EAAMvD,OAAO1X,SAG9C,4BAAQA,MAAM,GAAGkb,UAAQ,EAACG,UAAQ,GAAlC,gBAGCoF,EAAgBzD,EAAU,iBAAiBzf,KAC1C,SAACoE,EAAOlE,GACN,OACE,4BAAQD,IAAKC,EAAOuC,MAAO2B,GACd,KAAVA,EAAe,MAAQA,QAQpC,yBAAK8B,UAAU,UACb,4BACEM,MAAO,CAAC6D,eAAgB,OAAQzD,QAAS,QACzC8K,GAAG,WACH+L,SAAU,SAACC,GACTmF,EAAc,mBAAoBnF,EAAMvD,OAAO1X,SAGjD,4BAAQA,MAAM,GAAGkb,UAAQ,EAACG,UAAQ,GAAlC,mBAGCoF,EACCrB,GAAepC,EAAU,CACvBuB,cAAee,EAAQf,gBAEzB,oBACAhhB,KAAI,SAAC4I,EAAU1I,GACf,OACE,4BAAQD,IAAKC,EAAOuC,MAAOmG,GACX,KAAbA,EAAkB,MAAQA,QAOrC,yBAAK1C,UAAU,UACb,4BACEM,MAAO,CAAC6D,eAAgB,OAAQzD,QAAS,QACzC8K,GAAG,OACH+L,SAAU,SAACC,GACTmF,EAAc,eAAgBnF,EAAMvD,OAAO1X,SAG7C,4BAAQA,MAAM,GAAGkb,UAAQ,EAACG,UAAQ,GAAlC,eAGCoF,EACCrB,GAAepC,EAAU,CACvBuB,cAAee,EAAQf,cACvBD,iBAAkBgB,EAAQhB,mBAE5B,gBACA/gB,KAAI,SAACgjB,EAAM9iB,GACX,OACE,4BAAQD,IAAKC,EAAOuC,MAAOugB,GACf,KAATA,EAAc,MAAQA,QAOjC,yBAAK9c,UAAU,UACb,4BACEM,MAAO,CAAC6D,eAAgB,OAAQzD,QAAS,QACzC8K,GAAG,OACH+L,SAAU,SAACC,GACTmF,EAAc,eAAgBnF,EAAMvD,OAAO1X,SAG7C,4BAAQA,MAAM,GAAGkb,UAAQ,EAACG,UAAQ,GAAlC,eAGCoF,EACCrB,GAAepC,EAAU,CACvBuB,cAAee,EAAQf,cACvBD,iBAAkBgB,EAAQhB,mBAE5B,gBACA/gB,KAAI,SAACgjB,EAAM9iB,GACX,OACE,4BAAQD,IAAKC,EAAOuC,MAAOugB,GACf,KAATA,EAAc,MAAQA,QAOjC,yBAAK9c,UAAU,UACb,4BACEM,MAAO,CAAC6D,eAAgB,QACxBqH,GAAG,WACH+L,SAAU,SAACC,GACTmF,EAAc,gBAAiBnF,EAAMvD,OAAO1X,SAG9C,4BAAQA,MAAM,GAAGkb,UAAQ,EAACG,UAAQ,GAAlC,cAGCoF,EACCrB,GAAepC,EAAU,CACvBuB,cAAee,EAAQf,gBAEzB,iBACAhhB,KAAI,SAAC0B,EAAMxB,GACX,OACE,4BAAQD,IAAKC,EAAOuC,MAAOf,GACf,KAATA,EACG,MACAoB,aACEuF,aAAM3G,EAAM,aAAc,IAAIP,MAC9B,uBA4BlB,yBAAK+E,UAAU,UACE,YAAdma,GACC,yBAAKna,UAAU,eACb,yBAAKA,UAAU,qBACf,wBAAIA,UAAU,aAAd,UACA,yBAAKA,UAAU,mBACf,wBAAIA,UAAU,WAAd,QACA,yBAAKA,UAAU,WACf,wBAAIA,UAAU,IAAd,YAIW,iBAAdma,GACC,yBAAKna,UAAU,eACb,yBAAKA,UAAU,oBACf,wBAAIA,UAAU,YAAd,SACA,yBAAKA,UAAU,uBACf,wBAAIA,UAAU,eAAd,YACA,yBAAKA,UAAU,WACf,wBAAIA,UAAU,IAAd,QAIW,gBAAdma,GACC,yBAAKna,UAAU,2BACb,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,MACA,yBAAKA,UAAU,iBACf,wBAAIA,UAAU,SAAd,OAIJ,yBAAKA,UAAS,iBAAYma,IACxB,4BACE7Z,MAAO,CAAC6D,eAAgB,QACxBoT,SAAU,SAACC,GACT4E,EAAa5E,EAAMvD,OAAO1X,SAG5B,4BAAQA,MAAM,GAAGkb,UAAQ,EAACG,UAAQ,GAAlC,eAGA,4BAAQrb,MAAM,WAAd,WACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,eAAd,mBAOR,yBAAKyD,UAAU,kBAAkBM,MAAO,CAAC6D,eAAgB,SACvD,6BACE,4BAAKpG,EAAE,uBAGP,yBAAKiC,UAAU,aACb,sCACA,2BACE8N,KAAK,WACLwJ,QAAS+E,EACT9E,SAAU,SAACC,GACT8E,GAAcD,IAEhBrc,UAAU,aAIhB,wBAAIA,UAAU,cACbjC,EAAE,6BAIL,yBAAKiC,UAAU,oBAAoBM,MAAO,CAAC6D,eAAgB,OACzD,2BACCpG,EAAE,+BACH,6BACA,6BACCA,EAAE,iCAIL,yBAAKiC,UAAU,qBACb,kBAAC,GAAD,CACEuZ,SAAUwC,EACV5B,UAAWA,EACX9B,OAAQgE,KAGZ,kBAAC,GAAD,CAAe9C,SAAUA,M,QClQhB+D,OA5Ff,SAAqBxf,GACnByf,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UAEpCgc,KAASC,OAAOtY,OAAOxE,SAAU,EACjC6c,KAASC,OAAOtY,OAAO3D,SAAW,SAElCgc,KAASC,OAAOU,MAAMR,WAAY,EAElC,IAAIS,EAAO,EACPC,EAAS,EACTC,EAAU,EAEd,IAAKvgB,EAAM/C,MAA8B,IAAtB+C,EAAM/C,KAAK6C,OAC5B,OAAO,8BAGTE,EAAM/C,KAAKuC,SAAQ,SAAC0b,GACK,MAAnBA,EAAQoB,OACV+D,IAC4B,MAAnBnF,EAAQoB,OACjBgE,IAEAC,OAIJ,IAAMC,EAAY,CAChBC,SAAU,CACR,CACExjB,KAAM,CAACojB,EAAMC,EAAQC,GACrBV,gBAAiB,CAAC,OAAQ,OAAQ,QAClCf,MAAO,SAGX4B,OAAQ,CAAC,OAAQ,SAAU,qBAGvBC,EAAe,CACnBC,OAAQ,CACN5b,QAAS,CACP3B,KAAM,GACN6I,MAAO,GACP2U,IAAK,EACLC,OAAQ,KAGZC,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DC,YAAY,EACZC,qBAAqB,EACrBtB,SAAU,CACR/P,KAAM,QACNnM,SAAU,UACVyd,UAAW,CACTpC,MAAO,SAAUqC,EAAalkB,GAC5B,IAAMmkB,EAAUnkB,EAAKwjB,SAASU,EAAYE,cAEpClf,EADOif,EAAQE,MAAMxlB,OAAOC,KAAKqlB,EAAQE,OAAO,IACnCnf,MACbof,EAAeH,EAAQnkB,KAAKkkB,EAAYjlB,OAI9C,OAAOqlB,EAAe,KAHH5U,YACf4U,EAAepf,EAAS,KAAKyK,QAAQ,IAEC,MAE5CxI,MAAO,SAAU+c,EAAalkB,GAC5B,OAAOA,EAAKyjB,OAAOS,EAAY,GAAGjlB,WAM1C,OACE,yBAAKgG,UAAU,iBACb,yBAAKA,UAAU,eAAelC,EAAMoE,OACpC,yBAAKlC,UAAU,0BACb,kBAAC,KAAD,CAAUjF,KAAMujB,EAAWgB,QAASb,OCkB7Bc,OAxGf,SAAkBzhB,GAChByf,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UAEpCgc,KAASC,OAAOtY,OAAOxE,SAAU,EACjC6c,KAASC,OAAOtY,OAAO3D,SAAW,SAElCgc,KAASC,OAAOU,MAAMR,WAAY,EAElC,IAAM8B,EAAOpC,MAAM,IAAIqC,KAAK,GACxBpB,EAAU,EACd,IAAKvgB,EAAM/C,MAA8B,IAAtB+C,EAAM/C,KAAK6C,OAC5B,OAAO,8BAGTE,EAAM/C,KAAKuC,SAAQ,SAAC0b,GAClB,GAAIA,EAAQ+B,WAEV,IADA,IAAM2E,EAAMlgB,SAASwZ,EAAQ+B,YACpB5d,EAAI,EAAGA,EAAI,GAAIA,IAClBuiB,EAAU,GAAJviB,GAAUuiB,GAAiB,IAATviB,EAAI,IAC9BqiB,EAAKriB,UAITkhB,OAIJ,IAAMC,EAAY,CAChBE,OAAQ,CACN,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAEFD,SAAU,CACR,CACExjB,KAAMykB,EACN5C,MAAO,QACPe,gBAAiB,aAqCvB,OACE,yBAAK3d,UAAU,iBACb,yBAAKA,UAAU,eAAelC,EAAMoE,OACpC,yBAAKlC,UAAU,0BACb,kBAAC,KAAD,CAAKjF,KAAMujB,EAAWgB,QApCP,CACnBT,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DC,YAAY,EACZC,qBAAqB,EACrB7Z,OAAQ,CACNxE,SAAS,GAEXge,OAAQ,CACN5b,QAAS,CACP3B,KAAM,GACN6I,MAAO,GACP2U,IAAK,GACLC,OAAQ,IAGZe,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,EACTC,UAAW,CACTpe,MAAO,sBAIbqe,MAAO,CACL,CACEF,SAAS,SAYb,yBAAK7f,UAAU,cAAf,yBAAmDqe,EAAnD,eCuBS2B,OA1Hf,SAA0BliB,GAoBxB,GAnBAyf,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UAEpCgc,KAASC,OAAOtY,OAAOxE,SAAU,EACjC6c,KAASC,OAAOtY,OAAO3D,SAAW,SAElCgc,KAASC,OAAOU,MAAMR,WAAY,GAE7B5f,EAAM/C,MAA8B,IAAtB+C,EAAM/C,KAAK6C,OAC5B,OAAO,8BAGT,IAAM0c,EAAc,GAChB+D,EAAU,EAEdvgB,EAAM/C,KAAKuC,SAAQ,SAAC0b,GACbA,EAAQsB,aAIRA,EAAY2F,eAAejH,EAAQsB,YAAY5c,iBAClD4c,EAAYtB,EAAQsB,YAAY5c,eAAiB,GAEnD4c,EAAYtB,EAAQsB,YAAY5c,kBAN9B2gB,OAUJ,IAAMtjB,EAAO,GACPyjB,EAAS,GAEf5kB,OAAOC,KAAKygB,GAAahd,SAAQ,SAACsK,GAC5BA,IACF4W,EAAOtkB,KAAK0N,EAAQsD,eACpBnQ,EAAKb,KAAKogB,EAAY1S,QAI1B,IAAM0W,EAAY,CAChBC,SAAU,CACR,CACExjB,KAAMA,EACN4iB,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aAINa,OAAQA,GAGJC,EAAe,CACnBC,OAAQ,CACN5b,QAAS,CACP3B,KAAM,GACN6I,MAAO,GACP2U,IAAK,EACLC,OAAQ,KAGZ1Z,OAAQ,CACNxE,SAAS,GAEXoe,YAAY,EACZC,qBAAqB,EACrBtB,SAAU,CACR/P,KAAM,QACNmR,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DG,UAAW,CACTpC,MAAO,SAAUqC,EAAalkB,GAC5B,IAAMmkB,EAAUnkB,EAAKwjB,SAASU,EAAYE,cAEpClf,EADOif,EAAQE,MAAMxlB,OAAOC,KAAKqlB,EAAQE,OAAO,IACnCnf,MACbof,EAAeH,EAAQnkB,KAAKkkB,EAAYjlB,OAI9C,OAAOqlB,EAAe,KAHH5U,YACf4U,EAAepf,EAAS,KAAKyK,QAAQ,IAEC,MAE5CxI,MAAO,SAAU+c,EAAalkB,GAC5B,OAAOA,EAAKyjB,OAAOS,EAAY,GAAGjlB,WAM1C,OACE,yBAAKgG,UAAU,iBACb,yBAAKA,UAAU,eAAelC,EAAMoE,OACpC,yBAAKlC,UAAU,0BACb,kBAAC,KAAD,CAAUjF,KAAMujB,EAAWgB,QAASb,KAEtC,yBAAKze,UAAU,cAAf,yBAAmDqe,EAAnD,eCqFS6B,OAzMf,SAAwBpiB,GACtB,IAAMqiB,EAAQ,GACRC,EAAiBC,IAAMC,YAuB7B,GArBA/C,KAASC,OAAO+C,SAASC,KAAKf,MAAO,EAErClC,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UAEpCgc,KAASC,OAAOtY,OAAOxE,SAAU,EACjC6c,KAASC,OAAOtY,OAAO3D,SAAW,SAElCgc,KAASC,OAAOU,MAAMR,WAAY,GAE7B5f,EAAM/C,MAA8B,IAAtB+C,EAAM/C,KAAK6C,OAC5B,OAAO,8BAGT,IAAM6iB,EAAa,IAAIC,IAEvB5iB,EAAM/C,KAAKuC,SAAQ,SAACvC,EAAMf,GACJ,cAAhBe,EAAK4lB,QAIT/mB,OAAOC,KAAKkB,GAAMuC,SAAQ,SAACvD,GAKzB,GAJY,SAARA,GACFomB,EAAMjmB,KAAKwB,IAAOX,EAAKS,KAAKolB,OAAQ,eAG1B,WAAR7mB,GAA4B,SAARA,EAAxB,CAIK0mB,EAAWI,IAAI9mB,IAClB0mB,EAAWK,IAAI/mB,EAAK,IAEtB,IAAMgnB,EACJN,EAAW/L,IAAI3a,GAAK6D,OAAS,EACzB4B,SAASihB,EAAW/L,IAAI3a,GAAK0mB,EAAW/L,IAAI3a,GAAK6D,OAAS,IAC1D,EACAyhB,EAA6B,KAAdtkB,EAAKhB,GAAcyF,SAASzE,EAAKhB,IAAQ,EAC9D0mB,EAAW/L,IAAI3a,GAAKG,KAAK6mB,EAAgB1B,UAI7C,IAAM2B,EAAY,IAAIN,IACpB,YAAID,EAAWpjB,WAAW+B,MAAK,SAACnC,EAAGgQ,GACjC,OAAOhQ,EAAE,GAAGA,EAAE,GAAGW,OAAS,GAAKqP,EAAE,GAAGA,EAAE,GAAGrP,OAAS,GAAK,GAAK,MAI1DmT,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGE/W,EAAQ,EACNukB,EAAW,GACjByC,EAAU1jB,SAAQ,SAACvC,EAAMhB,GtBrEC,IAACI,EsBsEb,OAARJ,IAIAC,GAAS,KAIbukB,EAASrkB,KAAK,CACZ4jB,YAAa,IACb/iB,KAAM0lB,EAAW/L,IAAI3a,GACrBknB,eAAgB,QAChBC,qBAAsBnQ,EAAO/W,GAC7B4iB,OtBnFuBziB,EsBmFHJ,EtBlFjBL,EAAYS,EAAK+Q,gBsBmFpB2S,YAAa9M,EAAO/W,GACpBmnB,iBAAkB,KAGpBnnB,SAGF,IAAMklB,EAAU,CACdV,OAAQ2B,EACR5B,SAAUA,GAGNe,EAAU,CACdR,YAAY,EACZD,OAAQ,CAAC,QAAS,YAAa,WAAY,aAAc,aACzDE,qBAAqB,EACrBtB,SAAU,CACR/P,KAAM,SAER6S,SAAU,CACRa,MAAO,CACLC,OAAQ,GAEVb,KAAM,CACJc,QAAS,IAGb5C,OAAQ,CACN5b,QAAS,CACP3B,KAAM,GACN6I,MAAO,GACP2U,IAAK,EACLC,OAAQ,IAGZe,OAAQ,CACNI,MAAO,CACL,CACEjS,KAAM,SACNrI,MAAO,CACL8b,aAAa,EACbna,SAAKP,EACL2a,UAAW,GAEbC,WAAY,CACV/gB,SAAS,EACTghB,YAAa,iBAInB9B,MAAO,CACL,CACE9R,KAAM,OACNnT,KAAM,CACJgnB,KAAM,MACNC,cAAe,SACfC,SAAU,EACVC,eAAgB,CACdC,YAAa,SACbC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACN3nB,IAAK,SACL4nB,KAAM,SACN1nB,MAAO,SACP2nB,QAAS,SACT1nB,KAAM,WAGVolB,UAAW,CACTpe,MAAO,wBAoBjB,OACE,yBAAK1B,UAAU,iBACb,yBAAKA,UAAU,eAAelC,EAAMoE,OACpC,yBAAKlC,UAAU,iBACb,kBAAC,KAAD,CAAMjF,KAAMmkB,EAASI,QAASA,EAAS5T,IAAK0U,KAE9C,yBAAKpgB,UAAU,aAAaM,MAAO,CAAC+E,UAAW,MAAOhB,OAAQ,SAC5D,4BAAQhE,QApBd,WAGE,IADA,IAAMgiB,EAAKjC,EAAerX,QAAQuZ,cACzBnlB,EAAI,EAAGA,EAAIklB,EAAGtnB,KAAKwjB,SAAS3gB,OAAQT,IAAK,CAChD,IAAMolB,EAAOF,EAAGG,eAAerlB,GAC/BolB,EAAKE,OACa,OAAhBF,EAAKE,QACArC,EAAerX,QAAQuZ,cAAcvnB,KAAKwjB,SAASphB,GAAGslB,OACvD,KAERJ,EAAGtN,WAUC,uBChBO2N,OAnLf,SAA6B5kB,GAC3B,IAAMqiB,EAAQ,GACR1gB,EAAY,GACZoC,EAAY,GACZ8gB,EAAW,GAqBjB,GAnBApF,KAASC,OAAO+C,SAASC,KAAKf,MAAO,EACrClC,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOtY,OAAOxE,SAAU,EACjC6c,KAASC,OAAOtY,OAAO3D,SAAW,SAElCgc,KAASC,OAAOU,MAAMR,WAAY,GAE7B5f,EAAMhD,YAA0C,IAA5BgD,EAAMhD,WAAW8C,OACxC,OAAO,8BAGTE,EAAMhD,WAAWwC,SAAQ,SAACvC,EAAMf,GAC1BA,GAAS,IACXmmB,EAAMjmB,KAAKwB,IAAOX,EAAKS,KAAKolB,OAAQ,eACpCnhB,EAAUvF,KAAKa,EAAKe,gBACpB+F,EAAU3H,KAAKa,EAAKgB,gBACpB4mB,EAASzoB,KAAKa,EAAKiB,mBAIvB,IAAMkjB,EAAU,CACdV,OAAQ2B,EACR5B,SAAU,CACR,CACET,YAAa,EACb/iB,KAAM0E,EACNwhB,eAAgB,QAChBC,qBAAsB,UACtBtE,MAAO,YACPiB,YAAa,UACbsD,iBAAkB,GAEpB,CACErD,YAAa,EACb/iB,KAAM8G,EACNof,eAAgB,QAChBC,qBAAsB,UACtBtE,MAAO,YACPiB,YAAa,UACbsD,iBAAkB,GAEpB,CACErD,YAAa,EACb/iB,KAAM4nB,EACN1B,eAAgB,QAChBC,qBAAsB,UACtBtE,MAAO,WACPiB,YAAa,UACbsD,iBAAkB,KAKlB7B,EAAU,CACdR,YAAY,EACZD,OAAQ,CACN,QACA,YACA,WACA,aACA,YACA,YAEFE,qBAAqB,EACrBtB,SAAU,CACR/P,KAAM,SAER6S,SAAU,CACRa,MAAO,CACLC,OAAQ,GAEVb,KAAM,CACJc,QAAS,KAGb5C,OAAQ,CACN5b,QAAS,CACP3B,KAAM,GACN6I,MAAO,GACP2U,IAAK,EACLC,OAAQ,KAGZe,OAAQ,CACNI,MAAO,CACL,CACEjS,KAAM,SACNrI,MAAO,CACL8b,aAAa,EACbna,SAAKP,EACL2a,UAAW,GAEbC,WAAY,CACV/gB,SAAS,EACTghB,YAAa,iBAInB9B,MAAO,CACL,CACE9R,KAAM,OACNnT,KAAM,CACJgnB,KAAM,MACNC,cAAe,SACfC,SAAU,EACVC,eAAgB,CACdC,YAAa,SACbC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACN3nB,IAAK,SACL4nB,KAAM,SACN1nB,MAAO,SACP2nB,QAAS,SACT1nB,KAAM,WAGVolB,UAAW,CACTpe,MAAO,wBAiCjB,OA1BI5D,EAAM4P,OACR4R,EAAQK,OAAOI,MAAQ,CACrB,CACEjS,KAAM,cACNrI,MAAO,CACLW,IAAK,EACLgB,IAAK,IACLwb,SAAU,SAAUrmB,EAAOvC,EAAO6oB,GAChC,OAAc,MAAVtmB,EAAwB,QACd,MAAVA,EAAuB,OACb,MAAVA,EAAsB,MACZ,MAAVA,EAAsB,MACZ,KAAVA,EAAqB,KACX,IAAVA,EAAoB,IACV,IAAVA,EAAoB,IACjB,OAGXklB,WAAY,CACV/gB,SAAS,EACTghB,YAAa,kBAOnB,yBAAK1hB,UAAU,iBACb,yBAAKA,UAAU,eAAelC,EAAMoE,OACpC,yBAAKlC,UAAU,iBACb,kBAAC,KAAD,CAAMjF,KAAMmkB,EAASI,QAASA,OCpEvBwD,OAzGf,SAA6BhlB,GAC3B,IAAMqiB,EAAQ,GACR1gB,EAAY,GACZoC,EAAY,GACZ8gB,EAAW,GAoBjB,GAlBApF,KAASC,OAAO+C,SAASC,KAAKf,MAAO,EACrClC,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOC,SAASE,gBAAkB,2BAC3CJ,KAASC,OAAOC,SAASG,eAAgB,EACzCL,KAASC,OAAOC,SAASI,YAAc,UACvCN,KAASC,OAAOC,SAASK,YAAc,EACvCP,KAASC,OAAOC,SAASM,eAAiB,OAC1CR,KAASC,OAAOC,SAASO,cAAgB,OACzCT,KAASC,OAAOC,SAASQ,aAAe,EACxCV,KAASC,OAAOC,SAASC,WAAY,EACrCH,KAASC,OAAOC,SAAS/P,KAAO,UAChC6P,KAASC,OAAOC,SAASlc,SAAW,UACpCgc,KAASC,OAAOtY,OAAOxE,SAAU,EACjC6c,KAASC,OAAOtY,OAAO3D,SAAW,SAClCgc,KAASC,OAAOU,MAAMR,WAAY,GAE7B5f,EAAMhD,YAA0C,IAA5BgD,EAAMhD,WAAW8C,OACxC,OAAO,8BAGTE,EAAMhD,WAAWwC,SAAQ,SAACvC,EAAMf,GAC1BA,GAAS,IACXmmB,EAAMjmB,KAAKwB,IAAOX,EAAKS,KAAKolB,OAAQ,cAAchkB,OAAO,WACzD6C,EAAUvF,KACRa,EAAKkB,eAAiBlB,EAAKmB,eAAiBnB,EAAKoB,eAEnD0F,EAAU3H,KAAKa,EAAKmB,gBACpBymB,EAASzoB,KAAKa,EAAKoB,mBAIvB,IAAM4mB,EAAa,CACjBvE,OAAQ2B,EACR5B,SAAU,CACR,CACExjB,KAAM8G,EACN+a,MAAO,YACPe,gBAAiB,WAEnB,CACE5iB,KAAM4nB,EACN/F,MAAO,WACPe,gBAAiB,WAEnB,CACE5iB,KAAM0E,EACNmd,MAAO,SACPe,gBAAiB,aAwCvB,OACE,yBAAK3d,UAAU,iBACb,yBAAKA,UAAU,eAAelC,EAAMoE,OACpC,yBAAKlC,UAAU,iBACb,kBAAC,KAAD,CAAKjF,KAAMgoB,EAAYzD,QAvCb,CACdR,YAAY,EACZrB,SAAU,CACR/P,KAAM,SAERmR,OAAQ,CAAC,YAAa,WAAY,aAAc,YAAa,YAC7DE,qBAAqB,EACrB7Z,OAAQ,CACNxE,SAAS,GAEXge,OAAQ,CACN5b,QAAS,CACP3B,KAAM,GACN6I,MAAO,GACP2U,IAAK,GACLC,OAAQ,KAGZe,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,EACTC,UAAW,CACTpe,MAAO,sBAIbqe,MAAO,CACL,CACEF,SAAS,WCZJmD,OAxEf,SAAkBllB,GAAQ,IAAD,EACOG,oBAAS,GADhB,mBAChBqW,EADgB,KACPC,EADO,OAEatW,mBAAS,IAFtB,mBAEhBnD,EAFgB,KAEJwS,EAFI,OAGOrP,mBAAS,IAHhB,mBAGhBglB,EAHgB,KAGPC,EAHO,OAIyBjlB,mBAAS,IAJlC,mBAIhBklB,EAJgB,KAIEC,EAJF,KAMvBtkB,qBAAU,YACQ,IAAZwV,GACFqC,MAED,CAACrC,IAEJ,IAAMqC,EAAS,uCAAG,oCAAA1Z,EAAA,+EAMJ4Z,QAAQC,IAAI,CACpBrC,IAAMC,IAAI,4EACVD,IAAMC,IAAI,gFACVD,IAAMC,IAAI,sFATE,mCAGZE,EAHY,KAIZyO,EAJY,KAKZC,EALY,KAWdhW,EAAcsH,EAAS7Z,KAAKoc,mBAC5BiM,EAAoBE,EAAmBvoB,KAAK+B,cAC5ComB,EAAWG,EAAgBtoB,KAAK0hB,UAChClI,GAAW,GAdG,kDAgBdzJ,QAAQC,IAAR,MAhBc,0DAAH,qDAoBf,OACE,yBAAK/K,UAAU,mBACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,gBAAgBM,MAAO,CAAC6D,eAAgB,SACrD,kBAAC,GAAD,CACEjC,MAAM,wBACNpH,WAAYA,KAIhB,yBAAKkF,UAAU,gBAAgBM,MAAO,CAAC6D,eAAgB,SACrD,kBAAC,GAAD,CACEjC,MAAM,wBACNpH,WAAYA,KAIhB,yBAAKkF,UAAU,gBAAgBM,MAAO,CAAC6D,eAAgB,SACrD,kBAAC,GAAD,CACEjC,MAAM,uBACNnH,KAAMooB,KAIV,yBAAKnjB,UAAU,gBAAgBM,MAAO,CAAC6D,eAAgB,SACrD,kBAAC,GAAD,CAAajC,MAAM,iBAAiBnH,KAAMkoB,KAG5C,yBAAKjjB,UAAU,gBAAgBM,MAAO,CAAC6D,eAAgB,SACrD,kBAAC,GAAD,CAAUjC,MAAM,cAAcnH,KAAMkoB,KAGtC,yBAAKjjB,UAAU,gBAAgBM,MAAO,CAAC6D,eAAgB,SACrD,kBAAC,GAAD,CAAkBjC,MAAM,sBAAsBnH,KAAMkoB,Q,oBCiE/CM,OArIf,YAAgC,IAAb9lB,EAAY,EAAZA,UAAY,EACCQ,oBAAS,GADV,mBACtBqW,EADsB,KACbC,EADa,OAEWtW,mBAAS,IAFpB,mBAEtBulB,EAFsB,KAERC,EAFQ,OAGSxlB,mBAAS,IAHlB,mBAGtBylB,EAHsB,KAGTC,EAHS,KA0D7B7kB,qBAAU,WAAM,4CACd,4BAAA7B,EAAA,+EAEkCwX,IAAMC,IAClC,gFAHN,OAEU2O,EAFV,OAKII,EACEJ,EAAgBtoB,KAAK0hB,SAASrhB,QAAO,SAACC,GAAD,OAAOA,EAAEoH,YAAchF,MAE9D8W,GAAW,GARf,gDAUIzJ,QAAQC,IAAR,MAVJ,0DADc,sBAcTuJ,GAdU,WAAD,wBAeZsP,KAED,CAACtP,EAAS7W,IAEbqB,qBAAU,WACR6kB,EAzEF,SAA4B5oB,GAE1B,IAAI8oB,EAAgB9oB,EAAKiC,QACvB,SAAC0P,EAAKlP,GAAN,OAAYkP,EAAMlP,EAAEgd,oCAAsC,OAC1D,IAEFqJ,EAAgBA,EAAc7O,QAAQ,OAAQ,IAC9C,IAAM8O,EAAU,IAAI5G,IAAI2G,EAAcE,MAAM,WAGtC1Y,EAAQ,GACR2Y,EAAW,IAAI9G,IACf+G,EAAQ,GAmCd,OAlCAlpB,EAAKuC,SAAQ,SAACjC,GACZ,IAIM6oB,EAJgB7oB,EAAEmf,oCAAoCxF,QAC1D,OACA,IAE+B+O,MAAM,UACvC,GAAIG,EAAY,CACd,IAAMC,EAAM,IAAM9oB,EAAEge,cACpB2K,EAASjK,IAAIoK,GACb9Y,EAAMnR,KAAK,CACTsR,GAAI2Y,EACJC,MAAON,EAAQjD,IAAIsD,GAAO,SAAW,SACrCE,IAAKhpB,IAEP6oB,EAAW5mB,SAAQ,SAACyU,GAClBkS,EAAM/pB,KAAK,CACToqB,OAAQvS,EACRkC,OAAQkQ,WAOhBF,EAAM3mB,SAAQ,SAACjC,GACR2oB,EAASnD,IAAIxlB,EAAEipB,UAClBjZ,EAAMnR,KAAK,CACTsR,GAAInQ,EAAEipB,OACNF,MAAO,SACPC,IAAKhpB,EAAEipB,SAETN,EAASjK,IAAI1e,EAAEipB,YAGZ,CACLjZ,MAAOA,EACP4Y,MAAOA,GAwBMM,CAAmBf,MACjC,CAACA,IAEJ,IAAMgB,EAAe,WACnB,IAAMC,EAAQlc,mBAEdzJ,qBAAU,WACR,IAAM4lB,EAAKD,EAAM1b,QACXjE,EAAQH,SAASiV,eAAe,YAAY+K,YAC5CtgB,EAASS,EAEf4f,EAAGE,QAAQ,UAAUC,UAAU,IAC/BH,EAAGE,QAAQ,YAAa/e,OACxB6e,EAAGE,QAAQ,IAAK/e,MAAYgf,SAAS,KACrCH,EAAGE,QAAQ,IAAK/e,MAAYgf,SAAS,KACrCH,EAAGE,QAAQ,OAGX,WACE,IAAK,IAAIznB,EAAI,EAAGsH,EAAIif,EAAYrY,MAAMzN,OAAQT,EAAIsH,IAAKtH,EAAG,CACxD,IAAM2nB,EAAWpB,EAAYrY,MAAMlO,GACnC2nB,EAAS3f,EAAIgB,KAAKiB,KAAKtC,EAAOqB,KAAKC,IAAItB,EAAOggB,EAAS3f,IACvD2f,EAAS7S,EAAI9L,KAAKiB,KAAK/C,EAAQ8B,KAAKC,IAAI/B,EAAQygB,EAAS7S,UAG5D,IAEH,IAAMnN,EAAQH,SAASiV,eAAe,YAAY+K,YAC5CtgB,EAASS,EAEf,OACE,kBAAC,KAAD,CACE4G,IAAK+Y,EACL3f,MAAOA,EACPT,OAAQA,EACRkL,UAAWmU,EACXqB,UAAU,KACVC,UAAW,SAACtd,GAAD,MAA0B,WAAfA,EAAK0c,MAAqB,UAAY,QAC5Da,6BAA8B,iBAAM,OACpCC,yBAA0B,EAC1BC,6BAA8B,SAACC,GAAD,MACN,MAAtBA,EAAKd,OAAO9Y,GAAG,GAAa,EAAI,GAElC6Z,0BAA0B,KAShC,OAJAvmB,qBAAU,WACRwmB,IAASC,OAAO,kBAACf,EAAD,MAAkB7f,SAASiV,eAAe,eACzD,CAAC8J,IAEG,yBAAKlY,GAAG,cCzBFga,OA5Gf,YAAgD,IAAxB1qB,EAAuB,EAAvBA,WAAY2qB,EAAW,EAAXA,SAAW,EACrBxnB,mBAAS,IADY,mBACtClD,EADsC,KAChCwJ,EADgC,KAEvCmhB,EAASnd,mBA0Ff,OAxFAzJ,qBAAU,WACRyF,EAAQzJ,KACP,CAACA,IAEJgE,qBAAU,WACR,GAAK/D,EAAK6C,OAAV,CAEA,IAAMgI,EAAMC,IAAU6f,EAAO3c,SAIvBgB,EAAe,GAAfA,EAA+C,EAC/CyF,GAJS5J,EAAIE,KAAK,SAGQ,EAE1B2J,GAJU7J,EAAIE,KAAK,UAEkB,GAKrC6f,EAAa9f,IAAc,SAC3BuK,EAASvK,MAEZQ,OAAOtL,EAAKjB,KAAI,SAACuB,GAAD,OAAOsqB,EAAWtqB,EAAEG,UACpC8K,MAAM,CAACyD,EAAayF,IACpBoW,aAAa,KAEVpV,EAAS3K,MAEZQ,OAAO,CACN,EACAF,KAAKiB,IACH,EACAvB,IAAO9K,GAAM,SAACM,GAAD,OAAOA,EAAEoqB,SAGzBnf,MAAM,CAACmJ,EAAa1F,IAEjBwG,EAAQ1K,IAAcuK,GAAQhL,SAAS,GAE7CQ,EACG2B,OAAO,WACPjH,MAAM,YAFT,qBAEoCmP,EAFpC,QAGGnI,KAAKiJ,GACLjJ,MAAK,SAACtB,GAAD,OAAOA,EAAEuB,OAAO,WAAWC,YAChCvB,UAAU,QACVH,KAAK,IAAK,GACVA,KAAK,KAAM,IACXA,KAAK,KAAM,SACXA,KAAK,YAAa,eAClBxF,MAAM,cAAe,SAExBsF,EACGK,UAAU,QACVlL,KAAKA,GACLoM,KAAK,QACLrB,KAAK,QAAS,OACdA,KAAK,KAAK,SAACzK,GAAD,OAqDjB,SAAoB8J,EAAG8M,EAAG4T,EAAGC,EAAGC,EAAGrT,GACjC,IAAKoT,EAAG,YAEEjf,IAAN6L,IAAiBA,EAAI,GAEzB,IAGMsT,EAAK/T,EAAI6T,EAAIC,EAiCnB,MA/Bc,CACZ,IACA5gB,EACA8M,EACA,IACA9M,EACA6gB,EACA,IACAD,EACAA,EACA,EACA,EACArT,EAjBSvN,EAAI4gB,EAmBb9T,EAAI6T,EACJ,IAnBS3gB,EAAI0gB,EAAIE,EAqBjB9T,EAAI6T,EACJ,IACAC,EACAA,EACA,EACA,EACArT,EACAvN,EAAI0gB,EACJG,EACA,IACA7gB,EAAI0gB,EACJ5T,EACA,KAEW9K,KAAK,KA7FZ8e,CACE7V,EAAOuV,EAAWtqB,EAAEG,OACpBiU,EACAW,EAAO/I,YACPoI,EAAce,EAAOnV,EAAEoqB,IA5CX,MAgDf3f,KAAK,QAAQ,SAACzK,EAAG8B,GAAJ,OAAWA,EAAIpC,EAAK6C,OAAS,EAAI,YAAc,aAE/DgI,EACGK,UAAU,UACVlL,KAAKA,GACLoM,KAAK,QACLrB,KAAK,QAAS,SACdA,KAAK,cAAe,UACpBA,KAAK,YAAa,QAClBA,KAAK,KAAK,SAACzK,GAAD,OAAO+U,EAAOuV,EAAWtqB,EAAEG,OAAS4U,EAAO/I,YAAc,KACnEvB,KAAK,KAAK,SAACzK,GAAD,OAAOmV,EAAOnV,EAAEoqB,IAAa,KACvChe,MAAK,SAACpM,GAAD,OAAOA,EAAEoqB,MACdhf,OAAO,SACPX,KAAK,QAAS,WACdA,KAAK,KAAK,SAACzK,GAAD,OAAO+U,EAAOuV,EAAWtqB,EAAEG,OAAS4U,EAAO/I,YAAc,KACnEvB,KAAK,KAAM,UACX2B,MAAK,SAACpM,EAAG8B,GAAJ,OACJA,GAAKpC,EAAKoC,EAAI,GAAGsoB,GACb5f,IAAU,OAAVA,EACG9K,EAAKoC,GAAGsoB,GAAY1qB,EAAKoC,EAAI,GAAGsoB,IAC/B1qB,EAAKoC,EAAI,GAAGsoB,IAEhB,SAEP,CAAC1qB,EAAM0qB,IAGR,yBAAKzlB,UAAU,yBAAyBM,MAAO,CAAC6D,eAAgB,SAC9D,yBACEuH,IAAKga,EACL5gB,MAAM,MACNT,OAAO,MACP6P,QAAQ,cACRzI,oBAAoB,iBAEpB,uBAAGzL,UAAU,WACb,uBAAGA,UAAU,cCwJNkmB,OA7Of,SAAepoB,GAAQ,IAAD,IACbC,EAAKC,cAALD,EACDooB,EAAS5d,mBACT6d,EAAQ7d,mBAEP9K,EAAa4oB,cAAb5oB,UALa,EAOUQ,oBAAS,GAPnB,mBAObqW,EAPa,KAOJC,EAPI,OAQgBtW,mBAAS,IARzB,mBAQbnD,EARa,KAQDwS,EARC,OASkBrP,mBAAS,GAT3B,mBASbyX,EATa,KASAC,EATA,OAUwB1X,oBAAS,GAVjC,mBAUb+X,EAVa,KAUGC,EAVH,OAW8BhY,oBAAS,GAXvC,mBAWbiY,EAXa,KAWMC,EAXN,OAYclY,mBAAS,IAZvB,mBAYbqoB,EAZa,KAYFC,EAZE,OAaoBtoB,mBAAS,IAb7B,mBAabmG,EAba,KAaCoiB,EAbD,OAcAvoB,mBAASvE,EAAY+D,IAAlCgpB,EAda,oBAgBpB3nB,qBAAU,YACQ,IAAZwV,GACFoS,GAASjpB,KAEV,CAAC6W,EAAS7W,IAEb,IAAMipB,GAAQ,uCAAG,WAAOvsB,GAAP,6BAAA8C,EAAA,+EAMH4Z,QAAQC,IAAI,CACpBrC,IAAMC,IAAI,4EACVD,IAAMC,IAAI,2FACVD,IAAMC,IAAI,sFATC,mCAGJiS,EAHI,KAGV5rB,KACMgc,EAJI,KAIVhc,KACMic,EALI,KAKVjc,KAMGiI,EAAS2jB,EAAa1P,UAC5BsP,EAAavjB,EAAO4J,MAAK,SAACrJ,GAAD,OAAOA,EAAEd,YAActI,MAC1C+c,EAAKra,EAAqBma,GAAqB7c,GACrDmT,EAAc4J,GACR1e,EAAOkB,EAAYS,GACzBqsB,EAAgB,eACbhuB,EAAOue,EAA0Bve,KAEpC+b,GAAW,GAnBE,kDAqBbzJ,QAAQC,IAAR,MArBa,0DAAH,sDAyBd,OACE,kBAAC,IAAMhL,SAAP,KACE,yBAAKC,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAMwC,GAAG,KAAT,QADF,IAEE,kBAAC,IAAD,CAAMA,GAAE,UAAK/E,IAAcgpB,IAE7B,yBAAKzmB,UAAU,UACb,yBACEA,UAAU,uBACVM,MAAO,CAAC6D,eAAgB,SAExB,4BAAKpG,EAAE,cAAD,OAAe0oB,EAAU/oB,iBAC/B,4BACGK,EAAE,0BAA2B,CAACpD,KAAMf,OAAOC,KAAKysB,GAAW1oB,OACxDhD,EAAmB0rB,EAAUlkB,iBAC7B,OATV,QAcCkS,GAAW,kBAAC,EAAD,CAAOvZ,KAAMurB,IACxBhS,GAAW,kBAAC,GAAD,CAAWxZ,WAAYA,IAClCwZ,GACC,kBAAC,IAAMvU,SAAP,KAEI,kBAAC,EAAD,CACE+L,WAAYqa,EACZle,QAAS3P,EAASmuB,GAClBzjB,OAAQ,CAACsjB,GACT9iB,sBAAuBY,EACvBiE,iBAAiB,KAMxBiM,GACC,yBAAKtU,UAAU,kBACb,yBAAKA,UAAU,WACb,kBAAC,KAAD,MACA,yBAAKA,UAAU,iBAAf,gCACgC,KAC7B,UAAAoE,EAAaqiB,UAAb,mBAAyBriB,aAAzB,8BACG3E,YAAa,IAAK,IAHxB,YAWR,yBAAKO,UAAU,eACZsU,GACC,kBAAC,IAAMvU,SAAP,KACE,yBAAKC,UAAU,gBACb,yBACEA,UAAU,6BACVM,MAAO,CAAC6D,eAAgB,SAExB,4BAAKpG,EAAE,0BACP,yBAAKiC,UAAU,aACZoE,EAAaqiB,GACV7sB,OAAOC,KAAKuK,EAAaqiB,GAAWriB,cACjChF,MACC,SAACnC,EAAGgQ,GAAJ,OACE7I,EAAaqiB,GAAWriB,aAAa6I,GAClCxN,UACH2E,EAAaqiB,GAAWriB,aAAanH,GAAGwC,aAE3CjF,MAAM,EAAG,GACTV,KAAI,SAAC4I,EAAU1I,GACd,OACE,yBAAKD,IAAKC,EAAOgG,UAAU,YACzB,4BAEIoE,EAAaqiB,GAAWriB,aACtB1B,GACAjD,WAGN,4BAAKiD,GACL,yBAAK1C,UAAU,SACb,kBAAC,IAAD,MACA,4BAEIoE,EAAaqiB,GAAWriB,aACtB1B,GACAE,MAAMnD,gBAOtB,KAGR,yBAAKO,UAAU,sBAEX,kBAAC,GAAD,CACElF,WAAYA,EAAWN,OAAO,GAC9BirB,SAAU,qBAMlB,yBACEzlB,UAAU,6BACVM,MAAO,CAAC6D,eAAgB,QACxBuH,IAAK0a,GAEL,yBAAKpmB,UAAU,QACb,yBACEA,UAAS,cAAyB,IAAhB0V,EAAoB,UAAY,IAClDrV,QAAS,WACPsV,EAAe,KAGjB,4BAAK5X,EAAE,gBAET,yBACEiC,UAAS,cAAyB,IAAhB0V,EAAoB,UAAY,IAClDrV,QAAS,WACPsV,EAAe,KAGjB,4BAAK5X,EAAE,YAIX,yBAAKiC,UAAU,eACb,2BAAOA,UAAU,QAAQjC,EAAE,gBAC3B,yBAAKiC,UAAU,mBACb,2BAAOqX,QAAQ,mBAAmBtZ,EAAE,uBACpC,2BACE+P,KAAK,WACLwJ,QAAStB,EACThW,UAAU,SACVuT,aAAW,yCACXgE,SAAU,SAACC,GACTvB,GAAmBD,OAIzB,yBACEhW,UAAS,6BACS,IAAhB0V,EAAoB,WAAa,KAGnC,2BAAO2B,QAAQ,sBAAsBtZ,EAAE,2BACvC,2BACE+P,KAAK,WACLwJ,QAAyB,IAAhB5B,GAAqBQ,EAC9BlW,UAAU,SACVyX,SAA0B,IAAhB/B,EACV6B,SAAU,SAACC,GACTrB,GAAsBD,SAOhC,kBAAC,GAAD,CACEpb,WAAYA,EACZgT,KAAM4H,EACNhI,KAAMsI,EACNpI,QAASsI,MAMjB,yBAAKlW,UAAU,cACb,yBAAKA,UAAU,oBAAoBM,MAAO,CAAC6D,eAAgB,SACzD,4BAAKpG,EAAE,4BACP,kBAAC,GAAD,CAAUN,UAAWA,MAIzB,yBAAKuC,UAAU,iBAEjB,kBAAC,GAAD,QC5KS4mB,OAnEf,WAAgB,IACP7oB,EAAKC,cAALD,EAEDqa,EAAQ,CACZ,CACEK,SAAU,IACVoO,KAAMrR,GACNqD,YAAa9a,EAAE,aACf2a,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,gBACVoO,KAAM/K,GACNjD,YAAa9a,EAAE,qBACf2a,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,YACVoO,KAAM7D,GACNnK,YAAa9a,EAAE,kBACf2a,wBAAyB,GACzBF,cAAc,GAEhB,CACEC,SAAU,oBACVoO,KAAMX,GACNrN,YAAa9a,EAAE,cACf2a,wBAAyB,GACzBF,cAAc,IAIlB,OACE,yBAAKxY,UAAU,OACb,kBAAC,IAAD,CACEulB,OAAQ,gBAAE5M,EAAF,EAAEA,SAAF,OACN,yBAAK3Y,UAAU,mBACb,kBAAC,GAAD,CAAQoY,MAAOA,IACf,kBAAC,IAAD,CAAO0O,OAAK,EAACje,KAAK,IAAI0c,OAAQ,kBAAM,kBAAC,IAAD,CAAU/iB,GAAG,SACjD,kBAAC,IAAD,CACEukB,QAAS,CAAC3lB,QAAS,GACnB4lB,QAAS,CAAC5lB,QAAS,GACnB6lB,SAAU,CAAC7lB,QAAS,GACpBpB,UAAU,iBACV2Y,SAAUA,GAETP,EAAMte,KAAI,SAACye,EAAMpb,GAChB,OACE,kBAAC,IAAD,CACE2pB,OAAK,EACLje,KAAM0P,EAAKE,SACXyO,UAAW3O,EAAKsO,KAChB9sB,IAAKoD,OAIX,kBAAC,IAAD,CAAUqF,GAAG,aC3DP2kB,QACW,cAA7B7kB,OAAOqW,SAASyO,UAEe,UAA7B9kB,OAAOqW,SAASyO,UAEhB9kB,OAAOqW,SAASyO,SAASrD,MACvB,2D,0CCfAsD,G,qLACeC,GACb/U,KAAKzU,MAAM6a,SAASC,WAAa0O,EAAU3O,SAASC,UACtDtW,OAAOka,SAAS,EAAG,K,+BAKrB,OAAOjK,KAAKzU,MAAMypB,a,GARIlH,IAAMmH,WAYjBC,eAAWJ,I,oBCfX,IACb7uB,KAAM,UACNkvB,OAFa,SAENpI,GACL,IAAI7gB,aAAaC,QAAQ,cAIzB,MAAO,UCFLipB,GAAmB,I,OAAIC,GAC7BD,GAAiBE,YAAYC,IAE7BhQ,KACGiQ,IAAIC,MACJD,IAAIJ,IACJM,KAAK,CACJC,OAAO,EACPC,YAAa,KACbC,QAAS,CACPC,SAAU,yBAEZC,cAAe,CACbC,aAAa,GAEfC,UAAW,CAETC,MAAO,CAAC,UAAW,cAAe,SAAU,eAAgB,YAAa,UAAW,OAAQ,gBAInF3Q,UAAf,ECjBAwN,IAASC,OACP,kBAAC,WAAD,CAAUmD,SAAU,IAClB,kBAAC,IAAD,CAAiB5Q,KAAMA,IACrB,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,UAKRnT,SAASiV,eAAe,SJgHpB,kBAAmB+O,WACrBA,UAAUC,cAAcjgB,MACrBgM,MAAK,SAACkU,GACLA,EAAaC,gBAEdjU,OAAM,SAACoH,GACNnR,QAAQmR,MAAMA,EAAM8M,c","file":"static/js/main.55b890b8.chunk.js","sourcesContent":["export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n\nexport const MAP_META = {\n  Myanmar: {\n    name: 'Myanmar',\n    geoDataFile: `${MAPS_DIR}/myanmar.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'myanmar',\n  },\n  Ayeyarwady: {\n    name: 'Ayeyarwady',\n    geoDataFile: `${MAPS_DIR}/ayeyarwady.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ayeyarwady',\n  },\n  Bago: {\n    name: 'Bago',\n    geoDataFile: `${MAPS_DIR}/bago.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bago',\n  },\n  Chin: {\n    name: 'Chin',\n    geoDataFile: `${MAPS_DIR}/chin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chin',\n  },\n  Kachin: {\n    name: 'Kachin',\n    geoDataFile: `${MAPS_DIR}/kachin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kachin',\n  },\n  Kayah: {\n    name: 'Kayah',\n    geoDataFile: `${MAPS_DIR}/kayah.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayah',\n  },\n  Kayin: {\n    name: 'Kayin',\n    geoDataFile: `${MAPS_DIR}/kayin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayin',\n  },\n  Magway: {\n    name: 'Magway',\n    geoDataFile: `${MAPS_DIR}/magway.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'magway',\n  },\n  Mandalay: {\n    name: 'Mandalay',\n    geoDataFile: `${MAPS_DIR}/mandalay.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mandalay',\n  },\n  Mon: {\n    name: 'Mon',\n    geoDataFile: `${MAPS_DIR}/mon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mon',\n  },\n  'Nay Pyi Taw': {\n    name: 'Nay Pyi Taw',\n    geoDataFile: `${MAPS_DIR}/naypyitaw.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'naypyitaw',\n  },\n  Rakhine: {\n    name: 'Rakhine',\n    geoDataFile: `${MAPS_DIR}/rakhine.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rakhine',\n  },\n  Sagaing: {\n    name: 'Sagaing',\n    geoDataFile: `${MAPS_DIR}/sagaing.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sagaing',\n  },\n  Shan: {\n    name: 'Shan',\n    geoDataFile: `${MAPS_DIR}/shan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'shan',\n  },\n  Tanintaryi: {\n    name: 'Tanintaryi',\n    geoDataFile: `${MAPS_DIR}/tanintaryi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tanintaryi',\n  },\n  Yangon: {\n    name: 'Yangon',\n    geoDataFile: `${MAPS_DIR}/yangon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'yangon',\n  },\n};\n\nexport const STATE_CODES = {\n  \"MM-07\": 'Ayayarwady',\n  \"MM-02\": 'Bago',\n  \"MM-14\": 'Chin',\n  \"MM-11\": 'Kachin',\n  \"MM-12\": 'Kayah',\n  \"MM-13\": 'Kayin',\n  \"MM-03\": 'Magway',\n  \"MM-04\": 'Mandalay',\n  \"MM-15\": 'Mon',\n  \"MM-18\": 'Naypyitaw',\n  \"MM-16\": 'Rakhine',\n  \"MM-01\": 'Sagaing',\n  \"MM-17\": 'Shan',\n  \"MM-05\": 'Tanintaryi',\n  \"MM-06\": 'Yangon',\n};\n\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\n\nconst stateCodes = [];\nObject.keys(STATE_CODES).map((key, index) => {\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const DISTRICTS_ARRAY = [\n  \n];\n","import moment from 'moment';\nimport {STATE_CODES} from '../constants';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+06:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} MMT`;\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      return moment(d.date, \"DD/MM/yyyy\").toDate() < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat) => ({\n    date: moment(stat.date, \"DD/MM/yyyy\").toDate(),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, \"DD/MM/yyyy\");\n    // Skip data from the current day\n    if (date.isBefore(today, 'Date')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {Tooltip} from 'react-lightweight-tooltip';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const {t} = useTranslation();\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const handleTooltip = (e) => {\n    e.stopPropagation();\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        /* onTouchStart={() => props.onHighlightState?.(state, props.index)}*/\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n              }`}\n              style={{display: !props.total ? '' : 'none'}}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            <span className=\"actual__title-wrapper\">\n              {t(`statenames.${state.state.toLowerCase()}`)}\n              {state.statenotes && (\n                <span onClick={handleTooltip}>\n                  <Tooltip\n                    content={[`${state.statenotes}`]}\n                    styles={{\n                      tooltip: {\n                        background: '#000',\n                        borderRadius: '10px',\n                        fontSize: '.8em',\n                        left: '250%',\n                        opacity: 0.65,\n                      },\n                      wrapper: {\n                        cursor: 'cursor',\n                        display: 'inline-block',\n                        position: 'relative',\n                        textAlign: 'center',\n                      },\n                      arrow: {\n                        left: '37%',\n                      },\n                    }}\n                  >\n                    <Icon.Info />\n                  </Tooltip>\n                </span>\n              )}\n            </span>\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td className=\"state-page-link\" colSpan={3}>\n          <Link to={`state/${state.statecode}`}>\n            <div>\n              <abbr>Visit state page</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  /* onTouchStart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }*/\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <React.Fragment>\n          <tr\n            className={`district`}\n            style={{display: props.reveal && !props.total ? '' : 'none'}}\n          >\n            <td className=\"unknown\" style={{fontWeight: 600}}>\n              Unknown\n              <Tooltip\n                content={['Awaiting patient-level details from State Bulletin']}\n                styles={{\n                  tooltip: {\n                    background: '#000',\n                    borderRadius: '5px',\n                    fontSize: '1rem',\n                    left: '250%',\n                    opacity: 1,\n                    padding: '0.5rem',\n                  },\n                  wrapper: {\n                    cursor: 'cursor',\n                    display: 'inline-block',\n                    position: 'relative',\n                    textAlign: 'center',\n                  },\n                }}\n              >\n                <Icon.Info />\n              </Tooltip>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts['Unknown'].delta.confirmed > 0\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                  : ''}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const {t} = useTranslation();\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  if (states.length > 0) {\n    return (\n      <React.Fragment>\n        <h5\n          className=\"table-fineprint fadeInUp\"\n          style={{animationDelay: '1.5s'}}\n        >\n          {t(\"data compilation info\")}\n        </h5>\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n          <thead>\n            <tr>\n              <th\n                className=\"sticky state-heading\"\n                onClick={(e) => handleSort(e, props)}\n              >\n                <div className=\"heading-content\">\n                  <abbr title=\"State\">{t('states')}</abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                    title=\"Confirmed\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('confirmed.shorter')\n                        : t('confirmed.short')\n                      : t('confirmed.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'confirmed'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                    title=\"Active\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('active.shorter')\n                        : t('active.short')\n                      : t('active.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'active' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                    title=\"Recovered\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('recovered.shorter')\n                        : t('recovered.short')\n                      : t('recovered.full')}\n                  </abbr>\n                  <div\n                    className={\n                      sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                    }\n                  ></div>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'recovered'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                    title=\"Deaths\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('deceased.shorter')\n                        : t('deceased.short')\n                      : t('deceased.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {states.map((state, index) => {\n              if (index !== 0 && state.confirmed > 0) {\n                return (\n                  <Row\n                    key={index}\n                    index={index}\n                    state={state}\n                    total={false}\n                    reveal={revealedStates[state.state]}\n                    districts={\n                      state.state in districts\n                        ? districts[state.state].districtData\n                        : []\n                    }\n                    onHighlightState={props.onHighlightState}\n                    onHighlightDistrict={props.onHighlightDistrict}\n                    handleReveal={handleReveal}\n                  />\n                );\n              }\n              return null;\n            })}\n          </tbody>\n\n          <tbody>\n            {states.length > 1 && props.summary === false && (\n              <Row\n                key={0}\n                state={states[0]}\n                total={true}\n                onHighlightState={props.onHighlightState}\n              />\n            )}\n          </tbody>\n        </table>\n        <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n          {t('States Affected', {count})}\n        </h5>\n      </React.Fragment>\n    );\n  } else {\n    return <div style={{height: '50rem'}}></div>;\n  }\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\nimport {formatNumber} from '../utils/common-functions';\nimport {useTranslation} from 'react-i18next';\n\nfunction Level(props) {\n  const {t} = useTranslation();\n  const [data, setData] = useState(props.data);\n\n  useEffect(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  }, [props.data]);\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>{(t(\"confirmed.full\"))}</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">{t(\"active.full\")}</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">{t(\"recovered.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">{t(\"deceased.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","/* Source: https://observablehq.com/@d3/color-legend */\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) {\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [0, 0, width, height])\n    .style('overflow', 'visible')\n    .style('display', 'block');\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.domain())\n      .join('rect')\n      .attr('x', x)\n      .attr('y', marginTop)\n      .attr('width', Math.max(0, x.bandwidth() - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append('g')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .append('text')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement('canvas');\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import * as d3 from 'd3';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport * as topojson from 'topojson';\nimport { MAP_TYPES } from '../constants';\nimport legend from './legend';\nimport {useTranslation} from 'react-i18next';\n\nconst propertyFieldMap = {\n  country: 'ST',\n  state: 'DT',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n      // Set size of map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* LEGEND */\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll('*').remove();\n      const redInterpolator = (t) => d3.interpolateReds(t * 0.85);\n      const colorScale = d3.scaleSequential(\n        [0, statistic.maxConfirmed],\n        redInterpolator\n      );\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const margin = {left: 0.02 * widthLegend, right: 0.02 * widthLegend};\n      const barWidth = widthLegend - margin.left - margin.right;\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend\n        .append('g')\n        .style('transform', `translateX(${margin.left}px)`)\n        .append(() =>\n          legend({\n            color: colorScale,\n            title: t('map.legends.confirmedcases'),\n            width: barWidth,\n            height: 0.8 * heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (!Number.isInteger(d)) return;\n              if (i === n.length - 1) return d + '+';\n              return d;\n            },\n          })\n        );\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* DRAW MAP */\n      let onceTouchedRegion = null;\n      const g = svg.append('g').attr('class', mapMeta.graphObjectName);\n      g.append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .join('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color = n === 0 ? '#ffffff' : colorScale(n);\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      g.append('path')\n        .attr('class', 'borders')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseover = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.on('click', () => {\n        setSelectedRegion(null);\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n          setHoveredRegion('Total', mapMeta);\n      });\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n      isCountryLoaded,\n      t,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        propertyFieldMap['state'] in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAP_META} from '../constants';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {formatNumber} from '../utils/common-functions';\nimport {useTranslation} from 'react-i18next';\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  forwardRef,\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META.Myanmar;\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {districtData:{}};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  // useEffect(() => {\n  //   setTestObj(\n  //     stateTestData.find(\n  //       (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n  //     )\n  //   );\n  // }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className=\"MapExplorer fadeInUp\"\n      style={{animationDelay: '1.5s'}}\n      ref={forwardRef}\n    >\n      <div className=\"header\">\n        <h1>{t(\"Map\", {name: t(currentMap.name)})}</h1>\n        <h6>\n        {window.innerWidth <= 769 ?\n        (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.tap.state') : t('map.tap.district'))\n        : (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.hover.state') : t('map.hover.district'))}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? t('confirmed.short') : t('confirmed.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('active.short') : t('active.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('recovered.short') : t('recovered.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('deceased.short') : t('deceased.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{currentMap.mapType === MAP_TYPES.COUNTRY ? t(`statenames.${name.toLowerCase()}`) : name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>{t(\"Last updated\")}</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {t('ago', {time: isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  )})}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1 className=\"district-confirmed\">\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n            <br />\n            <span style={{fontSize: '0.75rem', fontWeight: 600}}>\n              {t(\"confirmed.full\")}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('Myanmar')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n        isCountryLoaded={isCountryLoaded}\n      />\n    </div>\n  );\n}\n\nexport default MapExplorer;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport {sliceTimeseriesFromEnd} from '../utils/common-functions';\nimport {useResizeObserver} from '../utils/hooks';\nimport {formatNumber} from '../utils/common-functions';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeries(props) {\n  const {t} = useTranslation();\n\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [props.timeseries, lastDaysCount, transformTimeSeries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n\n      const dateMin = new Date(timeseries[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(timeseries[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g, yScale) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(timeseries, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            Math.min(\n              0,\n              d3.min(timeseries, (d) => d.dailyactive)\n            ),\n            Math.max(\n              1,\n              yBuffer *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(timeseries[T - 1].date)).attr(\n            'cy',\n            yScale(timeseries[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg.select('.x-axis').transition(t).call(xAxis, yScale);\n        /* Y axis */\n        svg.select('.y-axis').transition(t).call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(timeseries, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...timeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(timeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('y1', yScale(0))\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date);\n  let dateStr = focusDate.format('DD MMMM');\n  dateStr += focusDate.isSame(moment().subtract(1, 'days'), 'day')\n    ? ' Yesterday'\n    : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '2.7s'}}\n    >\n      <div className=\"timeseries\">\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"confirmed.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Active</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"recovered.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"deceased.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          {t(\"Beginning\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label={t(\"1 month\")}\n        >\n          {t(\"1 Month\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label={t(\"14 days\")}\n        >\n          {t(\"2 Weeks\")}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import {useState, useEffect} from 'react';\nimport {ResizeObserver} from '@juggle/resize-observer';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 0, right: 10, bottom: 30, left: 0};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React, {useState, useEffect} from 'react';\nimport {formatDistance, format} from 'date-fns';\nimport axios from 'axios';\n\nfunction Updates(props) {\n  const [updates, setUpdates] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  let currentDate = new Date();\n\n  useEffect(() => {\n    if (fetched === false) {\n      axios\n        .get('https://raw.githubusercontent.com/thantthet/covid19-api/master/updatelog/log.json')\n        .then((response) => {\n          setUpdates(response.data);\n          setFetched(true);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [fetched]);\n\n  return (\n    <React.Fragment>\n      <div className=\"updates\">\n        <div className=\"updates-header\">\n          <h2>{format(currentDate, 'd MMM')}</h2>\n        </div>\n        {updates\n          .slice(-5)\n          .reverse()\n          .map(function (activity, index) {\n            activity.update = activity.update.replace('\\n', '<br/>');\n            const activityDate = new Date(activity.timestamp * 1000);\n            const addHeader = () => {\n              currentDate = activityDate;\n              return (\n                <>\n                  {index === 0 ? (\n                    <div className=\"update\">\n                      <h4>No updates yet!</h4>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                  <div className=\"updates-header\">\n                    <h2>{format(activityDate, 'd MMM')}</h2>\n                  </div>\n                </>\n              );\n            };\n            return (\n              <>\n                {activityDate.getDate() !== currentDate.getDate()\n                  ? addHeader()\n                  : ' '}\n                <div key={index} className=\"update\">\n                  <h5>\n                    {formatDistance(\n                      new Date(activity.timestamp * 1000),\n                      new Date()\n                    ) + ' ago'}\n                  </h5>\n                  <h4\n                    dangerouslySetInnerHTML={{\n                      __html: activity.update,\n                    }}\n                  ></h4>\n                </div>\n              </>\n            );\n          })}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Updates;\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction Footer(props) {\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>We stand with everyone fighting on the frontlines</h5>\n      <a\n        href=\"https://github.com/thantthet/covid19myanmar-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>A fork of covid19india.org</span>\n      </a>\n      <a\n        className=\"button excel\"\n        href=\"http://covidmyanmar.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>Live data from covidmyanmar.com</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport axios from 'axios';\n\nimport {MAP_META} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from '../utils/common-functions';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nimport Table from './table';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\nimport Minigraph from './minigraph';\nimport Updates from './updates';\nimport Footer from './footer';\n\nfunction Home(props) {\n  const {t} = useTranslation();\n\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [activeStateCode, setActiveStateCode] = useState('TT'); // TT -> India\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [seenUpdates, setSeenUpdates] = useState(false);\n  const [newUpdate, setNewUpdate] = useState(true);\n\n  useEffect(() => {\n    // this if block is for checking if user opened a page for first time.\n    if (localStorage.getItem('anyNewUpdate') === null) {\n      localStorage.setItem('anyNewUpdate', true);\n    } else {\n      setSeenUpdates(true);\n      setNewUpdate(localStorage.getItem('anyNewUpdate') === 'false');\n    }\n    if (fetched === false) {\n      getStates();\n      axios\n        .get('https://raw.githubusercontent.com/thantthet/covid19-api/master/updatelog/log.json')\n        .then((response) => {\n          const currentTimestamp = response.data\n            .slice()\n            .reverse()[0]\n            .timestamp.toString();\n          // Sets and Updates the data in the local storage.\n          if (localStorage.getItem('currentItem') !== null) {\n            if (localStorage.getItem('currentItem') !== currentTimestamp) {\n              localStorage.setItem('currentItem', currentTimestamp);\n              localStorage.setItem('anyNewUpdate', true);\n            }\n          } else {\n            localStorage.setItem('currentItem', currentTimestamp);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        {data},\n        stateDistrictWiseResponse,\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/data.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/state_district_wise.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/states_daily.json'),\n      ]);\n      setStates(data.statewise);\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series); // TT -> India\n      setTimeseries(ts);\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback(({statecode}) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  const refs = [useRef(), useRef(), useRef()];\n  // const scrollHandlers = refs.map((ref) => () =>\n  //   window.scrollTo({\n  //     top: ref.current.offsetTop,\n  //     behavior: 'smooth',\n  //   })\n  // );\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"actions\">\n              <h5>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDateAbsolute(lastUpdated)}\n              </h5>\n              {!showUpdates && (\n                <div className=\"bell-icon\">\n                  <Icon.Bell\n                    onClick={() => {\n                      setShowUpdates(!showUpdates);\n                      localStorage.setItem('anyNewUpdate', false);\n                      setSeenUpdates(true);\n                      setNewUpdate(\n                        localStorage.getItem('anyNewUpdate') === 'false'\n                      );\n                    }}\n                  />\n                  {seenUpdates ? (\n                    !newUpdate ? (\n                      <div className=\"indicator\"></div>\n                    ) : (\n                      ''\n                    )\n                  ) : (\n                    <div className=\"indicator\"></div>\n                  )}\n                </div>\n              )}\n              {showUpdates && (\n                <Icon.BellOff\n                  onClick={() => {\n                    setShowUpdates(!showUpdates);\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          {showUpdates && <Updates />}\n\n          {states.length ? <Level data={states[0]} /> : ''}\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\n          {fetched && (\n            <Table\n              forwardRef={refs[0]}\n              states={states}\n              summary={false}\n              stateDistrictWiseData={stateDistrictWiseData}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                forwardRef={refs[1]}\n                mapMeta={MAP_META.Myanmar}\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                // stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                onMapHighlightChange={onMapHighlightChange}\n                isCountryLoaded={true}\n              />\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={refs[2]}\n              >\n                <h1>{t(\"Spread Trends\")}</h1>\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>{t(\"Cumulative\")}</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>{t(\"Daily\")}</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label className=\"main\">{t(\"Scale Modes\")}</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n                    <input\n                      id=\"timeseries-mode\"\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n                    <input\n                      id=\"timeseries-logmode\"\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"trends-state-name\">\n                  <select\n                    onChange={({target}) => {\n                      onHighlightState(JSON.parse(target.value));\n                    }}\n                  >\n                    {states.map((s) => {\n                      return (\n                        <option\n                          key={s.statecode}\n                          value={JSON.stringify(s)}\n                          selected={s.statecode === activeStateCode}\n                        >\n                          {s.state === 'Total' ? t('All States') : t(`statenames.${s.state.toLowerCase()}`)}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries[activeStateCode]}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport locales from '../i18n/locales.json';\n\nexport default function LanguageSwitcher() {\n  const {i18n, t} = useTranslation();\n\n  const onLanguageChange = (e) => {\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return (\n    <div className=\"select-dropdown\">\n      <select onChange={onLanguageChange} aria-label={t('Select Language')} value={i18n.language}>\n        {Object.entries(locales).map(([key, lang]) => (\n          <option key={key} value={key}>\n            {lang}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport LanguageSwitcher from './languageswitcher';\nimport {useTranslation} from 'react-i18next';\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nfunction Navbar({pages}) {\n  const {t} = useTranslation();\n\n  const [expand, setExpand] = useState(false);\n\n  return (\n    <div\n      className=\"Navbar\"\n      style={{width: window.innerWidth > 769 && expand ? '6rem' : ''}}\n    >\n      <div className=\"navbar-left\"><LanguageSwitcher /></div>\n      <div className=\"navbar-middle\">\n        <Link to=\"/\">\n          Covid19<span>Myanmar</span>\n        </Link>\n      </div>\n      <div\n        className=\"navbar-right\"\n        style={{\n          background: expand ? '#4c75f2' : '',\n          color: expand ? 'white' : '',\n        }}\n        onClick={() => {\n          setExpand(!expand);\n        }}\n      >\n        {expand ? t('Close') : t('Menu')}\n      </div>\n      {expand && (\n        <div\n          className=\"expand\"\n          style={{left: window.innerWidth > 769 && expand ? '6rem' : ''}}\n        >\n          {pages.map((page, i) => {\n            if (page.showInNavbar === true) {\n              return (\n                <Link\n                  to={page.pageLink}\n                  key={i}\n                  onClick={() => {\n                    setExpand(false);\n                  }}\n                >\n                  <span\n                    {...navLinkProps(\n                      page.pageLink,\n                      page.animationDelayForNavbar\n                    )}\n                  >\n                    {page.displayName}\n                  </span>\n                </Link>\n              );\n            }\n            return null;\n          })}\n          <div\n            className=\"expand-bottom fadeInUp\"\n            style={{animationDelay: '1s'}}\n          >\n            <h5>A crowdsourced initiative.</h5>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {format} from 'date-fns';\n\nfunction PatientsView(props) {\n  const logs = props.logs;\n\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(props.summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div\n                  key={index}\n                  className={`day ${props.summary ? 'summary' : ''}`}\n                >\n                  {logs[day]\n                    .slice(props.summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={props.applyClass(patient)}\n                          onClick={() => {\n                            props.setModal(true);\n                            props.setPatient(patient);\n                          }}\n                        >\n                          <h3>\n                            {props.expand ? `P${patient.patientnumber}` : ''}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {parse} from 'date-fns';\nimport * as Icon from 'react-feather';\nimport PatientsView from './patientsview';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  // When the user clicks anywhere outside of the modal, close modal\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  useEffect(() => {\n    if (modal) document.body.classList.add('modal-open');\n    else document.body.classList.remove('modal-open'); // to remove modal-open class from body\n  }, [modal]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndex) => {\n    if (patientIndex === '') return;\n    try {\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (+patient.patientnumber === +patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'french'\n              ? 'is-fr'\n              : patient.nationality === 'swiz'\n              ? 'is-ch'\n              : patient.nationality === 'american'\n              ? 'is-us'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3 className=\"contracted-from\">\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected.split(',').map((patientid, i) => {\n                    return <span key={i} onClick={() => switchPatient(patientid)}>{patientid},</span>\n                  })\n                  : '?'}\n              </h3>\n\n              <h5>Detected City</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>Detected District</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>Detected State</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import React from 'react';\nimport {Parser} from 'json2csv';\nimport * as Icon from 'react-feather';\n\nfunction CSVDownloadLink(props) {\n  if (!props.patients) {\n    return '';\n  }\n  try {\n    const parser = new Parser(Object.keys(props.patients[0]));\n    const csv = parser.parse(props.patients);\n    const data = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n    return (\n      <a href={data} download=\"patients.csv\">\n        <code>CSV</code>\n      </a>\n    );\n  } catch (e) {\n    console.log(e);\n    return (\n      <a href=\"/\">\n        <code>CSV</code>\n      </a>\n    );\n  }\n}\n\nfunction DownloadBlock(props) {\n  if (!props.patients) {\n    return '';\n  }\n\n  const dataJSON =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(props.patients));\n\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <button className=\"button\">\n        <Icon.Download />\n        <CSVDownloadLink patients={props.patients} />\n      </button>\n      <button className=\"button\">\n        <Icon.Download />\n        <a href={dataJSON} download=\"patients.json\">\n          JSON\n        </a>\n      </button>\n    </div>\n  );\n}\n\nexport default DownloadBlock;\n","import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport axios from 'axios';\nimport {format, parse} from 'date-fns';\nimport {useTranslation} from 'react-i18next';\n\nimport Patients from './patients';\nimport DownloadBlock from './downloadblock';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const {t} = useTranslation();\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [error, setError] = useState('');\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: '',\n    // unfilter until data are low enough to show\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffect(() => {\n    async function fetchRawData() {\n      const response = await axios.get(\n        'https://raw.githubusercontent.com/thantthet/covid19-api/master/raw_data.json'\n      );\n      if (response.data) {\n        setPatients(response.data.raw_data.reverse());\n        setFetched(true);\n      } else {\n        setError(\"Couldn't fetch patient data. Try again after sometime.\");\n        console.log(response);\n      }\n    }\n\n    if (!fetched) {\n      fetchRawData();\n    }\n  }, [fetched]);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    setFilteredPatients(filterByObject(patients, filters));\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      {error ? <div className=\"alert alert-danger\">{error}</div> : ''}\n\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select State\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? 'All' : state}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? 'All' : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select Day\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'dateannounced'\n              ).map((date, index) => {\n                return (\n                  <option key={index} value={date}>\n                    {date === ''\n                      ? 'All'\n                      : format(\n                          parse(date, 'dd/MM/yyyy', new Date()),\n                          'dd MMM, yyyy'\n                        )}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">Female</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">Male</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">Local</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">Imported</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">TBD</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n              <div className=\"circle is-fr\"></div>\n              <h5 className=\"is-us\">Fr</h5>\n              <div className=\"circle is-ch\"></div>\n              <h5 className=\"is-us\">Ch</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Color modes\n              </option>\n              <option value=\"genders\">Genders</option>\n              <option value=\"transmission\">Transmission</option>\n              <option value=\"nationality\">Nationality</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>{t('demographics.title')}</h1>\n          {/* <h3>No. of Patients: {patients.length}</h3>*/}\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n        {t('demographics.disclaimer')}\n        </h6>\n      </div>\n\n      <div className=\"reminder fadeInUp\" style={{animationDelay: '1s'}}>\n        <p>\n        {t('demographics.reminder.line1')}\n        <br/>\n        <br/>\n        {t('demographics.reminder.line2')}\n        </p>\n      </div>\n\n      <div className=\"patientdb-wrapper\">\n        <Patients\n          patients={filteredPatients}\n          colorMode={colorMode}\n          expand={scaleMode}\n        />\n      </div>\n      <DownloadBlock patients={patients} />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction GenderChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  let male = 0;\n  let female = 0;\n  let unknown = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female, unknown],\n        backgroundColor: ['blue', 'pink', 'grey'],\n        label: 'Hola',\n      },\n    ],\n    labels: ['Male', 'Female', 'Awaiting Details'],\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction AgeChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  const ages = Array(10).fill(0);\n  let unknown = 0;\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 0,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction NationalityChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n  let unknown = 0;\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      unknown++;\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff7272',\n          '#ffb385',\n          '#fae7cb',\n          '#ffd31d',\n          '#00a8cc',\n          '#005082',\n          '#000839',\n          '#ffa41b',\n          '#f1e7b6',\n          '#400082',\n          '#fe346e',\n          '#5a3f11',\n          '#9c5518',\n          '#f67575',\n          '#d4f8e8',\n          '#1eb2a6',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\nimport {getStateName} from '../../utils/common-functions';\nfunction AllStatesChart(props) {\n  const dates = [];\n  const chartReference = React.createRef();\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD/MM/yyyy'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 1.5,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 0,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  function toggleSelection() {\n    // Get reference of chartInstance and update it\n    const ci = chartReference.current.chartInstance;\n    for (let i = 0; i < ci.data.datasets.length; i++) {\n      const meta = ci.getDatasetMeta(i);\n      meta.hidden =\n        meta.hidden === null\n          ? !chartReference.current.chartInstance.data.datasets[i].hidden\n          : null;\n    }\n    ci.update();\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} ref={chartReference} />\n      </div>\n      <div className=\"chart-note\" style={{marginTop: '0px', height: '30px'}}>\n        <button onClick={toggleSelection}>Toggle Selection</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/YYYY'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff073a',\n        label: 'Confirmed',\n        borderColor: '#ff073a',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#28a745',\n        label: 'Recovered',\n        borderColor: '#28a745',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: 'Deceased',\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    events: [\n      'click',\n      'mousemove',\n      'mouseout',\n      'touchstart',\n      'touchmove',\n      'touchend',\n    ],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/yyyy').format('DD MMM'));\n      confirmed.push(\n        data.dailyconfirmed - data.dailyrecovered - data.dailydeceased\n      );\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#28a745',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'Active',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport GenderChart from './Charts/genderchart';\nimport AgeChart from './Charts/agechart';\nimport NationalityChart from './Charts/nationalitychart';\nimport AllStatesChart from './Charts/allstates';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\n\nfunction DeepDive(props) {\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/data.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/raw_data.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart\n            title=\"Myanmar - Total Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart\n            title=\"Myanmar - Daily Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AllStatesChart\n            title=\"States - Total Cases\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title=\"Patient Gender\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title=\"Patient Age\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title=\"Patient Nationality\" data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import axios from 'axios';\nimport * as d3 from 'd3';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport React, {useEffect, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Clusters({stateCode}) {\n  const [fetched, setFetched] = useState(false);\n  const [stateRawData, setStateRawData] = useState([]);\n  const [networkData, setNetworkData] = useState([]);\n\n  function prepareNetworkData(data) {\n    // Parse data\n    let contractedStr = data.reduce(\n      (acc, v) => acc + v.contractedfromwhichpatientsuspected + ', ',\n      ''\n    );\n    contractedStr = contractedStr.replace(/\\s+/g, '');\n    const sources = new Set(contractedStr.match(/[^,]+/g));\n\n    // Prepare nodes and links\n    const nodes = [];\n    const nodesSet = new Set();\n    const links = [];\n    data.forEach((d) => {\n      const contractedStr = d.contractedfromwhichpatientsuspected.replace(\n        /\\s+/g,\n        ''\n      );\n      const contracted = contractedStr.match(/[^,]+/g);\n      if (contracted) {\n        const pid = 'P' + d.patientnumber;\n        nodesSet.add(pid);\n        nodes.push({\n          id: pid,\n          group: sources.has(pid) ? 'source' : 'target',\n          raw: d,\n        });\n        contracted.forEach((p) => {\n          links.push({\n            source: p,\n            target: pid,\n          });\n        });\n      }\n    });\n\n    // Add missing nodes\n    links.forEach((d) => {\n      if (!nodesSet.has(d.source)) {\n        nodes.push({\n          id: d.source,\n          group: 'source',\n          raw: d.source,\n        });\n        nodesSet.add(d.source);\n      }\n    });\n    return {\n      nodes: nodes,\n      links: links,\n    };\n  }\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const rawDataResponse = await axios.get(\n          'https://raw.githubusercontent.com/thantthet/covid19-api/master/raw_data.json'\n        );\n        setStateRawData(\n          rawDataResponse.data.raw_data.filter((d) => d.statecode === stateCode)\n        );\n        setFetched(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (!fetched) {\n      getData();\n    }\n  }, [fetched, stateCode]);\n\n  useEffect(() => {\n    setNetworkData(prepareNetworkData(stateRawData));\n  }, [stateRawData]);\n\n  const NetworkGraph = () => {\n    const fgRef = useRef();\n\n    useEffect(() => {\n      const fg = fgRef.current;\n      const width = document.getElementById('clusters').offsetWidth;\n      const height = width;\n      // Deactivate existing forces\n      fg.d3Force('charge').strength(-60);\n      fg.d3Force('collision', d3.forceCollide());\n      fg.d3Force('x', d3.forceX().strength(0.3));\n      fg.d3Force('y', d3.forceY().strength(0.3));\n      fg.d3Force('box', boxForce);\n\n      // Custom force to keep everything inside box\n      function boxForce() {\n        for (let i = 0, n = networkData.nodes.length; i < n; ++i) {\n          const currNode = networkData.nodes[i];\n          currNode.x = Math.max(-width, Math.min(width, currNode.x));\n          currNode.y = Math.max(-height, Math.min(height, currNode.y));\n        }\n      }\n    }, []);\n\n    const width = document.getElementById('clusters').offsetWidth;\n    const height = width;\n\n    return (\n      <ForceGraph2D\n        ref={fgRef}\n        width={width}\n        height={height}\n        graphData={networkData}\n        nodeLabel='id'\n        nodeColor={(node) => (node.group === 'source' ? '#dc3545' : 'gray')}\n        linkDirectionalParticleColor={() => 'red'}\n        linkDirectionalParticles={1}\n        linkDirectionalParticleWidth={(link) =>\n          link.source.id[0] === 'P' ? 2 : 0\n        }\n        enableZoomPanInteraction={false}\n      />\n    );\n  };\n\n  useEffect(() => {\n    ReactDOM.render(<NetworkGraph />, document.getElementById('clusters'));\n  }, [networkData]);\n\n  return <div id='clusters'></div>;\n}\n\nexport default Clusters;\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\n\nfunction DeltaBarGraph({timeseries, arrayKey}) {\n  const [data, setData] = useState([]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    setData(timeseries);\n  }, [timeseries]);\n\n  useEffect(() => {\n    if (!data.length) return;\n\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    const margin = {top: 50, right: 0, bottom: 50, left: 0};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const barRadius = 5;\n\n    const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((d) => formatTime(d.date)))\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        0,\n        Math.max(\n          1,\n          d3.max(data, (d) => d[arrayKey])\n        ),\n      ])\n      .range([chartBottom, margin.top]); // - barRadius\n\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n\n    svg\n      .select('.x-axis')\n      .style('transform', `translateY(${chartBottom}px)`)\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('x', -40)\n      .attr('dy', '.35em')\n      .attr('transform', 'rotate(-90)')\n      .style('text-anchor', 'start');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .join('path')\n      .attr('class', 'bar')\n      .attr('d', (d) =>\n        roundedBar(\n          xScale(formatTime(d.date)),\n          chartBottom,\n          xScale.bandwidth(),\n          chartBottom - yScale(d[arrayKey]),\n          barRadius\n        )\n      )\n      .attr('fill', (d, i) => (i < data.length - 1 ? '#dc354590' : '#dc3545'));\n\n    svg\n      .selectAll('.delta')\n      .data(data)\n      .join('text')\n      .attr('class', 'delta')\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '11px')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('y', (d) => yScale(d[arrayKey]) - 6)\n      .text((d) => d[arrayKey])\n      .append('tspan')\n      .attr('class', 'percent')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('dy', '-1.2em')\n      .text((d, i) =>\n        i && data[i - 1][arrayKey]\n          ? d3.format('+.1%')(\n              (data[i][arrayKey] - data[i - 1][arrayKey]) /\n                data[i - 1][arrayKey]\n            )\n          : ''\n      );\n  }, [data, arrayKey]);\n\n  return (\n    <div className=\"DeltaBarGraph fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default DeltaBarGraph;\n\nfunction roundedBar(x, y, w, h, r, f) {\n  if (!h) return;\n  // Flag for sweep:\n  if (f === undefined) f = 1;\n  // x coordinates of top of arcs\n  const x0 = x + r;\n  const x1 = x + w - r;\n  // y coordinates of bottom of arcs\n  const y0 = y - h + r;\n\n  const parts = [\n    'M',\n    x,\n    y,\n    'L',\n    x,\n    y0,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x0,\n    y - h,\n    'L',\n    x1,\n    y - h,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x + w,\n    y0,\n    'L',\n    x + w,\n    y,\n    'Z',\n  ];\n  return parts.join(' ');\n}\n","import axios from 'axios';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nimport {\n  formatDateAbsolute,\n  parseStateTimeseries,\n} from '../utils/common-functions';\nimport {MAP_META, STATE_CODES} from '../constants';\n\nimport Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeries from './timeseries';\nimport Footer from './footer';\n\nfunction State(props) {\n  const {t} = useTranslation();\n  const mapRef = useRef();\n  const tsRef = useRef();\n\n  const {stateCode} = useParams();\n\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [graphOption, setGraphOption] = useState(1);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [stateData, setStateData] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES[stateCode]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getState(stateCode);\n    }\n  }, [fetched, stateCode]);\n\n  const getState = async (code) => {\n    try {\n      const [\n        {data: dataResponse},\n        {data: stateDistrictWiseResponse},\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/data.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/state_district_wise.json'),\n        axios.get('https://raw.githubusercontent.com/thantthet/covid19-api/master/states_daily.json'),\n      ]);\n      const states = dataResponse.statewise;\n      setStateData(states.find((s) => s.statecode === code));\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      setTimeseries(ts);\n      const name = STATE_CODES[code];\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name],\n      });\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <div className=\"breadcrumb fadeInUp\">\n            <Link to=\"/\">Home</Link>/\n            <Link to={`${stateCode}`}>{stateName}</Link>\n          </div>\n          <div className=\"header\">\n            <div\n              className=\"header-left fadeInUp\"\n              style={{animationDelay: '0.3s'}}\n            >\n              <h1>{t(`statenames.${stateName.toLowerCase()}`)}</h1>\n              <h5>\n                {t('statepage.lastUpdatedOn', {time: Object.keys(stateData).length\n                  ? formatDateAbsolute(stateData.lastupdatedtime)\n                  : ''})}\n              </h5>\n            </div>\u001b\n          </div>\n\n          {fetched && <Level data={stateData} />}\n          {fetched && <Minigraph timeseries={timeseries} />}\n          {fetched && (\n            <React.Fragment>\n              {\n                <MapExplorer\n                  forwardRef={mapRef}\n                  mapMeta={MAP_META[stateName]}\n                  states={[stateData]}\n                  stateDistrictWiseData={districtData}\n                  isCountryLoaded={false}\n                />\n              }\n            </React.Fragment>\n          )}\n\n          {fetched && (\n            <div className=\"meta-secondary\">\n              <div className=\"unknown\">\n                <Icon.AlertCircle />\n                <div className=\"unknown-right\">\n                  Awaiting district details for{' '}\n                  {districtData[stateName]?.districtData['Unknown']\n                    ?.confirmed || '0'}{' '}\n                  cases\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          {fetched && (\n            <React.Fragment>\n              <div className=\"district-bar\">\n                <div\n                  className=\"district-bar-left fadeInUp\"\n                  style={{animationDelay: '0.6s'}}\n                >\n                  <h2>{t(\"statepage.topDistrict\")}</h2>\n                  <div className=\"districts\">\n                    {districtData[stateName]\n                      ? Object.keys(districtData[stateName].districtData)\n                          .sort(\n                            (a, b) =>\n                              districtData[stateName].districtData[b]\n                                .confirmed -\n                              districtData[stateName].districtData[a].confirmed\n                          )\n                          .slice(0, 6)\n                          .map((district, index) => {\n                            return (\n                              <div key={index} className=\"district\">\n                                <h2>\n                                  {\n                                    districtData[stateName].districtData[\n                                      district\n                                    ].confirmed\n                                  }\n                                </h2>\n                                <h5>{district}</h5>\n                                <div className=\"delta\">\n                                  <Icon.ArrowUp />\n                                  <h6>\n                                    {\n                                      districtData[stateName].districtData[\n                                        district\n                                      ].delta.confirmed\n                                    }\n                                  </h6>\n                                </div>\n                              </div>\n                            );\n                          })\n                      : ''}\n                  </div>\n                </div>\n                <div className=\"district-bar-right\">\n                  {\n                    <DeltaBarGraph\n                      timeseries={timeseries.slice(-5)}\n                      arrayKey={'dailyconfirmed'}\n                    />\n                  }\n                </div>\n              </div>\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={tsRef}\n              >\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>{t(\"Cumulative\")}</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>{t(\"Daily\")}</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label className=\"main\">{t(\"Scale Modes\")}</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        <div className=\"state-left\">\n          <div className=\"Clusters fadeInUp\" style={{animationDelay: '0.8s'}}>\n            <h1>{t(\"Network of transmission\")}</h1>\n            <Clusters stateCode={stateCode} />\n          </div>\n        </div>\n\n        <div className=\"state-right\"></div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default State;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AnimatedSwitch} from 'react-router-transition';\nimport {useTranslation} from 'react-i18next';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport PatientDB from './components/patientdb';\nimport DeepDive from './components/deepdive';\nimport State from './components/state';\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: t('menu.home'),\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: t('menu.demographics'),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: t('menu.deepdrive'),\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: t('menu.state'),\n      animationDelayForNavbar: 0.8,\n      showInNavbar: false,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Route\n        render={({location}) => (\n          <div className=\"Almighty-Router\">\n            <Navbar pages={pages} />\n            <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n            <AnimatedSwitch\n              atEnter={{opacity: 0}}\n              atLeave={{opacity: 0}}\n              atActive={{opacity: 1}}\n              className=\"switch-wrapper\"\n              location={location}\n            >\n              {pages.map((page, i) => {\n                return (\n                  <Route\n                    exact\n                    path={page.pageLink}\n                    component={page.view}\n                    key={i}\n                  />\n                );\n              })}\n              <Redirect to=\"/\" />\n            </AnimatedSwitch>\n          </div>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","export default {\n  name: 'default',\n  lookup(options) {\n    if (localStorage.getItem('i18nextLng')) {\n      return undefined\n    }\n    // defaults\n    return 'my-MM';\n  }\n};","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Detector from './detector';\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.addDetector(Detector);\n\ni18n\n  .use(Backend)\n  .use(languageDetector)\n  .init({\n    debug: false,\n    fallbackLng: 'en',\n    backend: {\n      loadPath: '/locales/{{lng}}.json',\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n    detection: {\n      // order and from where user language should be detected\n      order: ['default', 'querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain']\n    }\n  });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ScrollToTop from './utils/ScrollToTop';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <I18nextProvider i18n={i18n}>\n      <Router>\n        <ScrollToTop>\n          <App />\n        </ScrollToTop>\n      </Router>\n    </I18nextProvider>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}